["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/utils/scrollLeft.js"],"~:js","shadow$provide.module$node_modules$$mui$utils$scrollLeft=function(global,require,module,exports){function detectScrollType(){if(cachedType)return cachedType;const dummy=document.createElement(\"div\"),container=document.createElement(\"div\");container.style.width=\"10px\";container.style.height=\"1px\";dummy.appendChild(container);dummy.dir=\"rtl\";dummy.style.fontSize=\"14px\";dummy.style.width=\"4px\";dummy.style.height=\"1px\";dummy.style.position=\"absolute\";dummy.style.top=\"-1000px\";dummy.style.overflow=\"scroll\";\ndocument.body.appendChild(dummy);cachedType=\"reverse\";0<dummy.scrollLeft?cachedType=\"default\":(dummy.scrollLeft=1,0===dummy.scrollLeft&&(cachedType=\"negative\"));document.body.removeChild(dummy);return cachedType}Object.defineProperty(exports,\"__esModule\",{value:!0});exports.detectScrollType=detectScrollType;exports.getNormalizedScrollLeft=function(element,direction){const scrollLeft=element.scrollLeft;if(\"rtl\"!==direction)return scrollLeft;switch(detectScrollType()){case \"negative\":return element.scrollWidth-\nelement.clientWidth+scrollLeft;case \"reverse\":return element.scrollWidth-element.clientWidth-scrollLeft;default:return scrollLeft}};let cachedType}","~:source","shadow$provide[\"module$node_modules$$mui$utils$scrollLeft\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.detectScrollType = detectScrollType;\nexports.getNormalizedScrollLeft = getNormalizedScrollLeft;\n// Source from https://github.com/alitaheri/normalize-scroll-left\nlet cachedType;\n\n/**\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\n *\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\n *\n * Type             | <- Most Left | Most Right -> | Initial\n * ---------------- | ------------ | ------------- | -------\n * default          | 0            | 100           | 100\n * negative (spec*) | -100         | 0             | 0\n * reverse          | 100          | 0             | 0\n *\n * Edge 85: default\n * Safari 14: negative\n * Chrome 85: negative\n * Firefox 81: negative\n * IE11: reverse\n *\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\n */\nfunction detectScrollType() {\n  if (cachedType) {\n    return cachedType;\n  }\n  const dummy = document.createElement('div');\n  const container = document.createElement('div');\n  container.style.width = '10px';\n  container.style.height = '1px';\n  dummy.appendChild(container);\n  dummy.dir = 'rtl';\n  dummy.style.fontSize = '14px';\n  dummy.style.width = '4px';\n  dummy.style.height = '1px';\n  dummy.style.position = 'absolute';\n  dummy.style.top = '-1000px';\n  dummy.style.overflow = 'scroll';\n  document.body.appendChild(dummy);\n  cachedType = 'reverse';\n  if (dummy.scrollLeft > 0) {\n    cachedType = 'default';\n  } else {\n    dummy.scrollLeft = 1;\n    if (dummy.scrollLeft === 0) {\n      cachedType = 'negative';\n    }\n  }\n  document.body.removeChild(dummy);\n  return cachedType;\n}\n\n// Based on https://stackoverflow.com/a/24394376\nfunction getNormalizedScrollLeft(element, direction) {\n  const scrollLeft = element.scrollLeft;\n\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr behavior\n  if (direction !== 'rtl') {\n    return scrollLeft;\n  }\n  const type = detectScrollType();\n  switch (type) {\n    case 'negative':\n      return element.scrollWidth - element.clientWidth + scrollLeft;\n    case 'reverse':\n      return element.scrollWidth - element.clientWidth - scrollLeft;\n    default:\n      return scrollLeft;\n  }\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["width","top","height","getNormalizedScrollLeft","scrollLeft","__esModule","position","detectScrollType","value","fontSize","dir","overflow"]],"~:compiled-at",1676375827649,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$utils$scrollLeft.js\",\n\"lineCount\":3,\n\"mappings\":\"AAAAA,cAAA,CAAA,yCAAA,CAA8D,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA8BtGC,QAASA,iBAAgB,EAAG,CAC1B,GAAIC,UAAJ,CACE,MAAOA,WAET,OAAMC,MAAQC,QAASC,CAAAA,aAAT,CAAuB,KAAvB,CAAd,CACMC,UAAYF,QAASC,CAAAA,aAAT,CAAuB,KAAvB,CAClBC,UAAUC,CAAAA,KAAMC,CAAAA,KAAhB,CAAwB,MACxBF,UAAUC,CAAAA,KAAME,CAAAA,MAAhB,CAAyB,KACzBN,MAAMO,CAAAA,WAAN,CAAkBJ,SAAlB,CACAH,MAAMQ,CAAAA,GAAN,CAAY,KACZR,MAAMI,CAAAA,KAAMK,CAAAA,QAAZ,CAAuB,MACvBT,MAAMI,CAAAA,KAAMC,CAAAA,KAAZ,CAAoB,KACpBL,MAAMI,CAAAA,KAAME,CAAAA,MAAZ,CAAqB,KACrBN,MAAMI,CAAAA,KAAMM,CAAAA,QAAZ,CAAuB,UACvBV,MAAMI,CAAAA,KAAMO,CAAAA,GAAZ,CAAkB,SAClBX,MAAMI,CAAAA,KAAMQ,CAAAA,QAAZ,CAAuB,QACvBX;QAASY,CAAAA,IAAKN,CAAAA,WAAd,CAA0BP,KAA1B,CACAD,WAAA,CAAa,SACU,EAAvB,CAAIC,KAAMc,CAAAA,UAAV,CACEf,UADF,CACe,SADf,EAGEC,KAAMc,CAAAA,UACN,CADmB,CACnB,CAAyB,CAAzB,GAAId,KAAMc,CAAAA,UAAV,GACEf,UADF,CACe,UADf,CAJF,CAQAE,SAASY,CAAAA,IAAKE,CAAAA,WAAd,CAA0Bf,KAA1B,CACA,OAAOD,WA3BmB,CA3B5BiB,MAAOC,CAAAA,cAAP,CAAsBpB,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CqB,MAAO,CAAA,CADoC,CAA7C,CAGArB,QAAQC,CAAAA,gBAAR,CAA2BA,gBAC3BD,QAAQsB,CAAAA,uBAAR,CAsDAA,QAAgC,CAACC,OAAD,CAAUC,SAAV,CAAqB,CACnD,MAAMP,WAAaM,OAAQN,CAAAA,UAG3B,IAAkB,KAAlB,GAAIO,SAAJ,CACE,MAAOP,WAGT,QADahB,gBAAAwB,EACb,EACE,KAAK,UAAL,CACE,MAAOF,QAAQG,CAAAA,WAAf;AAA6BH,OAAQI,CAAAA,WAArC,CAAmDV,UACrD,MAAK,SAAL,CACE,MAAOM,QAAQG,CAAAA,WAAf,CAA6BH,OAAQI,CAAAA,WAArC,CAAmDV,UACrD,SACE,MAAOA,WANX,CARmD,CApDrD,KAAIf,UATkG;\",\n\"sources\":[\"node_modules/@mui/utils/scrollLeft.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$utils$scrollLeft\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.detectScrollType = detectScrollType;\\nexports.getNormalizedScrollLeft = getNormalizedScrollLeft;\\n// Source from https://github.com/alitaheri/normalize-scroll-left\\nlet cachedType;\\n\\n/**\\n * Based on the jquery plugin https://github.com/othree/jquery.rtl-scroll-type\\n *\\n * Types of scrollLeft, assuming scrollWidth=100 and direction is rtl.\\n *\\n * Type             | <- Most Left | Most Right -> | Initial\\n * ---------------- | ------------ | ------------- | -------\\n * default          | 0            | 100           | 100\\n * negative (spec*) | -100         | 0             | 0\\n * reverse          | 100          | 0             | 0\\n *\\n * Edge 85: default\\n * Safari 14: negative\\n * Chrome 85: negative\\n * Firefox 81: negative\\n * IE11: reverse\\n *\\n * spec* https://drafts.csswg.org/cssom-view/#dom-window-scroll\\n */\\nfunction detectScrollType() {\\n  if (cachedType) {\\n    return cachedType;\\n  }\\n  const dummy = document.createElement('div');\\n  const container = document.createElement('div');\\n  container.style.width = '10px';\\n  container.style.height = '1px';\\n  dummy.appendChild(container);\\n  dummy.dir = 'rtl';\\n  dummy.style.fontSize = '14px';\\n  dummy.style.width = '4px';\\n  dummy.style.height = '1px';\\n  dummy.style.position = 'absolute';\\n  dummy.style.top = '-1000px';\\n  dummy.style.overflow = 'scroll';\\n  document.body.appendChild(dummy);\\n  cachedType = 'reverse';\\n  if (dummy.scrollLeft > 0) {\\n    cachedType = 'default';\\n  } else {\\n    dummy.scrollLeft = 1;\\n    if (dummy.scrollLeft === 0) {\\n      cachedType = 'negative';\\n    }\\n  }\\n  document.body.removeChild(dummy);\\n  return cachedType;\\n}\\n\\n// Based on https://stackoverflow.com/a/24394376\\nfunction getNormalizedScrollLeft(element, direction) {\\n  const scrollLeft = element.scrollLeft;\\n\\n  // Perform the calculations only when direction is rtl to avoid messing up the ltr behavior\\n  if (direction !== 'rtl') {\\n    return scrollLeft;\\n  }\\n  const type = detectScrollType();\\n  switch (type) {\\n    case 'negative':\\n      return element.scrollWidth - element.clientWidth + scrollLeft;\\n    case 'reverse':\\n      return element.scrollWidth - element.clientWidth - scrollLeft;\\n    default:\\n      return scrollLeft;\\n  }\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"detectScrollType\",\"cachedType\",\"dummy\",\"document\",\"createElement\",\"container\",\"style\",\"width\",\"height\",\"appendChild\",\"dir\",\"fontSize\",\"position\",\"top\",\"overflow\",\"body\",\"scrollLeft\",\"removeChild\",\"Object\",\"defineProperty\",\"value\",\"getNormalizedScrollLeft\",\"element\",\"direction\",\"type\",\"scrollWidth\",\"clientWidth\"]\n}\n"]