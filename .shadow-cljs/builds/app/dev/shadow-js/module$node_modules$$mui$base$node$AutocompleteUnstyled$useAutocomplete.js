["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/base/node/AutocompleteUnstyled/useAutocomplete.js"],"~:js","shadow$provide.module$node_modules$$mui$base$node$AutocompleteUnstyled$useAutocomplete=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if(\"function\"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}function stripDiacritics(string){return\"undefined\"!==typeof string.normalize?string.normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g,\n\"\"):string}function createFilterOptions(config={}){const {ignoreAccents=!0,ignoreCase=!0,limit,matchFrom=\"any\",stringify,trim=!1}=config;return(options,{inputValue,getOptionLabel})=>{let input=trim?inputValue.trim():inputValue;ignoreCase&&(input=input.toLowerCase());ignoreAccents&&(input=stripDiacritics(input));options=options.filter(option=>{option=(stringify||getOptionLabel)(option);ignoreCase&&(option=option.toLowerCase());ignoreAccents&&(option=stripDiacritics(option));return\"start\"===matchFrom?\n0===option.indexOf(input):-1<option.indexOf(input)});return\"number\"===typeof limit?options.slice(0,limit):options}}function findIndex(array,comp){for(let i=0;i<array.length;i+=1)if(comp(array[i]))return i;return-1}global=require(\"module$node_modules$$babel$runtime$helpers$interopRequireDefault\");Object.defineProperty(exports,\"__esModule\",{value:!0});exports.createFilterOptions=createFilterOptions;exports.default=function(props){function validOptionIndex(index,direction){if(!listboxRef.current||-1===\nindex)return-1;for(;;){if(\"next\"===direction&&index===filteredOptions.length||\"previous\"===direction&&-1===index)return-1;const option=listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`),nextFocusDisabled=disabledItemsFocusable?!1:!option||option.disabled||\"true\"===option.getAttribute(\"aria-disabled\");if(option&&!option.hasAttribute(\"tabindex\")||nextFocusDisabled)index+=\"next\"===direction?1:-1;else return index}}const {autoComplete=!1,autoHighlight=!1,autoSelect=!1,blurOnSelect=!1,\ndisabled:disabledProp,clearOnBlur=!props.freeSolo,clearOnEscape=!1,componentName=\"useAutocomplete\",defaultValue=props.multiple?[]:null,disableClearable=!1,disableCloseOnSelect=!1,disabledItemsFocusable=!1,disableListWrap=!1,filterOptions=defaultFilterOptions,filterSelectedOptions=!1,freeSolo=!1,getOptionDisabled,getOptionLabel:getOptionLabelProp=option=>{var _option$label;return null!=(_option$label=option.label)?_option$label:option},isOptionEqualToValue=(option,value)=>option===value,groupBy,handleHomeEndKeys=\n!props.freeSolo,id:idProp,includeInputInList=!1,inputValue:inputValueProp,multiple=!1,onChange,onClose,onHighlightChange,onInputChange,onOpen,open:openProp,openOnFocus=!1,options,selectOnFocus=!props.freeSolo,value:valueProp}=props,id=(0,_utils.unstable_useId)(idProp);let getOptionLabel=getOptionLabelProp;getOptionLabel=option=>{const optionLabel=getOptionLabelProp(option);return\"string\"!==typeof optionLabel?(console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${void 0===\noptionLabel?\"undefined\":`${typeof optionLabel} (${optionLabel})`} instead of a string for ${JSON.stringify(option)}.`),String(optionLabel)):optionLabel};const ignoreFocus=React.useRef(!1),firstFocus=React.useRef(!0),inputRef=React.useRef(null),listboxRef=React.useRef(null),[anchorEl,setAnchorEl]=React.useState(null),[focusedTag,setFocusedTag]=React.useState(-1),defaultHighlighted=autoHighlight?0:-1,highlightedIndexRef=React.useRef(defaultHighlighted),[value$jscomp$0,setValueState]=(0,_utils.unstable_useControlled)({controlled:valueProp,\ndefault:defaultValue,name:componentName}),[inputValue,setInputValueState]=(0,_utils.unstable_useControlled)({controlled:inputValueProp,default:\"\",name:componentName,state:\"inputValue\"}),[focused,setFocused]=React.useState(!1),resetInputValue=React.useCallback((event,newValue)=>{if((multiple?value$jscomp$0.length<newValue.length:null!==newValue)||clearOnBlur)multiple?newValue=\"\":null==newValue?newValue=\"\":(newValue=getOptionLabel(newValue),newValue=\"string\"===typeof newValue?newValue:\"\"),inputValue!==\nnewValue&&(setInputValueState(newValue),onInputChange&&onInputChange(event,newValue,\"reset\"))},[getOptionLabel,inputValue,multiple,onInputChange,setInputValueState,clearOnBlur,value$jscomp$0]),prevValue=React.useRef();React.useEffect(()=>{const valueChange=value$jscomp$0!==prevValue.current;prevValue.current=value$jscomp$0;focused&&!valueChange||freeSolo&&!valueChange||resetInputValue(null,value$jscomp$0)},[value$jscomp$0,resetInputValue,focused,prevValue,freeSolo]);const [open,setOpenState]=(0,_utils.unstable_useControlled)({controlled:openProp,\ndefault:!1,name:componentName,state:\"open\"}),[inputPristine,setInputPristine]=React.useState(!0),inputValueIsSelectedValue=!multiple&&null!=value$jscomp$0&&inputValue===getOptionLabel(value$jscomp$0),filteredOptions=open?filterOptions(options.filter(option=>filterSelectedOptions&&(multiple?value$jscomp$0:[value$jscomp$0]).some(value2=>null!==value2&&isOptionEqualToValue(option,value2))?!1:!0),{inputValue:inputValueIsSelectedValue&&inputPristine?\"\":inputValue,getOptionLabel}):[],listboxAvailable=open&&\n0<filteredOptions.length;null!==value$jscomp$0&&!freeSolo&&0<options.length&&(props=(multiple?value$jscomp$0:[value$jscomp$0]).filter(value2=>!options.some(option=>isOptionEqualToValue(option,value2))),0<props.length&&console.warn([`MUI: The value provided to ${componentName} is invalid.`,`None of the options match with \\`${1<props.length?JSON.stringify(props):JSON.stringify(props[0])}\\`.`,\"You can use the `isOptionEqualToValue` prop to customize the equality test.\"].join(\"\\n\")));const focusTag=(0,_utils.unstable_useEventCallback)(tagToFocus=>\n{-1===tagToFocus?inputRef.current.focus():anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus()});React.useEffect(()=>{multiple&&focusedTag>value$jscomp$0.length-1&&(setFocusedTag(-1),focusTag(-1))},[value$jscomp$0,multiple,focusedTag,focusTag]);const setHighlightedIndex=(0,_utils.unstable_useEventCallback)(({event,index,reason=\"auto\"})=>{highlightedIndexRef.current=index;-1===index?inputRef.current.removeAttribute(\"aria-activedescendant\"):inputRef.current.setAttribute(\"aria-activedescendant\",\n`${id}-option-${index}`);onHighlightChange&&onHighlightChange(event,-1===index?null:filteredOptions[index],reason);if(listboxRef.current){if(event=listboxRef.current.querySelector('[role\\x3d\"option\"].Mui-focused'))event.classList.remove(\"Mui-focused\"),event.classList.remove(\"Mui-focusVisible\");if(event=listboxRef.current.parentElement.querySelector('[role\\x3d\"listbox\"]'))if(-1===index)event.scrollTop=0;else if(index=listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`))index.classList.add(\"Mui-focused\"),\n\"keyboard\"===reason&&index.classList.add(\"Mui-focusVisible\"),event.scrollHeight>event.clientHeight&&\"mouse\"!==reason&&(reason=index.offsetTop+index.offsetHeight,reason>event.clientHeight+event.scrollTop?event.scrollTop=reason-event.clientHeight:index.offsetTop-index.offsetHeight*(groupBy?1.3:0)<event.scrollTop&&(event.scrollTop=index.offsetTop-index.offsetHeight*(groupBy?1.3:0)))}}),changeHighlightedIndex=(0,_utils.unstable_useEventCallback)(({event,diff,direction=\"next\",reason=\"auto\"})=>{open&&(direction=\nvalidOptionIndex((()=>{const maxIndex=filteredOptions.length-1;if(\"reset\"===diff)return defaultHighlighted;if(\"start\"===diff)return 0;if(\"end\"===diff)return maxIndex;const newIndex=highlightedIndexRef.current+diff;return 0>newIndex?-1===newIndex&&includeInputInList?-1:disableListWrap&&-1!==highlightedIndexRef.current||1<Math.abs(diff)?0:maxIndex:newIndex>maxIndex?newIndex===maxIndex+1&&includeInputInList?-1:disableListWrap||1<Math.abs(diff)?maxIndex:0:newIndex})(),direction),setHighlightedIndex({index:direction,\nreason,event}),autoComplete&&\"reset\"!==diff&&(-1===direction?inputRef.current.value=inputValue:(event=getOptionLabel(filteredOptions[direction]),inputRef.current.value=event,0===event.toLowerCase().indexOf(inputValue.toLowerCase())&&0<inputValue.length&&inputRef.current.setSelectionRange(inputValue.length,event.length))))}),syncHighlightedIndex=React.useCallback(()=>{if(open){var valueItem=multiple?value$jscomp$0[0]:value$jscomp$0;if(0===filteredOptions.length||null==valueItem)changeHighlightedIndex({diff:\"reset\"});\nelse if(listboxRef.current)if(null!=valueItem){const currentOption=filteredOptions[highlightedIndexRef.current];if(!multiple||!currentOption||-1===findIndex(value$jscomp$0,val=>isOptionEqualToValue(currentOption,val))){var itemIndex=findIndex(filteredOptions,optionItem=>isOptionEqualToValue(optionItem,valueItem));-1===itemIndex?changeHighlightedIndex({diff:\"reset\"}):setHighlightedIndex({index:itemIndex})}}else highlightedIndexRef.current>=filteredOptions.length-1?setHighlightedIndex({index:filteredOptions.length-\n1}):setHighlightedIndex({index:highlightedIndexRef.current})}},[filteredOptions.length,multiple?!1:value$jscomp$0,filterSelectedOptions,changeHighlightedIndex,setHighlightedIndex,open,inputValue,multiple]),handleListboxRef=(0,_utils.unstable_useEventCallback)(node=>{(0,_utils.unstable_setRef)(listboxRef,node);node&&syncHighlightedIndex()});React.useEffect(()=>{inputRef.current&&\"INPUT\"===inputRef.current.nodeName||console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`,\n`Instead, ${componentName} expects an input element.`,\"\",\"useAutocomplete\"===componentName?\"Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.\":\"Make sure you have customized the input component correctly.\"].join(\"\\n\"))},[componentName]);React.useEffect(()=>{syncHighlightedIndex()},[syncHighlightedIndex]);const handleOpen=event=>{open||(setOpenState(!0),setInputPristine(!0),onOpen&&onOpen(event))},handleClose=(event,reason)=>{open&&(setOpenState(!1),\nonClose&&onClose(event,reason))},handleValue=(event,newValue,reason,details)=>{value$jscomp$0!==newValue&&(onChange&&onChange(event,newValue,reason,details),setValueState(newValue))},isTouch=React.useRef(!1),selectNewValue=(event,option,reasonProp=\"selectOption\",origin=\"options\")=>{let newValue=option;if(multiple){newValue=Array.isArray(value$jscomp$0)?value$jscomp$0.slice():[];var matches=newValue.filter(val=>isOptionEqualToValue(option,val));1<matches.length&&console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`,\n`The component expects a single value to match a given option but found ${matches.length} matches.`].join(\"\\n\"));matches=findIndex(newValue,valueItem=>isOptionEqualToValue(option,valueItem));-1===matches?newValue.push(option):\"freeSolo\"!==origin&&(newValue.splice(matches,1),reasonProp=\"removeOption\")}resetInputValue(event,newValue);handleValue(event,newValue,reasonProp,{option});disableCloseOnSelect||event.ctrlKey||event.metaKey||handleClose(event,reasonProp);(!0===blurOnSelect||\"touch\"===blurOnSelect&&\nisTouch.current||\"mouse\"===blurOnSelect&&!isTouch.current)&&inputRef.current.blur()},handleFocusTag=(event,direction)=>{if(multiple){handleClose(event,\"toggleInput\");event=focusedTag;-1===focusedTag?\"\"===inputValue&&\"previous\"===direction&&(event=value$jscomp$0.length-1):(event+=\"next\"===direction?1:-1,0>event&&(event=0),event===value$jscomp$0.length&&(event=-1));a:if(-1===event)event=-1;else for(;;){if(\"next\"===direction&&event===value$jscomp$0.length||\"previous\"===direction&&-1===event){event=-1;\nbreak a}const option=anchorEl.querySelector(`[data-tag-index=\"${event}\"]`);if(option&&option.hasAttribute(\"tabindex\")&&!option.disabled&&\"true\"!==option.getAttribute(\"aria-disabled\"))break a;else event+=\"next\"===direction?1:-1}setFocusedTag(event);focusTag(event)}},handleClear=event=>{ignoreFocus.current=!0;setInputValueState(\"\");onInputChange&&onInputChange(event,\"\",\"clear\");handleValue(event,multiple?[]:null,\"clear\")},handleKeyDown=other=>event=>{if(other.onKeyDown)other.onKeyDown(event);if(!event.defaultMuiPrevented&&\n(-1!==focusedTag&&-1===[\"ArrowLeft\",\"ArrowRight\"].indexOf(event.key)&&(setFocusedTag(-1),focusTag(-1)),229!==event.which))switch(event.key){case \"Home\":open&&handleHomeEndKeys&&(event.preventDefault(),changeHighlightedIndex({diff:\"start\",direction:\"next\",reason:\"keyboard\",event}));break;case \"End\":open&&handleHomeEndKeys&&(event.preventDefault(),changeHighlightedIndex({diff:\"end\",direction:\"previous\",reason:\"keyboard\",event}));break;case \"PageUp\":event.preventDefault();changeHighlightedIndex({diff:-5,\ndirection:\"previous\",reason:\"keyboard\",event});handleOpen(event);break;case \"PageDown\":event.preventDefault();changeHighlightedIndex({diff:5,direction:\"next\",reason:\"keyboard\",event});handleOpen(event);break;case \"ArrowDown\":event.preventDefault();changeHighlightedIndex({diff:1,direction:\"next\",reason:\"keyboard\",event});handleOpen(event);break;case \"ArrowUp\":event.preventDefault();changeHighlightedIndex({diff:-1,direction:\"previous\",reason:\"keyboard\",event});handleOpen(event);break;case \"ArrowLeft\":handleFocusTag(event,\n\"previous\");break;case \"ArrowRight\":handleFocusTag(event,\"next\");break;case \"Enter\":if(-1!==highlightedIndexRef.current&&open){var option=filteredOptions[highlightedIndexRef.current],disabled=getOptionDisabled?getOptionDisabled(option):!1;event.preventDefault();disabled||(selectNewValue(event,option,\"selectOption\"),autoComplete&&inputRef.current.setSelectionRange(inputRef.current.value.length,inputRef.current.value.length))}else freeSolo&&\"\"!==inputValue&&!1===inputValueIsSelectedValue&&(multiple&&\nevent.preventDefault(),selectNewValue(event,inputValue,\"createOption\",\"freeSolo\"));break;case \"Escape\":open?(event.preventDefault(),event.stopPropagation(),handleClose(event,\"escape\")):clearOnEscape&&(\"\"!==inputValue||multiple&&0<value$jscomp$0.length)&&(event.preventDefault(),event.stopPropagation(),handleClear(event));break;case \"Backspace\":multiple&&\"\"===inputValue&&0<value$jscomp$0.length&&(option=-1===focusedTag?value$jscomp$0.length-1:focusedTag,disabled=value$jscomp$0.slice(),disabled.splice(option,\n1),handleValue(event,disabled,\"removeOption\",{option:value$jscomp$0[option]}))}},handleFocus=event=>{setFocused(!0);openOnFocus&&!ignoreFocus.current&&handleOpen(event)},handleBlur=event=>{null!==listboxRef.current&&listboxRef.current.parentElement.contains(document.activeElement)?inputRef.current.focus():(setFocused(!1),firstFocus.current=!0,ignoreFocus.current=!1,autoSelect&&-1!==highlightedIndexRef.current&&open?selectNewValue(event,filteredOptions[highlightedIndexRef.current],\"blur\"):autoSelect&&\nfreeSolo&&\"\"!==inputValue?selectNewValue(event,inputValue,\"blur\",\"freeSolo\"):clearOnBlur&&resetInputValue(event,value$jscomp$0),handleClose(event,\"blur\"))},handleInputChange=event=>{const newValue=event.target.value;inputValue!==newValue&&(setInputValueState(newValue),setInputPristine(!1),onInputChange&&onInputChange(event,newValue,\"input\"));\"\"===newValue?disableClearable||multiple||handleValue(event,null,\"clear\"):handleOpen(event)},handleOptionMouseOver=event=>{setHighlightedIndex({event,index:Number(event.currentTarget.getAttribute(\"data-option-index\")),\nreason:\"mouse\"})},handleOptionTouchStart=()=>{isTouch.current=!0},handleOptionClick=event=>{const index=Number(event.currentTarget.getAttribute(\"data-option-index\"));selectNewValue(event,filteredOptions[index],\"selectOption\");isTouch.current=!1},handleTagDelete=index=>event=>{const newValue=value$jscomp$0.slice();newValue.splice(index,1);handleValue(event,newValue,\"removeOption\",{option:value$jscomp$0[index]})},handlePopupIndicator=event=>{open?handleClose(event,\"toggleInput\"):handleOpen(event)},\nhandleMouseDown=event=>{event.target.getAttribute(\"id\")!==id&&event.preventDefault()},handleClick=()=>{inputRef.current.focus();selectOnFocus&&firstFocus.current&&0===inputRef.current.selectionEnd-inputRef.current.selectionStart&&inputRef.current.select();firstFocus.current=!1},handleInputMouseDown=event=>{\"\"!==inputValue&&open||handlePopupIndicator(event)};props=(props=freeSolo&&0<inputValue.length)||(multiple?0<value$jscomp$0.length:null!==value$jscomp$0);let groupedOptions=filteredOptions;if(groupBy){const indexBy=\nnew Map;let warn=!1;groupedOptions=filteredOptions.reduce((acc,option,index)=>{const group=groupBy(option);0<acc.length&&acc[acc.length-1].group===group?acc[acc.length-1].options.push(option):(indexBy.get(group)&&!warn&&(console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`,\"You can solve the issue by sorting the options with the output of `groupBy`.\"),warn=!0),indexBy.set(group,!0),acc.push({key:index,index,group,options:[option]}));\nreturn acc},[])}disabledProp&&focused&&handleBlur();return{getRootProps:(other={})=>(0,_extends2.default)({\"aria-owns\":listboxAvailable?`${id}-listbox`:null,role:\"combobox\",\"aria-expanded\":listboxAvailable},other,{onKeyDown:handleKeyDown(other),onMouseDown:handleMouseDown,onClick:handleClick}),getInputLabelProps:()=>({id:`${id}-label`,htmlFor:id}),getInputProps:()=>({id,value:inputValue,onBlur:handleBlur,onFocus:handleFocus,onChange:handleInputChange,onMouseDown:handleInputMouseDown,\"aria-activedescendant\":open?\n\"\":null,\"aria-autocomplete\":autoComplete?\"both\":\"list\",\"aria-controls\":listboxAvailable?`${id}-listbox`:null,autoComplete:\"off\",ref:inputRef,autoCapitalize:\"none\",spellCheck:\"false\"}),getClearProps:()=>({tabIndex:-1,onClick:handleClear}),getPopupIndicatorProps:()=>({tabIndex:-1,onClick:handlePopupIndicator}),getTagProps:({index})=>({key:index,\"data-tag-index\":index,tabIndex:-1,onDelete:handleTagDelete(index)}),getListboxProps:()=>({role:\"listbox\",id:`${id}-listbox`,\"aria-labelledby\":`${id}-label`,\nref:handleListboxRef,onMouseDown:event=>{event.preventDefault()}}),getOptionProps:({index,option})=>{const selected=(multiple?value$jscomp$0:[value$jscomp$0]).some(value2=>null!=value2&&isOptionEqualToValue(option,value2)),disabled=getOptionDisabled?getOptionDisabled(option):!1;return{key:getOptionLabel(option),tabIndex:-1,role:\"option\",id:`${id}-option-${index}`,onMouseOver:handleOptionMouseOver,onClick:handleOptionClick,onTouchStart:handleOptionTouchStart,\"data-option-index\":index,\"aria-disabled\":disabled,\n\"aria-selected\":selected}},id,inputValue,value:value$jscomp$0,dirty:props,popupOpen:open,focused:focused||-1!==focusedTag,anchorEl,setAnchorEl,focusedTag,groupedOptions}};var _extends2=global(require(\"module$node_modules$$babel$runtime$helpers$extends\")),React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||\"object\"!==typeof obj&&\"function\"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);\nvar newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if(\"default\"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require(\"module$node_modules$react$index\")),_utils=require(\"module$node_modules$$mui$utils$index\");\nconst defaultFilterOptions=createFilterOptions()}","~:source","shadow$provide[\"module$node_modules$$mui$base$node$AutocompleteUnstyled$useAutocomplete\"] = function(global,require,module,exports) {\n\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createFilterOptions = createFilterOptions;\nexports.default = useAutocomplete;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _utils = require(\"@mui/utils\");\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\n/* eslint-disable no-constant-condition */\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nfunction createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\n\nfunction useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    disabled: disabledProp,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) != null ? _option$label : option;\n    },\n    isOptionEqualToValue = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = (0, _utils.unstable_useId)(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`MUI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = (0, _utils.unstable_useControlled)({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = (0, _utils.unstable_useControlled)({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = React.useCallback((event, newValue) => {\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\n\n    if (!isOptionSelected && !clearOnBlur) {\n      return;\n    }\n\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\n  const prevValue = React.useRef();\n  React.useEffect(() => {\n    const valueChange = value !== prevValue.current;\n    prevValue.current = value;\n\n    if (focused && !valueChange) {\n      return;\n    } // Only reset the input's value when freeSolo if the component's value changes.\n\n\n    if (freeSolo && !valueChange) {\n      return;\n    }\n\n    resetInputValue(null, value);\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\n  const [open, setOpenState] = (0, _utils.unstable_useControlled)({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = (0, _utils.unstable_useEventCallback)(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = (0, _utils.unstable_useEventCallback)(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[role=\"option\"].Mui-focused');\n\n    if (prev) {\n      prev.classList.remove('Mui-focused');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.classList.add('Mui-focused');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = (0, _utils.unstable_useEventCallback)(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = (0, _utils.unstable_useEventCallback)(node => {\n    (0, _utils.unstable_setRef)(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\n\n        if (matches.length > 1) {\n          console.error([`MUI: The \\`isOptionEqualToValue\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'removeOption';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'removeOption', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'selectOption');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'removeOption', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`MUI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  if (disabledProp && focused) {\n    handleBlur();\n  }\n\n  return {\n    getRootProps: (other = {}) => (0, _extends2.default)({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$module$node_modules$$mui$utils$index","~$module$node_modules$$babel$runtime$helpers$interopRequireDefault","~$module$node_modules$react$index","~$shadow.js","~$module$node_modules$$babel$runtime$helpers$extends"]],"~:properties",["^5",["role","getClearProps","index","onChange","setAnchorEl","htmlFor","getInputProps","tabIndex","autoCapitalize","getOptionLabel","group","getRootProps","key","__esModule","dirty","option","onDelete","id","inputValue","diff","event","onMouseDown","controlled","name","value","getOptionProps","direction","onFocus","focused","groupedOptions","current","getPopupIndicatorProps","onBlur","autoComplete","onClick","getTagProps","createFilterOptions","state","ref","getInputLabelProps","reason","onKeyDown","anchorEl","focusedTag","options","scrollTop","onMouseOver","default","popupOpen","getListboxProps","spellCheck","onTouchStart"]],"~:compiled-at",1676375827655,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$base$node$AutocompleteUnstyled$useAutocomplete.js\",\n\"lineCount\":38,\n\"mappings\":\"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\",\n\"sources\":[\"node_modules/@mui/base/node/AutocompleteUnstyled/useAutocomplete.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$base$node$AutocompleteUnstyled$useAutocomplete\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nvar _interopRequireDefault = require(\\\"@babel/runtime/helpers/interopRequireDefault\\\");\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.createFilterOptions = createFilterOptions;\\nexports.default = useAutocomplete;\\n\\nvar _extends2 = _interopRequireDefault(require(\\\"@babel/runtime/helpers/extends\\\"));\\n\\nvar React = _interopRequireWildcard(require(\\\"react\\\"));\\n\\nvar _utils = require(\\\"@mui/utils\\\");\\n\\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \\\"function\\\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\\n\\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \\\"object\\\" && typeof obj !== \\\"function\\\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\\n\\n/* eslint-disable no-constant-condition */\\n// https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\\n// Give up on IE11 support for this feature\\nfunction stripDiacritics(string) {\\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\\\u0300-\\\\u036f]/g, '') : string;\\n}\\n\\nfunction createFilterOptions(config = {}) {\\n  const {\\n    ignoreAccents = true,\\n    ignoreCase = true,\\n    limit,\\n    matchFrom = 'any',\\n    stringify,\\n    trim = false\\n  } = config;\\n  return (options, {\\n    inputValue,\\n    getOptionLabel\\n  }) => {\\n    let input = trim ? inputValue.trim() : inputValue;\\n\\n    if (ignoreCase) {\\n      input = input.toLowerCase();\\n    }\\n\\n    if (ignoreAccents) {\\n      input = stripDiacritics(input);\\n    }\\n\\n    const filteredOptions = options.filter(option => {\\n      let candidate = (stringify || getOptionLabel)(option);\\n\\n      if (ignoreCase) {\\n        candidate = candidate.toLowerCase();\\n      }\\n\\n      if (ignoreAccents) {\\n        candidate = stripDiacritics(candidate);\\n      }\\n\\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\\n    });\\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\\n  };\\n} // To replace with .findIndex() once we stop IE11 support.\\n\\n\\nfunction findIndex(array, comp) {\\n  for (let i = 0; i < array.length; i += 1) {\\n    if (comp(array[i])) {\\n      return i;\\n    }\\n  }\\n\\n  return -1;\\n}\\n\\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\\n\\nconst pageSize = 5;\\n\\nfunction useAutocomplete(props) {\\n  const {\\n    autoComplete = false,\\n    autoHighlight = false,\\n    autoSelect = false,\\n    blurOnSelect = false,\\n    disabled: disabledProp,\\n    clearOnBlur = !props.freeSolo,\\n    clearOnEscape = false,\\n    componentName = 'useAutocomplete',\\n    defaultValue = props.multiple ? [] : null,\\n    disableClearable = false,\\n    disableCloseOnSelect = false,\\n    disabledItemsFocusable = false,\\n    disableListWrap = false,\\n    filterOptions = defaultFilterOptions,\\n    filterSelectedOptions = false,\\n    freeSolo = false,\\n    getOptionDisabled,\\n    getOptionLabel: getOptionLabelProp = option => {\\n      var _option$label;\\n\\n      return (_option$label = option.label) != null ? _option$label : option;\\n    },\\n    isOptionEqualToValue = (option, value) => option === value,\\n    groupBy,\\n    handleHomeEndKeys = !props.freeSolo,\\n    id: idProp,\\n    includeInputInList = false,\\n    inputValue: inputValueProp,\\n    multiple = false,\\n    onChange,\\n    onClose,\\n    onHighlightChange,\\n    onInputChange,\\n    onOpen,\\n    open: openProp,\\n    openOnFocus = false,\\n    options,\\n    selectOnFocus = !props.freeSolo,\\n    value: valueProp\\n  } = props;\\n  const id = (0, _utils.unstable_useId)(idProp);\\n  let getOptionLabel = getOptionLabelProp;\\n\\n  getOptionLabel = option => {\\n    const optionLabel = getOptionLabelProp(option);\\n\\n    if (typeof optionLabel !== 'string') {\\n      if (process.env.NODE_ENV !== 'production') {\\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\\n        console.error(`MUI: The \\\\`getOptionLabel\\\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\\n      }\\n\\n      return String(optionLabel);\\n    }\\n\\n    return optionLabel;\\n  };\\n\\n  const ignoreFocus = React.useRef(false);\\n  const firstFocus = React.useRef(true);\\n  const inputRef = React.useRef(null);\\n  const listboxRef = React.useRef(null);\\n  const [anchorEl, setAnchorEl] = React.useState(null);\\n  const [focusedTag, setFocusedTag] = React.useState(-1);\\n  const defaultHighlighted = autoHighlight ? 0 : -1;\\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\\n  const [value, setValueState] = (0, _utils.unstable_useControlled)({\\n    controlled: valueProp,\\n    default: defaultValue,\\n    name: componentName\\n  });\\n  const [inputValue, setInputValueState] = (0, _utils.unstable_useControlled)({\\n    controlled: inputValueProp,\\n    default: '',\\n    name: componentName,\\n    state: 'inputValue'\\n  });\\n  const [focused, setFocused] = React.useState(false);\\n  const resetInputValue = React.useCallback((event, newValue) => {\\n    // retain current `inputValue` if new option isn't selected and `clearOnBlur` is false\\n    // When `multiple` is enabled, `newValue` is an array of all selected items including the newly selected item\\n    const isOptionSelected = multiple ? value.length < newValue.length : newValue !== null;\\n\\n    if (!isOptionSelected && !clearOnBlur) {\\n      return;\\n    }\\n\\n    let newInputValue;\\n\\n    if (multiple) {\\n      newInputValue = '';\\n    } else if (newValue == null) {\\n      newInputValue = '';\\n    } else {\\n      const optionLabel = getOptionLabel(newValue);\\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\\n    }\\n\\n    if (inputValue === newInputValue) {\\n      return;\\n    }\\n\\n    setInputValueState(newInputValue);\\n\\n    if (onInputChange) {\\n      onInputChange(event, newInputValue, 'reset');\\n    }\\n  }, [getOptionLabel, inputValue, multiple, onInputChange, setInputValueState, clearOnBlur, value]);\\n  const prevValue = React.useRef();\\n  React.useEffect(() => {\\n    const valueChange = value !== prevValue.current;\\n    prevValue.current = value;\\n\\n    if (focused && !valueChange) {\\n      return;\\n    } // Only reset the input's value when freeSolo if the component's value changes.\\n\\n\\n    if (freeSolo && !valueChange) {\\n      return;\\n    }\\n\\n    resetInputValue(null, value);\\n  }, [value, resetInputValue, focused, prevValue, freeSolo]);\\n  const [open, setOpenState] = (0, _utils.unstable_useControlled)({\\n    controlled: openProp,\\n    default: false,\\n    name: componentName,\\n    state: 'open'\\n  });\\n  const [inputPristine, setInputPristine] = React.useState(true);\\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\\n  const popupOpen = open;\\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && isOptionEqualToValue(option, value2))) {\\n      return false;\\n    }\\n\\n    return true;\\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\\n  // i.e. the filter predicate always returns true\\n  {\\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\\n    getOptionLabel\\n  }) : [];\\n  const listboxAvailable = open && filteredOptions.length > 0;\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    if (value !== null && !freeSolo && options.length > 0) {\\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => isOptionEqualToValue(option, value2)));\\n\\n      if (missingValue.length > 0) {\\n        console.warn([`MUI: The value provided to ${componentName} is invalid.`, `None of the options match with \\\\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\\\`.`, 'You can use the `isOptionEqualToValue` prop to customize the equality test.'].join('\\\\n'));\\n      }\\n    }\\n  }\\n\\n  const focusTag = (0, _utils.unstable_useEventCallback)(tagToFocus => {\\n    if (tagToFocus === -1) {\\n      inputRef.current.focus();\\n    } else {\\n      anchorEl.querySelector(`[data-tag-index=\\\"${tagToFocus}\\\"]`).focus();\\n    }\\n  }); // Ensure the focusedTag is never inconsistent\\n\\n  React.useEffect(() => {\\n    if (multiple && focusedTag > value.length - 1) {\\n      setFocusedTag(-1);\\n      focusTag(-1);\\n    }\\n  }, [value, multiple, focusedTag, focusTag]);\\n\\n  function validOptionIndex(index, direction) {\\n    if (!listboxRef.current || index === -1) {\\n      return -1;\\n    }\\n\\n    let nextFocus = index;\\n\\n    while (true) {\\n      // Out of range\\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\\n        return -1;\\n      }\\n\\n      const option = listboxRef.current.querySelector(`[data-option-index=\\\"${nextFocus}\\\"]`); // Same logic as MenuList.js\\n\\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\\n\\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\\n        // Move to the next element.\\n        nextFocus += direction === 'next' ? 1 : -1;\\n      } else {\\n        return nextFocus;\\n      }\\n    }\\n  }\\n\\n  const setHighlightedIndex = (0, _utils.unstable_useEventCallback)(({\\n    event,\\n    index,\\n    reason = 'auto'\\n  }) => {\\n    highlightedIndexRef.current = index; // does the index exist?\\n\\n    if (index === -1) {\\n      inputRef.current.removeAttribute('aria-activedescendant');\\n    } else {\\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\\n    }\\n\\n    if (onHighlightChange) {\\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\\n    }\\n\\n    if (!listboxRef.current) {\\n      return;\\n    }\\n\\n    const prev = listboxRef.current.querySelector('[role=\\\"option\\\"].Mui-focused');\\n\\n    if (prev) {\\n      prev.classList.remove('Mui-focused');\\n      prev.classList.remove('Mui-focusVisible');\\n    }\\n\\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\\\"listbox\\\"]'); // \\\"No results\\\"\\n\\n    if (!listboxNode) {\\n      return;\\n    }\\n\\n    if (index === -1) {\\n      listboxNode.scrollTop = 0;\\n      return;\\n    }\\n\\n    const option = listboxRef.current.querySelector(`[data-option-index=\\\"${index}\\\"]`);\\n\\n    if (!option) {\\n      return;\\n    }\\n\\n    option.classList.add('Mui-focused');\\n\\n    if (reason === 'keyboard') {\\n      option.classList.add('Mui-focusVisible');\\n    } // Scroll active descendant into view.\\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\\n    //\\n    // Consider this API instead once it has a better browser support:\\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\\n\\n\\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\\n      const element = option;\\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\\n      const elementBottom = element.offsetTop + element.offsetHeight;\\n\\n      if (elementBottom > scrollBottom) {\\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\\n      }\\n    }\\n  });\\n  const changeHighlightedIndex = (0, _utils.unstable_useEventCallback)(({\\n    event,\\n    diff,\\n    direction = 'next',\\n    reason = 'auto'\\n  }) => {\\n    if (!popupOpen) {\\n      return;\\n    }\\n\\n    const getNextIndex = () => {\\n      const maxIndex = filteredOptions.length - 1;\\n\\n      if (diff === 'reset') {\\n        return defaultHighlighted;\\n      }\\n\\n      if (diff === 'start') {\\n        return 0;\\n      }\\n\\n      if (diff === 'end') {\\n        return maxIndex;\\n      }\\n\\n      const newIndex = highlightedIndexRef.current + diff;\\n\\n      if (newIndex < 0) {\\n        if (newIndex === -1 && includeInputInList) {\\n          return -1;\\n        }\\n\\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\\n          return 0;\\n        }\\n\\n        return maxIndex;\\n      }\\n\\n      if (newIndex > maxIndex) {\\n        if (newIndex === maxIndex + 1 && includeInputInList) {\\n          return -1;\\n        }\\n\\n        if (disableListWrap || Math.abs(diff) > 1) {\\n          return maxIndex;\\n        }\\n\\n        return 0;\\n      }\\n\\n      return newIndex;\\n    };\\n\\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\\n    setHighlightedIndex({\\n      index: nextIndex,\\n      reason,\\n      event\\n    }); // Sync the content of the input with the highlighted option.\\n\\n    if (autoComplete && diff !== 'reset') {\\n      if (nextIndex === -1) {\\n        inputRef.current.value = inputValue;\\n      } else {\\n        const option = getOptionLabel(filteredOptions[nextIndex]);\\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\\n        // a completion string, appears inline after the input cursor in the textbox.\\n\\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\\n\\n        if (index === 0 && inputValue.length > 0) {\\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\\n        }\\n      }\\n    }\\n  });\\n  const syncHighlightedIndex = React.useCallback(() => {\\n    if (!popupOpen) {\\n      return;\\n    }\\n\\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\\n\\n    if (filteredOptions.length === 0 || valueItem == null) {\\n      changeHighlightedIndex({\\n        diff: 'reset'\\n      });\\n      return;\\n    }\\n\\n    if (!listboxRef.current) {\\n      return;\\n    } // Synchronize the value with the highlighted index\\n\\n\\n    if (valueItem != null) {\\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\\n\\n      if (multiple && currentOption && findIndex(value, val => isOptionEqualToValue(currentOption, val)) !== -1) {\\n        return;\\n      }\\n\\n      const itemIndex = findIndex(filteredOptions, optionItem => isOptionEqualToValue(optionItem, valueItem));\\n\\n      if (itemIndex === -1) {\\n        changeHighlightedIndex({\\n          diff: 'reset'\\n        });\\n      } else {\\n        setHighlightedIndex({\\n          index: itemIndex\\n        });\\n      }\\n\\n      return;\\n    } // Prevent the highlighted index to leak outside the boundaries.\\n\\n\\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\\n      setHighlightedIndex({\\n        index: filteredOptions.length - 1\\n      });\\n      return;\\n    } // Restore the focus to the previous index.\\n\\n\\n    setHighlightedIndex({\\n      index: highlightedIndexRef.current\\n    }); // Ignore filteredOptions (and options, isOptionEqualToValue, getOptionLabel) not to break the scroll position\\n    // eslint-disable-next-line react-hooks/exhaustive-deps\\n  }, [// Only sync the highlighted index when the option switch between empty and not\\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\\n  // eslint-disable-next-line react-hooks/exhaustive-deps\\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\\n  const handleListboxRef = (0, _utils.unstable_useEventCallback)(node => {\\n    (0, _utils.unstable_setRef)(listboxRef, node);\\n\\n    if (!node) {\\n      return;\\n    }\\n\\n    syncHighlightedIndex();\\n  });\\n\\n  if (process.env.NODE_ENV !== 'production') {\\n    // eslint-disable-next-line react-hooks/rules-of-hooks\\n    React.useEffect(() => {\\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\\n        console.error([`MUI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\\\n'));\\n      }\\n    }, [componentName]);\\n  }\\n\\n  React.useEffect(() => {\\n    syncHighlightedIndex();\\n  }, [syncHighlightedIndex]);\\n\\n  const handleOpen = event => {\\n    if (open) {\\n      return;\\n    }\\n\\n    setOpenState(true);\\n    setInputPristine(true);\\n\\n    if (onOpen) {\\n      onOpen(event);\\n    }\\n  };\\n\\n  const handleClose = (event, reason) => {\\n    if (!open) {\\n      return;\\n    }\\n\\n    setOpenState(false);\\n\\n    if (onClose) {\\n      onClose(event, reason);\\n    }\\n  };\\n\\n  const handleValue = (event, newValue, reason, details) => {\\n    if (value === newValue) {\\n      return;\\n    }\\n\\n    if (onChange) {\\n      onChange(event, newValue, reason, details);\\n    }\\n\\n    setValueState(newValue);\\n  };\\n\\n  const isTouch = React.useRef(false);\\n\\n  const selectNewValue = (event, option, reasonProp = 'selectOption', origin = 'options') => {\\n    let reason = reasonProp;\\n    let newValue = option;\\n\\n    if (multiple) {\\n      newValue = Array.isArray(value) ? value.slice() : [];\\n\\n      if (process.env.NODE_ENV !== 'production') {\\n        const matches = newValue.filter(val => isOptionEqualToValue(option, val));\\n\\n        if (matches.length > 1) {\\n          console.error([`MUI: The \\\\`isOptionEqualToValue\\\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\\\n'));\\n        }\\n      }\\n\\n      const itemIndex = findIndex(newValue, valueItem => isOptionEqualToValue(option, valueItem));\\n\\n      if (itemIndex === -1) {\\n        newValue.push(option);\\n      } else if (origin !== 'freeSolo') {\\n        newValue.splice(itemIndex, 1);\\n        reason = 'removeOption';\\n      }\\n    }\\n\\n    resetInputValue(event, newValue);\\n    handleValue(event, newValue, reason, {\\n      option\\n    });\\n\\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\\n      handleClose(event, reason);\\n    }\\n\\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\\n      inputRef.current.blur();\\n    }\\n  };\\n\\n  function validTagIndex(index, direction) {\\n    if (index === -1) {\\n      return -1;\\n    }\\n\\n    let nextFocus = index;\\n\\n    while (true) {\\n      // Out of range\\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\\n        return -1;\\n      }\\n\\n      const option = anchorEl.querySelector(`[data-tag-index=\\\"${nextFocus}\\\"]`); // Same logic as MenuList.js\\n\\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\\n        nextFocus += direction === 'next' ? 1 : -1;\\n      } else {\\n        return nextFocus;\\n      }\\n    }\\n  }\\n\\n  const handleFocusTag = (event, direction) => {\\n    if (!multiple) {\\n      return;\\n    }\\n\\n    handleClose(event, 'toggleInput');\\n    let nextTag = focusedTag;\\n\\n    if (focusedTag === -1) {\\n      if (inputValue === '' && direction === 'previous') {\\n        nextTag = value.length - 1;\\n      }\\n    } else {\\n      nextTag += direction === 'next' ? 1 : -1;\\n\\n      if (nextTag < 0) {\\n        nextTag = 0;\\n      }\\n\\n      if (nextTag === value.length) {\\n        nextTag = -1;\\n      }\\n    }\\n\\n    nextTag = validTagIndex(nextTag, direction);\\n    setFocusedTag(nextTag);\\n    focusTag(nextTag);\\n  };\\n\\n  const handleClear = event => {\\n    ignoreFocus.current = true;\\n    setInputValueState('');\\n\\n    if (onInputChange) {\\n      onInputChange(event, '', 'clear');\\n    }\\n\\n    handleValue(event, multiple ? [] : null, 'clear');\\n  };\\n\\n  const handleKeyDown = other => event => {\\n    if (other.onKeyDown) {\\n      other.onKeyDown(event);\\n    }\\n\\n    if (event.defaultMuiPrevented) {\\n      return;\\n    }\\n\\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\\n      setFocusedTag(-1);\\n      focusTag(-1);\\n    } // Wait until IME is settled.\\n\\n\\n    if (event.which !== 229) {\\n      switch (event.key) {\\n        case 'Home':\\n          if (popupOpen && handleHomeEndKeys) {\\n            // Prevent scroll of the page\\n            event.preventDefault();\\n            changeHighlightedIndex({\\n              diff: 'start',\\n              direction: 'next',\\n              reason: 'keyboard',\\n              event\\n            });\\n          }\\n\\n          break;\\n\\n        case 'End':\\n          if (popupOpen && handleHomeEndKeys) {\\n            // Prevent scroll of the page\\n            event.preventDefault();\\n            changeHighlightedIndex({\\n              diff: 'end',\\n              direction: 'previous',\\n              reason: 'keyboard',\\n              event\\n            });\\n          }\\n\\n          break;\\n\\n        case 'PageUp':\\n          // Prevent scroll of the page\\n          event.preventDefault();\\n          changeHighlightedIndex({\\n            diff: -pageSize,\\n            direction: 'previous',\\n            reason: 'keyboard',\\n            event\\n          });\\n          handleOpen(event);\\n          break;\\n\\n        case 'PageDown':\\n          // Prevent scroll of the page\\n          event.preventDefault();\\n          changeHighlightedIndex({\\n            diff: pageSize,\\n            direction: 'next',\\n            reason: 'keyboard',\\n            event\\n          });\\n          handleOpen(event);\\n          break;\\n\\n        case 'ArrowDown':\\n          // Prevent cursor move\\n          event.preventDefault();\\n          changeHighlightedIndex({\\n            diff: 1,\\n            direction: 'next',\\n            reason: 'keyboard',\\n            event\\n          });\\n          handleOpen(event);\\n          break;\\n\\n        case 'ArrowUp':\\n          // Prevent cursor move\\n          event.preventDefault();\\n          changeHighlightedIndex({\\n            diff: -1,\\n            direction: 'previous',\\n            reason: 'keyboard',\\n            event\\n          });\\n          handleOpen(event);\\n          break;\\n\\n        case 'ArrowLeft':\\n          handleFocusTag(event, 'previous');\\n          break;\\n\\n        case 'ArrowRight':\\n          handleFocusTag(event, 'next');\\n          break;\\n\\n        case 'Enter':\\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\\n            const option = filteredOptions[highlightedIndexRef.current];\\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\\n\\n            event.preventDefault();\\n\\n            if (disabled) {\\n              return;\\n            }\\n\\n            selectNewValue(event, option, 'selectOption'); // Move the selection to the end.\\n\\n            if (autoComplete) {\\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\\n            }\\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\\n            if (multiple) {\\n              // Allow people to add new values before they submit the form.\\n              event.preventDefault();\\n            }\\n\\n            selectNewValue(event, inputValue, 'createOption', 'freeSolo');\\n          }\\n\\n          break;\\n\\n        case 'Escape':\\n          if (popupOpen) {\\n            // Avoid Opera to exit fullscreen mode.\\n            event.preventDefault(); // Avoid the Modal to handle the event.\\n\\n            event.stopPropagation();\\n            handleClose(event, 'escape');\\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\\n            // Avoid Opera to exit fullscreen mode.\\n            event.preventDefault(); // Avoid the Modal to handle the event.\\n\\n            event.stopPropagation();\\n            handleClear(event);\\n          }\\n\\n          break;\\n\\n        case 'Backspace':\\n          if (multiple && inputValue === '' && value.length > 0) {\\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\\n            const newValue = value.slice();\\n            newValue.splice(index, 1);\\n            handleValue(event, newValue, 'removeOption', {\\n              option: value[index]\\n            });\\n          }\\n\\n          break;\\n\\n        default:\\n      }\\n    }\\n  };\\n\\n  const handleFocus = event => {\\n    setFocused(true);\\n\\n    if (openOnFocus && !ignoreFocus.current) {\\n      handleOpen(event);\\n    }\\n  };\\n\\n  const handleBlur = event => {\\n    // Ignore the event when using the scrollbar with IE11\\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\\n      inputRef.current.focus();\\n      return;\\n    }\\n\\n    setFocused(false);\\n    firstFocus.current = true;\\n    ignoreFocus.current = false;\\n\\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\\n    } else if (autoSelect && freeSolo && inputValue !== '') {\\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\\n    } else if (clearOnBlur) {\\n      resetInputValue(event, value);\\n    }\\n\\n    handleClose(event, 'blur');\\n  };\\n\\n  const handleInputChange = event => {\\n    const newValue = event.target.value;\\n\\n    if (inputValue !== newValue) {\\n      setInputValueState(newValue);\\n      setInputPristine(false);\\n\\n      if (onInputChange) {\\n        onInputChange(event, newValue, 'input');\\n      }\\n    }\\n\\n    if (newValue === '') {\\n      if (!disableClearable && !multiple) {\\n        handleValue(event, null, 'clear');\\n      }\\n    } else {\\n      handleOpen(event);\\n    }\\n  };\\n\\n  const handleOptionMouseOver = event => {\\n    setHighlightedIndex({\\n      event,\\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\\n      reason: 'mouse'\\n    });\\n  };\\n\\n  const handleOptionTouchStart = () => {\\n    isTouch.current = true;\\n  };\\n\\n  const handleOptionClick = event => {\\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\\n    selectNewValue(event, filteredOptions[index], 'selectOption');\\n    isTouch.current = false;\\n  };\\n\\n  const handleTagDelete = index => event => {\\n    const newValue = value.slice();\\n    newValue.splice(index, 1);\\n    handleValue(event, newValue, 'removeOption', {\\n      option: value[index]\\n    });\\n  };\\n\\n  const handlePopupIndicator = event => {\\n    if (open) {\\n      handleClose(event, 'toggleInput');\\n    } else {\\n      handleOpen(event);\\n    }\\n  }; // Prevent input blur when interacting with the combobox\\n\\n\\n  const handleMouseDown = event => {\\n    if (event.target.getAttribute('id') !== id) {\\n      event.preventDefault();\\n    }\\n  }; // Focus the input when interacting with the combobox\\n\\n\\n  const handleClick = () => {\\n    inputRef.current.focus();\\n\\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\\n      inputRef.current.select();\\n    }\\n\\n    firstFocus.current = false;\\n  };\\n\\n  const handleInputMouseDown = event => {\\n    if (inputValue === '' || !open) {\\n      handlePopupIndicator(event);\\n    }\\n  };\\n\\n  let dirty = freeSolo && inputValue.length > 0;\\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\\n  let groupedOptions = filteredOptions;\\n\\n  if (groupBy) {\\n    // used to keep track of key and indexes in the result array\\n    const indexBy = new Map();\\n    let warn = false;\\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\\n      const group = groupBy(option);\\n\\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\\n        acc[acc.length - 1].options.push(option);\\n      } else {\\n        if (process.env.NODE_ENV !== 'production') {\\n          if (indexBy.get(group) && !warn) {\\n            console.warn(`MUI: The options provided combined with the \\\\`groupBy\\\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\\n            warn = true;\\n          }\\n\\n          indexBy.set(group, true);\\n        }\\n\\n        acc.push({\\n          key: index,\\n          index,\\n          group,\\n          options: [option]\\n        });\\n      }\\n\\n      return acc;\\n    }, []);\\n  }\\n\\n  if (disabledProp && focused) {\\n    handleBlur();\\n  }\\n\\n  return {\\n    getRootProps: (other = {}) => (0, _extends2.default)({\\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\\n      role: 'combobox',\\n      'aria-expanded': listboxAvailable\\n    }, other, {\\n      onKeyDown: handleKeyDown(other),\\n      onMouseDown: handleMouseDown,\\n      onClick: handleClick\\n    }),\\n    getInputLabelProps: () => ({\\n      id: `${id}-label`,\\n      htmlFor: id\\n    }),\\n    getInputProps: () => ({\\n      id,\\n      value: inputValue,\\n      onBlur: handleBlur,\\n      onFocus: handleFocus,\\n      onChange: handleInputChange,\\n      onMouseDown: handleInputMouseDown,\\n      // if open then this is handled imperativeley so don't let react override\\n      // only have an opinion about this when closed\\n      'aria-activedescendant': popupOpen ? '' : null,\\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\\n      // Disable browser's suggestion that might overlap with the popup.\\n      // Handle autocomplete but not autofill.\\n      autoComplete: 'off',\\n      ref: inputRef,\\n      autoCapitalize: 'none',\\n      spellCheck: 'false'\\n    }),\\n    getClearProps: () => ({\\n      tabIndex: -1,\\n      onClick: handleClear\\n    }),\\n    getPopupIndicatorProps: () => ({\\n      tabIndex: -1,\\n      onClick: handlePopupIndicator\\n    }),\\n    getTagProps: ({\\n      index\\n    }) => ({\\n      key: index,\\n      'data-tag-index': index,\\n      tabIndex: -1,\\n      onDelete: handleTagDelete(index)\\n    }),\\n    getListboxProps: () => ({\\n      role: 'listbox',\\n      id: `${id}-listbox`,\\n      'aria-labelledby': `${id}-label`,\\n      ref: handleListboxRef,\\n      onMouseDown: event => {\\n        // Prevent blur\\n        event.preventDefault();\\n      }\\n    }),\\n    getOptionProps: ({\\n      index,\\n      option\\n    }) => {\\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && isOptionEqualToValue(option, value2));\\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\\n      return {\\n        key: getOptionLabel(option),\\n        tabIndex: -1,\\n        role: 'option',\\n        id: `${id}-option-${index}`,\\n        onMouseOver: handleOptionMouseOver,\\n        onClick: handleOptionClick,\\n        onTouchStart: handleOptionTouchStart,\\n        'data-option-index': index,\\n        'aria-disabled': disabled,\\n        'aria-selected': selected\\n      };\\n    },\\n    id,\\n    inputValue,\\n    value,\\n    dirty,\\n    popupOpen,\\n    focused: focused || focusedTag !== -1,\\n    anchorEl,\\n    setAnchorEl,\\n    focusedTag,\\n    groupedOptions\\n  };\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"_getRequireWildcardCache\",\"nodeInterop\",\"WeakMap\",\"cacheBabelInterop\",\"cacheNodeInterop\",\"stripDiacritics\",\"string\",\"normalize\",\"replace\",\"createFilterOptions\",\"config\",\"ignoreAccents\",\"ignoreCase\",\"limit\",\"matchFrom\",\"stringify\",\"trim\",\"options\",\"inputValue\",\"getOptionLabel\",\"input\",\"toLowerCase\",\"filteredOptions\",\"filter\",\"option\",\"candidate\",\"indexOf\",\"slice\",\"findIndex\",\"array\",\"comp\",\"i\",\"length\",\"_interopRequireDefault\",\"Object\",\"defineProperty\",\"value\",\"default\",\"useAutocomplete\",\"props\",\"validOptionIndex\",\"index\",\"direction\",\"listboxRef\",\"current\",\"nextFocus\",\"querySelector\",\"nextFocusDisabled\",\"disabledItemsFocusable\",\"disabled\",\"getAttribute\",\"hasAttribute\",\"autoComplete\",\"autoHighlight\",\"autoSelect\",\"blurOnSelect\",\"disabledProp\",\"clearOnBlur\",\"freeSolo\",\"clearOnEscape\",\"componentName\",\"defaultValue\",\"multiple\",\"disableClearable\",\"disableCloseOnSelect\",\"disableListWrap\",\"filterOptions\",\"defaultFilterOptions\",\"filterSelectedOptions\",\"getOptionDisabled\",\"getOptionLabelProp\",\"_option$label\",\"label\",\"isOptionEqualToValue\",\"groupBy\",\"handleHomeEndKeys\",\"idProp\",\"includeInputInList\",\"inputValueProp\",\"onChange\",\"onClose\",\"onHighlightChange\",\"onInputChange\",\"onOpen\",\"openProp\",\"openOnFocus\",\"selectOnFocus\",\"valueProp\",\"id\",\"_utils\",\"unstable_useId\",\"optionLabel\",\"console\",\"error\",\"undefined\",\"erroneousReturn\",\"JSON\",\"String\",\"ignoreFocus\",\"React\",\"useRef\",\"firstFocus\",\"inputRef\",\"anchorEl\",\"setAnchorEl\",\"useState\",\"focusedTag\",\"setFocusedTag\",\"defaultHighlighted\",\"highlightedIndexRef\",\"setValueState\",\"unstable_useControlled\",\"controlled\",\"name\",\"setInputValueState\",\"state\",\"focused\",\"setFocused\",\"resetInputValue\",\"useCallback\",\"event\",\"newValue\",\"isOptionSelected\",\"newInputValue\",\"prevValue\",\"useEffect\",\"valueChange\",\"open\",\"setOpenState\",\"inputPristine\",\"setInputPristine\",\"inputValueIsSelectedValue\",\"some\",\"value2\",\"listboxAvailable\",\"missingValue\",\"warn\",\"join\",\"focusTag\",\"unstable_useEventCallback\",\"tagToFocus\",\"focus\",\"setHighlightedIndex\",\"reason\",\"removeAttribute\",\"setAttribute\",\"prev\",\"classList\",\"remove\",\"listboxNode\",\"parentElement\",\"scrollTop\",\"add\",\"scrollHeight\",\"clientHeight\",\"elementBottom\",\"offsetTop\",\"offsetHeight\",\"changeHighlightedIndex\",\"diff\",\"nextIndex\",\"getNextIndex\",\"maxIndex\",\"newIndex\",\"Math\",\"abs\",\"setSelectionRange\",\"syncHighlightedIndex\",\"valueItem\",\"currentOption\",\"val\",\"itemIndex\",\"optionItem\",\"handleListboxRef\",\"node\",\"unstable_setRef\",\"nodeName\",\"handleOpen\",\"handleClose\",\"handleValue\",\"details\",\"isTouch\",\"selectNewValue\",\"reasonProp\",\"origin\",\"Array\",\"isArray\",\"matches\",\"push\",\"splice\",\"ctrlKey\",\"metaKey\",\"blur\",\"handleFocusTag\",\"nextTag\",\"handleClear\",\"handleKeyDown\",\"other\",\"onKeyDown\",\"defaultMuiPrevented\",\"key\",\"which\",\"preventDefault\",\"pageSize\",\"stopPropagation\",\"handleFocus\",\"handleBlur\",\"contains\",\"document\",\"activeElement\",\"handleInputChange\",\"target\",\"handleOptionMouseOver\",\"Number\",\"currentTarget\",\"handleOptionTouchStart\",\"handleOptionClick\",\"handleTagDelete\",\"handlePopupIndicator\",\"handleMouseDown\",\"handleClick\",\"selectionEnd\",\"selectionStart\",\"select\",\"handleInputMouseDown\",\"dirty\",\"groupedOptions\",\"indexBy\",\"Map\",\"reduce\",\"acc\",\"group\",\"get\",\"set\",\"getRootProps\",\"_extends2\",\"role\",\"onMouseDown\",\"onClick\",\"getInputLabelProps\",\"htmlFor\",\"getInputProps\",\"onBlur\",\"onFocus\",\"ref\",\"autoCapitalize\",\"spellCheck\",\"getClearProps\",\"tabIndex\",\"getPopupIndicatorProps\",\"getTagProps\",\"onDelete\",\"getListboxProps\",\"getOptionProps\",\"selected\",\"onMouseOver\",\"onTouchStart\",\"popupOpen\",\"_interopRequireWildcard\",\"obj\",\"__esModule\",\"cache\",\"has\",\"newObj\",\"hasPropertyDescriptor\",\"getOwnPropertyDescriptor\",\"prototype\",\"hasOwnProperty\",\"call\",\"desc\"]\n}\n"]