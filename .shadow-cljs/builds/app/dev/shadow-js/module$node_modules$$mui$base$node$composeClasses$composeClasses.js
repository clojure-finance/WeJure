["^ ","~:resource-id",["~:shadow.build.npm/resource","node_modules/@mui/base/node/composeClasses/composeClasses.js"],"~:js","shadow$provide.module$node_modules$$mui$base$node$composeClasses$composeClasses=function(global,require,module,exports){Object.defineProperty(exports,\"__esModule\",{value:!0});exports.default=function(slots,getUtilityClass,classes){const output={};Object.keys(slots).forEach(slot=>{output[slot]=slots[slot].reduce((acc,key)=>{key&&(classes&&classes[key]&&acc.push(classes[key]),acc.push(getUtilityClass(key)));return acc},[]).join(\" \")});return output}}","~:source","shadow$provide[\"module$node_modules$$mui$base$node$composeClasses$composeClasses\"] = function(global,require,module,exports) {\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = composeClasses;\n\nfunction composeClasses(slots, getUtilityClass, classes) {\n  const output = {};\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\n  slot => {\n    output[slot] = slots[slot].reduce((acc, key) => {\n      if (key) {\n        if (classes && classes[key]) {\n          acc.push(classes[key]);\n        }\n\n        acc.push(getUtilityClass(key));\n      }\n\n      return acc;\n    }, []).join(' ');\n  });\n  return output;\n}\n};","~:removed-requires",["~#set",[]],"~:actual-requires",["^5",["~$shadow.js"]],"~:properties",["^5",["__esModule","value","default"]],"~:compiled-at",1676375827656,"~:source-map-json","{\n\"version\":3,\n\"file\":\"module$node_modules$$mui$base$node$composeClasses$composeClasses.js\",\n\"lineCount\":1,\n\"mappings\":\"AAAAA,cAAA,CAAA,gEAAA,CAAqF,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAG7HC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAC3CG,MAAO,CAAA,CADoC,CAA7C,CAGAH,QAAQI,CAAAA,OAAR,CAEAC,QAAuB,CAACC,KAAD,CAAQC,eAAR,CAAyBC,OAAzB,CAAkC,CACvD,MAAMC,OAAS,EACfR,OAAOS,CAAAA,IAAP,CAAYJ,KAAZ,CAAmBK,CAAAA,OAAnB,CAEAC,IAAA,EAAQ,CACNH,MAAA,CAAOG,IAAP,CAAA,CAAeN,KAAA,CAAMM,IAAN,CAAYC,CAAAA,MAAZ,CAAmB,CAACC,GAAD,CAAMC,GAAN,CAAA,EAAc,CAC1CA,GAAJ,GACMP,OAIJ,EAJeA,OAAA,CAAQO,GAAR,CAIf,EAHED,GAAIE,CAAAA,IAAJ,CAASR,OAAA,CAAQO,GAAR,CAAT,CAGF,CAAAD,GAAIE,CAAAA,IAAJ,CAAST,eAAA,CAAgBQ,GAAhB,CAAT,CALF,CAQA,OAAOD,IATuC,CAAjC,CAUZ,EAVY,CAURG,CAAAA,IAVQ,CAUH,GAVG,CADT,CAFR,CAeA,OAAOR,OAjBgD,CARoE;\",\n\"sources\":[\"node_modules/@mui/base/node/composeClasses/composeClasses.js\"],\n\"sourcesContent\":[\"shadow$provide[\\\"module$node_modules$$mui$base$node$composeClasses$composeClasses\\\"] = function(global,require,module,exports) {\\n\\\"use strict\\\";\\n\\nObject.defineProperty(exports, \\\"__esModule\\\", {\\n  value: true\\n});\\nexports.default = composeClasses;\\n\\nfunction composeClasses(slots, getUtilityClass, classes) {\\n  const output = {};\\n  Object.keys(slots).forEach( // `Objet.keys(slots)` can't be wider than `T` because we infer `T` from `slots`.\\n  // @ts-expect-error https://github.com/microsoft/TypeScript/pull/12253#issuecomment-263132208\\n  slot => {\\n    output[slot] = slots[slot].reduce((acc, key) => {\\n      if (key) {\\n        if (classes && classes[key]) {\\n          acc.push(classes[key]);\\n        }\\n\\n        acc.push(getUtilityClass(key));\\n      }\\n\\n      return acc;\\n    }, []).join(' ');\\n  });\\n  return output;\\n}\\n};\"],\n\"names\":[\"shadow$provide\",\"global\",\"require\",\"module\",\"exports\",\"Object\",\"defineProperty\",\"value\",\"default\",\"composeClasses\",\"slots\",\"getUtilityClass\",\"classes\",\"output\",\"keys\",\"forEach\",\"slot\",\"reduce\",\"acc\",\"key\",\"push\",\"join\"]\n}\n"]