{
"version":3,
"file":"module$node_modules$multicodec$src$int_table.js",
"lineCount":1,
"mappings":"AAAAA,cAAA,CAAA,4CAAA,CAAiE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEnGC,MAAAA,CAAYH,OAAA,CAAQ,oDAAR,CAGZI,QAAAA,CAAY,IAAIC,GAEtB,KAAK,MAAMC,YAAX,GAA2BH,OAA3B,CAEEC,OAAUG,CAAAA,GAAV,CADaJ,MAAAK,CAAUF,YAAVE,CACb,CAAoBF,YAApB,CAGFL,OAAOC,CAAAA,OAAP,CAAiBO,MAAOC,CAAAA,MAAP,CAAcN,OAAd,CAZwF;",
"sources":["node_modules/multicodec/src/int-table.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$multicodec$src$int_table\"] = function(global,require,module,exports) {\n'use strict'\nconst baseTable = require('./base-table.json')\n\n// map for hexString -> codecName\nconst nameTable = new Map()\n\nfor (const encodingName in baseTable) {\n  const code = baseTable[encodingName]\n  nameTable.set(code, encodingName)\n}\n\nmodule.exports = Object.freeze(nameTable)\n\n};"],
"names":["shadow$provide","global","require","module","exports","baseTable","nameTable","Map","encodingName","set","code","Object","freeze"]
}
