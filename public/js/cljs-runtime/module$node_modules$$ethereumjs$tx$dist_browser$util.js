shadow$provide.module$node_modules$$ethereumjs$tx$dist_browser$util=function(global,require,module,exports){Object.defineProperty(exports,"__esModule",{value:!0});exports.AccessLists=void 0;var ethereumjs_util_1=require("module$node_modules$ethereumjs_util$dist_browser$index"),types_1=require("module$node_modules$$ethereumjs$tx$dist_browser$types");global=function(){function AccessLists(){}AccessLists.getAccessListData=function(accessList){if(accessList&&(0,types_1.isAccessList)(accessList)){var AccessListJSON=
accessList;for(var newAccessList=[],i=0;i<accessList.length;i++){for(var item=accessList[i],addressBuffer=(0,ethereumjs_util_1.toBuffer)(item.address),storageItems=[],index=0;index<item.storageKeys.length;index++)storageItems.push((0,ethereumjs_util_1.toBuffer)(item.storageKeys[index]));newAccessList.push([addressBuffer,storageItems])}accessList=newAccessList}else for(accessList=null!==accessList&&void 0!==accessList?accessList:[],AccessListJSON=[],i=0;i<accessList.length;i++){newAccessList=accessList[i];
addressBuffer=(0,ethereumjs_util_1.bufferToHex)(newAccessList[0]);storageItems=[];for(item=0;item<newAccessList[1].length;item++)storageItems.push((0,ethereumjs_util_1.bufferToHex)(newAccessList[1][item]));AccessListJSON.push({address:addressBuffer,storageKeys:storageItems})}return{AccessListJSON,accessList}};AccessLists.verifyAccessList=function(accessList){for(var key=0;key<accessList.length;key++){var accessListItem=accessList[key],address=accessListItem[0],storageSlots=accessListItem[1];if(void 0!==
accessListItem[2])throw Error("Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.");if(20!=address.length)throw Error("Invalid EIP-2930 transaction: address length should be 20 bytes");for(accessListItem=0;accessListItem<storageSlots.length;accessListItem++)if(32!=storageSlots[accessListItem].length)throw Error("Invalid EIP-2930 transaction: storage slot length should be 32 bytes");}};AccessLists.getAccessListJSON=function(accessList){for(var accessListJSON=
[],index=0;index<accessList.length;index++){var item=accessList[index],JSONItem={address:"0x"+(0,ethereumjs_util_1.setLengthLeft)(item[0],20).toString("hex"),storageKeys:[]};item=item[1];for(var slot=0;slot<item.length;slot++)JSONItem.storageKeys.push("0x"+(0,ethereumjs_util_1.setLengthLeft)(item[slot],32).toString("hex"));accessListJSON.push(JSONItem)}return accessListJSON};AccessLists.getDataFeeEIP2930=function(accessList,common){var accessListStorageKeyCost=common.param("gasPrices","accessListStorageKeyCost");
common=common.param("gasPrices","accessListAddressCost");for(var slots=0,index=0;index<accessList.length;index++)slots+=accessList[index][1].length;return accessList.length*common+slots*accessListStorageKeyCost};return AccessLists}();exports.AccessLists=global}
//# sourceMappingURL=module$node_modules$$ethereumjs$tx$dist_browser$util.js.map
