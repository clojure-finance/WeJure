shadow$provide.module$node_modules$web3_core_helpers$lib$errors=function(global,require,module,exports){module.exports={ErrorResponse:function(result){var message=result&&result.error&&result.error.message?result.error.message:JSON.stringify(result);message=Error("Returned error: "+message);message.data=result.error&&result.error.data?result.error.data:null;return message},InvalidNumberOfParams:function(got,expected,method){return Error('Invalid number of parameters for "'+method+'". Got '+got+" expected "+
expected+"!")},InvalidConnection:function(host,event){return this.ConnectionError("CONNECTION ERROR: Couldn't connect to node "+host+".",event)},InvalidProvider:function(){return Error("Provider not set or invalid")},InvalidResponse:function(result){result=result&&result.error&&result.error.message?result.error.message:"Invalid JSON RPC response: "+JSON.stringify(result);return Error(result)},ConnectionTimeout:function(ms){return Error("CONNECTION TIMEOUT: timeout of "+ms+" ms achived")},ConnectionNotOpenError:function(event){return this.ConnectionError("connection not open on send()",
event)},ConnectionCloseError:function(event){return"object"===typeof event&&event.code&&event.reason?this.ConnectionError("CONNECTION ERROR: The connection got closed with the close code `"+event.code+"` and the following reason string `"+event.reason+"`",event):Error("CONNECTION ERROR: The connection closed unexpectedly")},MaxAttemptsReachedOnReconnectingError:function(){return Error("Maximum number of reconnect attempts reached!")},PendingRequestsOnReconnectingError:function(){return Error("CONNECTION ERROR: Provider started to reconnect before the response got received!")},
ConnectionError:function(msg,event){msg=Error(msg);event&&(msg.code=event.code,msg.reason=event.reason);return msg},RevertInstructionError:function(reason,signature){var error=Error("Your request got reverted with the following reason string: "+reason);error.reason=reason;error.signature=signature;return error},TransactionRevertInstructionError:function(reason,signature,receipt){var error=Error("Transaction has been reverted by the EVM:\n"+JSON.stringify(receipt,null,2));error.reason=reason;error.signature=
signature;error.receipt=receipt;return error},TransactionError:function(message,receipt){message=Error(message);message.receipt=receipt;return message},NoContractAddressFoundError:function(receipt){return this.TransactionError("The transaction receipt didn't contain a contract address.",receipt)},ContractCodeNotStoredError:function(receipt){return this.TransactionError("The contract code couldn't be stored, please check your gas limit.",receipt)},TransactionRevertedWithoutReasonError:function(receipt){return this.TransactionError("Transaction has been reverted by the EVM:\n"+
JSON.stringify(receipt,null,2),receipt)},TransactionOutOfGasError:function(receipt){return this.TransactionError("Transaction ran out of gas. Please provide more gas:\n"+JSON.stringify(receipt,null,2),receipt)},ResolverMethodMissingError:function(address,name){return Error("The resolver at "+address+'does not implement requested method: "'+name+'".')},ContractMissingABIError:function(){return Error("You must provide the json interface of the contract when instantiating a contract object.")},ContractOnceRequiresCallbackError:function(){return Error("Once requires a callback as the second parameter.")},
ContractEventDoesNotExistError:function(eventName){return Error('Event "'+eventName+"\" doesn't exist in this contract.")},ContractReservedEventError:function(type){return Error('The event "'+type+"\" is a reserved event name, you can't use it.")},ContractMissingDeployDataError:function(){return Error('No "data" specified in neither the given options, nor the default options.')},ContractNoAddressDefinedError:function(){return Error("This contract object doesn't have address set yet, please set an address first.")},
ContractNoFromAddressDefinedError:function(){return Error('No "from" address specified in neither the given options, nor the default options.')}}}
//# sourceMappingURL=module$node_modules$web3_core_helpers$lib$errors.js.map
