{
"version":3,
"file":"module$node_modules$$ethersproject$hash$lib$namehash.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,oDAAA,CAAyE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAEjHC,MAAOC,CAAAA,cAAP,CAAsBF,OAAtB,CAA+B,YAA/B,CAA6C,CAAEG,MAAO,CAAA,CAAT,CAA7C,CACAH,QAAQI,CAAAA,QAAR,CAAmBJ,OAAQK,CAAAA,WAA3B,CAAyC,IAAK,EAC9C,KAAIC,QAAUR,OAAA,CAAQ,oDAAR,CAAd,CACIS,UAAYT,OAAA,CAAQ,sDAAR,CADhB,CAEIU,YAAcV,OAAA,CAAQ,wDAAR,CACdW,OAAAA,CAAWX,OAAA,CAAQ,qDAAR,CACXY;OAAAA,CAAaZ,OAAA,CAAQ,sDAAR,CACjB,KAAIa,OAAS,IAAIF,MAASG,CAAAA,MAAb,CAAoBF,OAAWG,CAAAA,OAA/B,CAAb,CACIC,MAAQ,IAAIC,UAAJ,CAAe,EAAf,CACZD,MAAME,CAAAA,IAAN,CAAW,CAAX,CACA,KAAIC,UAAgBC,MAAJ,CAAW,qBAAX,CAchBlB,QAAQK,CAAAA,WAAR,CAbAA,QAAoB,CAACc,IAAD,CAAO,CACvB,GAAI,CACA,IAAIC,MAAQD,IAAKE,CAAAA,KAAL,CAAW,GAAX,CACZ,KAASC,IAAT,CAAa,CAAb,CAAgBA,IAAhB,CAAoBF,KAAMG,CAAAA,MAA1B,CAAkCD,IAAA,EAAlC,CACI,GAAiD,CAAjD,GAAI,GAAIf,SAAUiB,CAAAA,QAAd,EAAwBJ,KAAA,CAAME,IAAN,CAAxB,CAAkCC,CAAAA,MAAtC,CACI,KAAUE,MAAJ,CAAU,OAAV,CAAN,CAGR,MAAO,CAAA,CAPP,CASJ,MAAOC,KAAP,CAAc,EACd,MAAO,CAAA,CAXgB,CAgC3B1B,QAAQI,CAAAA,QAAR,CAlBAA,QAAiB,CAACe,IAAD,CAAO,CAEE,QAAtB,GAAI,MAAQA,KAAZ,EACIR,MAAOgB,CAAAA,kBAAP,CAA0B,gCAA1B;AAA4D,MAA5D,CAAoER,IAApE,CAIJ,KAFA,IAAIS,QAAUT,IAAd,CACIU,OAASf,KACb,CAAOc,OAAQL,CAAAA,MAAf,CAAA,CAAuB,CACfO,OAAAA,CAAYF,OAAQG,CAAAA,KAAR,CAAcd,SAAd,CACC,KAAjB,EAAIa,OAAJ,EAA0C,EAA1C,GAAyBA,OAAA,CAAU,CAAV,CAAzB,EACInB,MAAOgB,CAAAA,kBAAP,CAA0B,wCAA1B,CAAoE,MAApE,CAA4ER,IAA5E,CAEJ,KAAIa,MAAQ,GAAIzB,SAAU0B,CAAAA,WAAd,EAA2B,GAAI1B,SAAUiB,CAAAA,QAAd,EAAwBM,OAAA,CAAU,CAAV,CAAxB,CAA3B,CACZD,OAAA,CAAS,GAAIrB,WAAY0B,CAAAA,SAAhB,EAA2B,GAAI5B,OAAQ6B,CAAAA,MAAZ,EAAoB,CAACN,MAAD,CAAS,GAAIrB,WAAY0B,CAAAA,SAAhB,EAA2BF,KAA3B,CAAT,CAApB,CAA3B,CACTJ,QAAA,CAAUE,OAAA,CAAU,CAAV,CAAV,EAA0B,EAPP,CASvB,MAAO,GAAIxB,OAAQ8B,CAAAA,OAAZ,EAAqBP,MAArB,CAhBa,CA3ByF;",
"sources":["node_modules/@ethersproject/hash/lib/namehash.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$hash$lib$namehash\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.namehash = exports.isValidName = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar strings_1 = require(\"@ethersproject/strings\");\nvar keccak256_1 = require(\"@ethersproject/keccak256\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar Zeros = new Uint8Array(32);\nZeros.fill(0);\nvar Partition = new RegExp(\"^((.*)\\\\.)?([^.]+)$\");\nfunction isValidName(name) {\n    try {\n        var comps = name.split(\".\");\n        for (var i = 0; i < comps.length; i++) {\n            if ((0, strings_1.nameprep)(comps[i]).length === 0) {\n                throw new Error(\"empty\");\n            }\n        }\n        return true;\n    }\n    catch (error) { }\n    return false;\n}\nexports.isValidName = isValidName;\nfunction namehash(name) {\n    /* istanbul ignore if */\n    if (typeof (name) !== \"string\") {\n        logger.throwArgumentError(\"invalid ENS name; not a string\", \"name\", name);\n    }\n    var current = name;\n    var result = Zeros;\n    while (current.length) {\n        var partition = current.match(Partition);\n        if (partition == null || partition[2] === \"\") {\n            logger.throwArgumentError(\"invalid ENS address; missing component\", \"name\", name);\n        }\n        var label = (0, strings_1.toUtf8Bytes)((0, strings_1.nameprep)(partition[3]));\n        result = (0, keccak256_1.keccak256)((0, bytes_1.concat)([result, (0, keccak256_1.keccak256)(label)]));\n        current = partition[2] || \"\";\n    }\n    return (0, bytes_1.hexlify)(result);\n}\nexports.namehash = namehash;\n//# sourceMappingURL=namehash.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Object","defineProperty","value","namehash","isValidName","bytes_1","strings_1","keccak256_1","logger_1","_version_1","logger","Logger","version","Zeros","Uint8Array","fill","Partition","RegExp","name","comps","split","i","length","nameprep","Error","error","throwArgumentError","current","result","partition","match","label","toUtf8Bytes","keccak256","concat","hexlify"]
}
