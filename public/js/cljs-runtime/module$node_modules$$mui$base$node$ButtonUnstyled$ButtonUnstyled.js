shadow$provide.module$node_modules$$mui$base$node$ButtonUnstyled$ButtonUnstyled=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}module=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=void 0;var _extends2=module(require("module$node_modules$$babel$runtime$helpers$extends")),_objectWithoutPropertiesLoose2=module(require("module$node_modules$$babel$runtime$helpers$objectWithoutPropertiesLoose")),React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);
var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index"));global=module(require("module$node_modules$prop_types$index"));
var _clsx=module(require("module$node_modules$clsx$dist$clsx")),_utils=require("module$node_modules$$mui$utils$index"),_composeClasses=module(require("module$node_modules$$mui$base$node$composeClasses$index")),_buttonUnstyledClasses=require("module$node_modules$$mui$base$node$ButtonUnstyled$buttonUnstyledClasses"),_useButton=module(require("module$node_modules$$mui$base$node$ButtonUnstyled$useButton")),_appendOwnerState=module(require("module$node_modules$$mui$base$node$utils$appendOwnerState")),
_jsxRuntime=require("module$node_modules$react$jsx_runtime");const _excluded="className component components componentsProps children disabled action onBlur onClick onFocus onFocusVisible onKeyDown onKeyUp onMouseLeave".split(" "),useUtilityClasses=ownerState=>{const {active,disabled,focusVisible}=ownerState;return(0,_composeClasses.default)({root:["root",disabled&&"disabled",focusVisible&&"focusVisible",active&&"active"]},_buttonUnstyledClasses.getButtonUnstyledUtilityClass,{})};require=React.forwardRef(function(props,
ref){var _ref;const {className,component,components={},componentsProps={},children,action}=props;var other=(0,_objectWithoutPropertiesLoose2.default)(props,_excluded);const buttonRef=React.useRef();ref=(0,_utils.unstable_useForkRef)(buttonRef,ref);const {active,focusVisible,setFocusVisible,getRootProps}=(0,_useButton.default)((0,_extends2.default)({},props,{ref}));React.useImperativeHandle(action,()=>({focusVisible:()=>{setFocusVisible(!0);buttonRef.current.focus()}}),[setFocusVisible]);ref=(0,_extends2.default)({},
props,{active,focusVisible});props=null!=(_ref=null!=component?component:components.Root)?_ref:"button";_ref=(0,_appendOwnerState.default)(props,(0,_extends2.default)({},other,componentsProps.root),ref);other=useUtilityClasses(ref);return(0,_jsxRuntime.jsx)(props,(0,_extends2.default)({},getRootProps(),_ref,{className:(0,_clsx.default)(other.root,className,_ref.className),children}))});require.propTypes={action:global.default.oneOfType([global.default.func,global.default.shape({current:global.default.shape({focusVisible:global.default.func.isRequired})})]),
children:global.default.node,className:global.default.string,component:global.default.elementType,components:global.default.shape({Root:global.default.elementType}),componentsProps:global.default.object,disabled:global.default.bool,onClick:global.default.func,onFocusVisible:global.default.func};exports.default=require}
//# sourceMappingURL=module$node_modules$$mui$base$node$ButtonUnstyled$ButtonUnstyled.js.map
