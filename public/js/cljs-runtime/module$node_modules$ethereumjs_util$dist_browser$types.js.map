{
"version":3,
"file":"module$node_modules$ethereumjs_util$dist_browser$types.js",
"lineCount":4,
"mappings":"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",
"sources":["node_modules/ethereumjs-util/dist.browser/types.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereumjs_util$dist_browser$types\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toType = exports.TypeOutput = exports.bnToRlp = exports.bnToUnpaddedBuffer = exports.bnToHex = void 0;\nvar externals_1 = require(\"./externals\");\nvar internal_1 = require(\"./internal\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nfunction bnToHex(value) {\n    return \"0x\".concat(value.toString(16));\n}\nexports.bnToHex = bnToHex;\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nfunction bnToUnpaddedBuffer(value) {\n    // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n    // for compatibility with browserify and similar tools\n    return (0, bytes_1.unpadBuffer)(value.toArrayLike(Buffer));\n}\nexports.bnToUnpaddedBuffer = bnToUnpaddedBuffer;\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nfunction bnToRlp(value) {\n    return bnToUnpaddedBuffer(value);\n}\nexports.bnToRlp = bnToRlp;\n/**\n * Type output options\n */\nvar TypeOutput;\n(function (TypeOutput) {\n    TypeOutput[TypeOutput[\"Number\"] = 0] = \"Number\";\n    TypeOutput[TypeOutput[\"BN\"] = 1] = \"BN\";\n    TypeOutput[TypeOutput[\"Buffer\"] = 2] = \"Buffer\";\n    TypeOutput[TypeOutput[\"PrefixedHexString\"] = 3] = \"PrefixedHexString\";\n})(TypeOutput = exports.TypeOutput || (exports.TypeOutput = {}));\nfunction toType(input, outputType) {\n    if (input === null) {\n        return null;\n    }\n    if (input === undefined) {\n        return undefined;\n    }\n    if (typeof input === 'string' && !(0, internal_1.isHexString)(input)) {\n        throw new Error(\"A string must be provided with a 0x-prefix, given: \".concat(input));\n    }\n    else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n        throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n    }\n    var output = (0, bytes_1.toBuffer)(input);\n    if (outputType === TypeOutput.Buffer) {\n        return output;\n    }\n    else if (outputType === TypeOutput.BN) {\n        return new externals_1.BN(output);\n    }\n    else if (outputType === TypeOutput.Number) {\n        var bn = new externals_1.BN(output);\n        var max = new externals_1.BN(Number.MAX_SAFE_INTEGER.toString());\n        if (bn.gt(max)) {\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)');\n        }\n        return bn.toNumber();\n    }\n    else {\n        // outputType === TypeOutput.PrefixedHexString\n        return \"0x\".concat(output.toString('hex'));\n    }\n}\nexports.toType = toType;\n//# sourceMappingURL=types.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","bnToUnpaddedBuffer","value","bytes_1","unpadBuffer","toArrayLike","Buffer","Object","defineProperty","toType","TypeOutput","bnToRlp","bnToHex","externals_1","internal_1","concat","toString","input","outputType","undefined","isHexString","Error","Number","isSafeInteger","output","toBuffer","BN","bn","max","MAX_SAFE_INTEGER","gt","toNumber"]
}
