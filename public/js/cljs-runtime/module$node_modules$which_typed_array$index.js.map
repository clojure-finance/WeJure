{
"version":3,
"file":"module$node_modules$which_typed_array$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,2CAAA,CAAgE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAGxG,IAAIC,QAAUH,OAAA,CAAQ,mCAAR,CAAd,CACII,qBAAuBJ,OAAA,CAAQ,kDAAR,CACvBK,QAAAA,CAAYL,OAAA,CAAQ,yCAAR,CAEhB,KAAIM,UAAYD,OAAA,CAAU,2BAAV,CAAhB,CACIE,eAAiBP,OAAA,CAAQ,2CAAR,CAAA,EADrB,CAGIQ,EAA0B,WAAtB,GAAA,MAAOC,WAAP,CAAoCV,MAApC,CAA6CU,UACjDC,OAAAA,CAAcN,oBAAA,EAElB,KAAIO;AAASN,OAAA,CAAU,wBAAV,CAAb,CACIO,UAAY,EADhB,CAEIC,KAAOb,OAAA,CAAQ,kEAAR,CAFX,CAGIc,eAAiBC,MAAOD,CAAAA,cACxBP,eAAJ,EAAsBM,IAAtB,EAA8BC,cAA9B,EACCX,OAAA,CAAQO,MAAR,CAAqB,QAAS,CAACM,UAAD,CAAa,CAC1C,GAA6B,UAA7B,GAAI,MAAOR,EAAA,CAAEQ,UAAF,CAAX,CAAyC,CACxC,IAAIC,IAAM,IAAIT,CAAA,CAAEQ,UAAF,CACd,IAAIE,MAAOC,CAAAA,WAAX,GAA0BF,IAA1B,CAA+B,CAC1BG,GAAAA,CAAQN,cAAA,CAAeG,GAAf,CACZ,KAAII,WAAaR,IAAA,CAAKO,GAAL,CAAYF,MAAOC,CAAAA,WAAnB,CACZE,WAAL,GACKC,GACJ,CADiBR,cAAA,CAAeM,GAAf,CACjB,CAAAC,UAAA,CAAaR,IAAA,CAAKS,GAAL,CAAiBJ,MAAOC,CAAAA,WAAxB,CAFd,CAIAP,UAAA,CAAUI,UAAV,CAAA;AAAwBK,UAAWE,CAAAA,GAPL,CAFS,CADC,CAA3C,CAgBD,KAAIC,eAAiBA,QAA0B,CAACC,KAAD,CAAQ,CACtD,IAAIC,UAAY,CAAA,CAChBvB,QAAA,CAAQS,SAAR,CAAmB,QAAS,CAACe,MAAD,CAASX,UAAT,CAAqB,CAChD,GAAI,CAACU,SAAL,CACC,GAAI,CACH,IAAIE,KAAOD,MAAOE,CAAAA,IAAP,CAAYJ,KAAZ,CACPG,KAAJ,GAAaZ,UAAb,GACCU,SADD,CACaE,IADb,CAFG,CAKF,MAAOE,CAAP,CAAU,EAPmC,CAAjD,CAUA,OAAOJ,UAZ+C,CAAvD,CAeIK,aAAe/B,OAAA,CAAQ,0CAAR,CAEnBC,OAAOC,CAAAA,OAAP,CAAiB8B,QAAwB,CAACP,KAAD,CAAQ,CAChD,MAAKM,aAAA,CAAaN,KAAb,CAAL,CACKlB,cAAL,EAAyBW,MAAOC,CAAAA,WAAhC,GAA+CM,MAA/C,CACOD,cAAA,CAAeC,KAAf,CADP,CAAgEd,MAAA,CAAOL,SAAA,CAAUmB,KAAV,CAAP,CAAyB,CAAzB,CAA4B,CAAC,CAA7B,CADhE,CAAmC,CAAA,CADa,CAnDuD;",
"sources":["node_modules/which-typed-array/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$which_typed_array$index\"] = function(global,require,module,exports) {\n'use strict';\n\nvar forEach = require('foreach');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar toStrTags = {};\nvar gOPD = require('es-abstract/helpers/getOwnPropertyDescriptor');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tif (typeof g[typedArray] === 'function') {\n\t\t\tvar arr = new g[typedArray]();\n\t\t\tif (Symbol.toStringTag in arr) {\n\t\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\t\tif (!descriptor) {\n\t\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t\t}\n\t\t\t\ttoStrTags[typedArray] = descriptor.get;\n\t\t\t}\n\t\t}\n\t});\n}\n\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\tvar foundName = false;\n\tforEach(toStrTags, function (getter, typedArray) {\n\t\tif (!foundName) {\n\t\t\ttry {\n\t\t\t\tvar name = getter.call(value);\n\t\t\t\tif (name === typedArray) {\n\t\t\t\t\tfoundName = name;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\t\t}\n\t});\n\treturn foundName;\n};\n\nvar isTypedArray = require('is-typed-array');\n\nmodule.exports = function whichTypedArray(value) {\n\tif (!isTypedArray(value)) { return false; }\n\tif (!hasToStringTag || !(Symbol.toStringTag in value)) { return $slice($toString(value), 8, -1); }\n\treturn tryTypedArrays(value);\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","forEach","availableTypedArrays","callBound","$toString","hasToStringTag","g","globalThis","typedArrays","$slice","toStrTags","gOPD","getPrototypeOf","Object","typedArray","arr","Symbol","toStringTag","proto","descriptor","superProto","get","tryTypedArrays","value","foundName","getter","name","call","e","isTypedArray","module.exports"]
}
