shadow$provide.module$node_modules$web3_eth_ens$lib$lib$ResolverMethodHandler=function(global,require,module,exports){function ResolverMethodHandler(registry){this.registry=registry}var PromiEvent=require("module$node_modules$web3_core_promievent$lib$index"),namehash=require("module$node_modules$eth_ens_namehash$index"),errors=require("module$node_modules$web3_core_helpers$lib$index").errors,interfaceIds=require("module$node_modules$web3_eth_ens$lib$config").interfaceIds;ResolverMethodHandler.prototype.method=
function(ensName,methodName,methodArguments,outputFormatter,callback){return{call:this.call.bind({ensName,methodName,methodArguments,callback,parent:this,outputFormatter}),send:this.send.bind({ensName,methodName,methodArguments,callback,parent:this})}};ResolverMethodHandler.prototype.call=function(callback){var self=this,promiEvent=new PromiEvent,preparedArguments=this.parent.prepareArguments(this.ensName,this.methodArguments),outputFormatter=this.outputFormatter||null;this.parent.registry.getResolver(this.ensName).then(async function(resolver){await self.parent.checkInterfaceSupport(resolver,
self.methodName);self.parent.handleCall(promiEvent,resolver.methods[self.methodName],preparedArguments,outputFormatter,callback)}).catch(function(error){"function"===typeof callback?callback(error,null):promiEvent.reject(error)});return promiEvent.eventEmitter};ResolverMethodHandler.prototype.send=function(sendOptions,callback){var self=this,promiEvent=new PromiEvent,preparedArguments=this.parent.prepareArguments(this.ensName,this.methodArguments);this.parent.registry.getResolver(this.ensName).then(async function(resolver){await self.parent.checkInterfaceSupport(resolver,
self.methodName);self.parent.handleSend(promiEvent,resolver.methods[self.methodName],preparedArguments,sendOptions,callback)}).catch(function(error){"function"===typeof callback?callback(error,null):promiEvent.reject(error)});return promiEvent.eventEmitter};ResolverMethodHandler.prototype.handleCall=function(promiEvent,method,preparedArguments,outputFormatter,callback){method.apply(this,preparedArguments).call().then(function(result){outputFormatter&&(result=outputFormatter(result));"function"===
typeof callback?callback(result,result):promiEvent.resolve(result)}).catch(function(error){"function"===typeof callback?callback(error,null):promiEvent.reject(error)});return promiEvent};ResolverMethodHandler.prototype.handleSend=function(promiEvent,method,preparedArguments,sendOptions,callback){method.apply(this,preparedArguments).send(sendOptions).on("sending",function(){promiEvent.eventEmitter.emit("sending")}).on("sent",function(){promiEvent.eventEmitter.emit("sent")}).on("transactionHash",function(hash){promiEvent.eventEmitter.emit("transactionHash",
hash)}).on("confirmation",function(confirmationNumber,receipt){promiEvent.eventEmitter.emit("confirmation",confirmationNumber,receipt)}).on("receipt",function(receipt){promiEvent.eventEmitter.emit("receipt",receipt);promiEvent.resolve(receipt);"function"===typeof callback&&callback(receipt,receipt)}).on("error",function(error){promiEvent.eventEmitter.emit("error",error);"function"===typeof callback?callback(error,null):promiEvent.reject(error)});return promiEvent};ResolverMethodHandler.prototype.prepareArguments=
function(name,methodArguments){name=namehash.hash(name);return 0<methodArguments.length?(methodArguments.unshift(name),methodArguments):[name]};ResolverMethodHandler.prototype.checkInterfaceSupport=async function(resolver,methodName){if(interfaceIds[methodName]){var supported=!1;try{supported=await resolver.methods.supportsInterface(interfaceIds[methodName]).call()}catch(err){console.warn('Could not verify interface of resolver contract at "'+resolver.options.address+'". ')}if(!supported)throw errors.ResolverMethodMissingError(resolver.options.address,
methodName);}};module.exports=ResolverMethodHandler}
//# sourceMappingURL=module$node_modules$web3_eth_ens$lib$lib$ResolverMethodHandler.js.map
