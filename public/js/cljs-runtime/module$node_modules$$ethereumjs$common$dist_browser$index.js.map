{
"version":3,
"file":"module$node_modules$$ethereumjs$common$dist_browser$index.js",
"lineCount":48,
"mappings":"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",
"sources":["node_modules/@ethereumjs/common/dist.browser/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethereumjs$common$dist_browser$index\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __values = (this && this.__values) || function(o) {\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n    if (m) return m.call(o);\n    if (o && typeof o.length === \"number\") return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsensusAlgorithm = exports.ConsensusType = exports.Hardfork = exports.Chain = exports.CustomChain = void 0;\nvar events_1 = require(\"events\");\nvar crc_32_1 = require(\"crc-32\");\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar chains_1 = require(\"./chains\");\nvar hardforks_1 = require(\"./hardforks\");\nvar eips_1 = require(\"./eips\");\nvar CustomChain;\n(function (CustomChain) {\n    /**\n     * Polygon (Matic) Mainnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMainnet\"] = \"polygon-mainnet\";\n    /**\n     * Polygon (Matic) Mumbai Testnet\n     *\n     * - [Documentation](https://docs.matic.network/docs/develop/network-details/network)\n     */\n    CustomChain[\"PolygonMumbai\"] = \"polygon-mumbai\";\n    /**\n     * Arbitrum Rinkeby Testnet\n     *\n     * - [Documentation](https://developer.offchainlabs.com/docs/public_testnet)\n     */\n    CustomChain[\"ArbitrumRinkebyTestnet\"] = \"arbitrum-rinkeby-testnet\";\n    /**\n     * xDai EVM sidechain with a native stable token\n     *\n     * - [Documentation](https://www.xdaichain.com/)\n     */\n    CustomChain[\"xDaiChain\"] = \"x-dai-chain\";\n    /**\n     * Optimistic Kovan - testnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticKovan\"] = \"optimistic-kovan\";\n    /**\n     * Optimistic Ethereum - mainnet for Optimism roll-up\n     *\n     * - [Documentation](https://community.optimism.io/docs/developers/tutorials.html)\n     */\n    CustomChain[\"OptimisticEthereum\"] = \"optimistic-ethereum\";\n})(CustomChain = exports.CustomChain || (exports.CustomChain = {}));\nvar Chain;\n(function (Chain) {\n    Chain[Chain[\"Mainnet\"] = 1] = \"Mainnet\";\n    Chain[Chain[\"Ropsten\"] = 3] = \"Ropsten\";\n    Chain[Chain[\"Rinkeby\"] = 4] = \"Rinkeby\";\n    Chain[Chain[\"Kovan\"] = 42] = \"Kovan\";\n    Chain[Chain[\"Goerli\"] = 5] = \"Goerli\";\n    Chain[Chain[\"Sepolia\"] = 11155111] = \"Sepolia\";\n})(Chain = exports.Chain || (exports.Chain = {}));\nvar Hardfork;\n(function (Hardfork) {\n    Hardfork[\"Chainstart\"] = \"chainstart\";\n    Hardfork[\"Homestead\"] = \"homestead\";\n    Hardfork[\"Dao\"] = \"dao\";\n    Hardfork[\"TangerineWhistle\"] = \"tangerineWhistle\";\n    Hardfork[\"SpuriousDragon\"] = \"spuriousDragon\";\n    Hardfork[\"Byzantium\"] = \"byzantium\";\n    Hardfork[\"Constantinople\"] = \"constantinople\";\n    Hardfork[\"Petersburg\"] = \"petersburg\";\n    Hardfork[\"Istanbul\"] = \"istanbul\";\n    Hardfork[\"MuirGlacier\"] = \"muirGlacier\";\n    Hardfork[\"Berlin\"] = \"berlin\";\n    Hardfork[\"London\"] = \"london\";\n    Hardfork[\"ArrowGlacier\"] = \"arrowGlacier\";\n    Hardfork[\"Shanghai\"] = \"shanghai\";\n    Hardfork[\"Merge\"] = \"merge\";\n})(Hardfork = exports.Hardfork || (exports.Hardfork = {}));\nvar ConsensusType;\n(function (ConsensusType) {\n    ConsensusType[\"ProofOfStake\"] = \"pos\";\n    ConsensusType[\"ProofOfWork\"] = \"pow\";\n    ConsensusType[\"ProofOfAuthority\"] = \"poa\";\n})(ConsensusType = exports.ConsensusType || (exports.ConsensusType = {}));\nvar ConsensusAlgorithm;\n(function (ConsensusAlgorithm) {\n    ConsensusAlgorithm[\"Ethash\"] = \"ethash\";\n    ConsensusAlgorithm[\"Clique\"] = \"clique\";\n    ConsensusAlgorithm[\"Casper\"] = \"casper\";\n})(ConsensusAlgorithm = exports.ConsensusAlgorithm || (exports.ConsensusAlgorithm = {}));\n/**\n * Common class to access chain and hardfork parameters and to provide\n * a unified and shared view on the network and hardfork state.\n *\n * Use the {@link Common.custom} static constructor for creating simple\n * custom chain {@link Common} objects (more complete custom chain setups\n * can be created via the main constructor and the {@link CommonOpts.customChains} parameter).\n */\nvar Common = /** @class */ (function (_super) {\n    __extends(Common, _super);\n    /**\n     *\n     * @constructor\n     */\n    function Common(opts) {\n        var e_1, _a;\n        var _b, _c;\n        var _this = _super.call(this) || this;\n        _this._supportedHardforks = [];\n        _this._eips = [];\n        _this._customChains = (_b = opts.customChains) !== null && _b !== void 0 ? _b : [];\n        _this._chainParams = _this.setChain(opts.chain);\n        _this.DEFAULT_HARDFORK = (_c = _this._chainParams.defaultHardfork) !== null && _c !== void 0 ? _c : Hardfork.Istanbul;\n        try {\n            for (var _d = __values(_this._chainParams.hardforks), _e = _d.next(); !_e.done; _e = _d.next()) {\n                var hf = _e.value;\n                if (!hf.forkHash) {\n                    hf.forkHash = _this._calcForkHash(hf.name);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        _this._hardfork = _this.DEFAULT_HARDFORK;\n        if (opts.supportedHardforks) {\n            _this._supportedHardforks = opts.supportedHardforks;\n        }\n        if (opts.hardfork) {\n            _this.setHardfork(opts.hardfork);\n        }\n        if (opts.eips) {\n            _this.setEIPs(opts.eips);\n        }\n        return _this;\n    }\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one.\n     *\n     * It uses all the {@link Chain} parameters from the {@link baseChain} option except the ones overridden\n     * in a provided {@link chainParamsOrName} dictionary. Some usage example:\n     *\n     * ```javascript\n     * Common.custom({chainId: 123})\n     * ```\n     *\n     * There are also selected supported custom chains which can be initialized by using one of the\n     * {@link CustomChains} for {@link chainParamsOrName}, e.g.:\n     *\n     * ```javascript\n     * Common.custom(CustomChains.MaticMumbai)\n     * ```\n     *\n     * Note that these supported custom chains only provide some base parameters (usually the chain and\n     * network ID and a name) and can only be used for selected use cases (e.g. sending a tx with\n     * the `@ethereumjs/tx` library to a Layer-2 chain).\n     *\n     * @param chainParamsOrName Custom parameter dict (`name` will default to `custom-chain`) or string with name of a supported custom chain\n     * @param opts Custom chain options to set the {@link CustomCommonOpts.baseChain}, selected {@link CustomCommonOpts.hardfork} and others\n     */\n    Common.custom = function (chainParamsOrName, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        var baseChain = (_a = opts.baseChain) !== null && _a !== void 0 ? _a : 'mainnet';\n        var standardChainParams = __assign({}, Common._getChainParams(baseChain));\n        standardChainParams['name'] = 'custom-chain';\n        if (typeof chainParamsOrName !== 'string') {\n            return new Common(__assign({ chain: __assign(__assign({}, standardChainParams), chainParamsOrName) }, opts));\n        }\n        else {\n            if (chainParamsOrName === CustomChain.PolygonMainnet) {\n                return Common.custom({\n                    name: CustomChain.PolygonMainnet,\n                    chainId: 137,\n                    networkId: 137,\n                });\n            }\n            if (chainParamsOrName === CustomChain.PolygonMumbai) {\n                return Common.custom({\n                    name: CustomChain.PolygonMumbai,\n                    chainId: 80001,\n                    networkId: 80001,\n                });\n            }\n            if (chainParamsOrName === CustomChain.ArbitrumRinkebyTestnet) {\n                return Common.custom({\n                    name: CustomChain.ArbitrumRinkebyTestnet,\n                    chainId: 421611,\n                    networkId: 421611,\n                });\n            }\n            if (chainParamsOrName === CustomChain.xDaiChain) {\n                return Common.custom({\n                    name: CustomChain.xDaiChain,\n                    chainId: 100,\n                    networkId: 100,\n                });\n            }\n            if (chainParamsOrName === CustomChain.OptimisticKovan) {\n                return Common.custom({\n                    name: CustomChain.OptimisticKovan,\n                    chainId: 69,\n                    networkId: 69,\n                }, \n                // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n                { hardfork: Hardfork.Berlin });\n            }\n            if (chainParamsOrName === CustomChain.OptimisticEthereum) {\n                return Common.custom({\n                    name: CustomChain.OptimisticEthereum,\n                    chainId: 10,\n                    networkId: 10,\n                }, \n                // Optimism has not implemented the London hardfork yet (targeting Q1.22)\n                { hardfork: Hardfork.Berlin });\n            }\n            throw new Error(\"Custom chain \".concat(chainParamsOrName, \" not supported\"));\n        }\n    };\n    /**\n     * Creates a {@link Common} object for a custom chain, based on a standard one. It uses all the `Chain`\n     * params from {@link baseChain} except the ones overridden in {@link customChainParams}.\n     *\n     * @deprecated Use {@link Common.custom} instead\n     *\n     * @param baseChain The name (`mainnet`) or id (`1`) of a standard chain used to base the custom\n     * chain params on.\n     * @param customChainParams The custom parameters of the chain.\n     * @param hardfork String identifier ('byzantium') for hardfork (optional)\n     * @param supportedHardforks Limit parameter returns to the given hardforks (optional)\n     */\n    Common.forCustomChain = function (baseChain, customChainParams, hardfork, supportedHardforks) {\n        var standardChainParams = Common._getChainParams(baseChain);\n        return new Common({\n            chain: __assign(__assign({}, standardChainParams), customChainParams),\n            hardfork: hardfork,\n            supportedHardforks: supportedHardforks,\n        });\n    };\n    /**\n     * Static method to determine if a {@link chainId} is supported as a standard chain\n     * @param chainId BN id (`1`) of a standard chain\n     * @returns boolean\n     */\n    Common.isSupportedChainId = function (chainId) {\n        var initializedChains = (0, chains_1._getInitializedChains)();\n        return Boolean(initializedChains['names'][chainId.toString()]);\n    };\n    Common._getChainParams = function (chain, customChains) {\n        var initializedChains = (0, chains_1._getInitializedChains)(customChains);\n        if (typeof chain === 'number' || ethereumjs_util_1.BN.isBN(chain)) {\n            chain = chain.toString();\n            if (initializedChains['names'][chain]) {\n                var name_1 = initializedChains['names'][chain];\n                return initializedChains[name_1];\n            }\n            throw new Error(\"Chain with ID \".concat(chain, \" not supported\"));\n        }\n        if (initializedChains[chain]) {\n            return initializedChains[chain];\n        }\n        throw new Error(\"Chain with name \".concat(chain, \" not supported\"));\n    };\n    /**\n     * Sets the chain\n     * @param chain String ('mainnet') or Number (1) chain\n     *     representation. Or, a Dictionary of chain parameters for a private network.\n     * @returns The dictionary with parameters set as chain\n     */\n    Common.prototype.setChain = function (chain) {\n        var e_2, _a;\n        if (typeof chain === 'number' || typeof chain === 'string' || ethereumjs_util_1.BN.isBN(chain)) {\n            // Filter out genesis states if passed in to customChains\n            var plainCustomChains = void 0;\n            if (this._customChains &&\n                this._customChains.length > 0 &&\n                Array.isArray(this._customChains[0])) {\n                plainCustomChains = this._customChains.map(function (e) { return e[0]; });\n            }\n            else {\n                plainCustomChains = this._customChains;\n            }\n            this._chainParams = Common._getChainParams(chain, plainCustomChains);\n        }\n        else if (typeof chain === 'object') {\n            if (this._customChains.length > 0) {\n                throw new Error('Chain must be a string, number, or BN when initialized with customChains passed in');\n            }\n            var required = ['networkId', 'genesis', 'hardforks', 'bootstrapNodes'];\n            try {\n                for (var required_1 = __values(required), required_1_1 = required_1.next(); !required_1_1.done; required_1_1 = required_1.next()) {\n                    var param = required_1_1.value;\n                    if (chain[param] === undefined) {\n                        throw new Error(\"Missing required chain parameter: \".concat(param));\n                    }\n                }\n            }\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\n            finally {\n                try {\n                    if (required_1_1 && !required_1_1.done && (_a = required_1.return)) _a.call(required_1);\n                }\n                finally { if (e_2) throw e_2.error; }\n            }\n            this._chainParams = chain;\n        }\n        else {\n            throw new Error('Wrong input format');\n        }\n        return this._chainParams;\n    };\n    /**\n     * Sets the hardfork to get params for\n     * @param hardfork String identifier (e.g. 'byzantium') or {@link Hardfork} enum\n     */\n    Common.prototype.setHardfork = function (hardfork) {\n        var e_3, _a;\n        if (!this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        var existing = false;\n        try {\n            for (var HARDFORK_CHANGES_1 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next(); !HARDFORK_CHANGES_1_1.done; HARDFORK_CHANGES_1_1 = HARDFORK_CHANGES_1.next()) {\n                var hfChanges = HARDFORK_CHANGES_1_1.value;\n                if (hfChanges[0] === hardfork) {\n                    if (this._hardfork !== hardfork) {\n                        this._hardfork = hardfork;\n                        this.emit('hardforkChanged', hardfork);\n                    }\n                    existing = true;\n                }\n            }\n        }\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_1_1 && !HARDFORK_CHANGES_1_1.done && (_a = HARDFORK_CHANGES_1.return)) _a.call(HARDFORK_CHANGES_1);\n            }\n            finally { if (e_3) throw e_3.error; }\n        }\n        if (!existing) {\n            throw new Error(\"Hardfork with name \".concat(hardfork, \" not supported\"));\n        }\n    };\n    /**\n     * Returns the hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF\n     */\n    Common.prototype.getHardforkByBlockNumber = function (blockNumber, td) {\n        var e_4, _a;\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        td = (0, ethereumjs_util_1.toType)(td, ethereumjs_util_1.TypeOutput.BN);\n        var hardfork = Hardfork.Chainstart;\n        var minTdHF;\n        var maxTdHF;\n        var previousHF;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                // Skip comparison for not applied HFs\n                if (hf.block === null) {\n                    if (td !== undefined && td !== null && hf.td !== undefined && hf.td !== null) {\n                        if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                            return hf.name;\n                        }\n                    }\n                    continue;\n                }\n                if (blockNumber.gte(new ethereumjs_util_1.BN(hf.block))) {\n                    hardfork = hf.name;\n                }\n                if (td && hf.td) {\n                    if (td.gte(new ethereumjs_util_1.BN(hf.td))) {\n                        minTdHF = hf.name;\n                    }\n                    else {\n                        maxTdHF = previousHF;\n                    }\n                }\n                previousHF = hf.name;\n            }\n        }\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_4) throw e_4.error; }\n        }\n        if (td) {\n            var msgAdd = \"block number: \".concat(blockNumber, \" (-> \").concat(hardfork, \"), \");\n            if (minTdHF) {\n                if (!this.hardforkGteHardfork(hardfork, minTdHF)) {\n                    var msg = 'HF determined by block number is lower than the minimum total difficulty HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(minTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n            if (maxTdHF) {\n                if (!this.hardforkGteHardfork(maxTdHF, hardfork)) {\n                    var msg = 'Maximum HF determined by total difficulty is lower than the block number HF';\n                    msgAdd += \"total difficulty: \".concat(td, \" (-> \").concat(maxTdHF, \")\");\n                    throw new Error(\"\".concat(msg, \": \").concat(msgAdd));\n                }\n            }\n        }\n        return hardfork;\n    };\n    /**\n     * Sets a new hardfork based on the block number or an optional\n     * total difficulty (Merge HF) provided.\n     *\n     * An optional TD takes precedence in case the corresponding HF block\n     * is set to `null` or otherwise needs to match (if not an error\n     * will be thrown).\n     *\n     * @param blockNumber\n     * @param td\n     * @returns The name of the HF set\n     */\n    Common.prototype.setHardforkByBlockNumber = function (blockNumber, td) {\n        var hardfork = this.getHardforkByBlockNumber(blockNumber, td);\n        this.setHardfork(hardfork);\n        return hardfork;\n    };\n    /**\n     * Internal helper function to choose between hardfork set and hardfork provided as param\n     * @param hardfork Hardfork given to function as a parameter\n     * @returns Hardfork chosen to be used\n     */\n    Common.prototype._chooseHardfork = function (hardfork, onlySupported) {\n        if (onlySupported === void 0) { onlySupported = true; }\n        if (!hardfork) {\n            hardfork = this._hardfork;\n        }\n        else if (onlySupported && !this._isSupportedHardfork(hardfork)) {\n            throw new Error(\"Hardfork \".concat(hardfork, \" not set as supported in supportedHardforks\"));\n        }\n        return hardfork;\n    };\n    /**\n     * Internal helper function, returns the params for the given hardfork for the chain set\n     * @param hardfork Hardfork name\n     * @returns Dictionary with hardfork params\n     */\n    Common.prototype._getHardfork = function (hardfork) {\n        var e_5, _a;\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_1 = __values(hfs), hfs_1_1 = hfs_1.next(); !hfs_1_1.done; hfs_1_1 = hfs_1.next()) {\n                var hf = hfs_1_1.value;\n                if (hf['name'] === hardfork)\n                    return hf;\n            }\n        }\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\n        finally {\n            try {\n                if (hfs_1_1 && !hfs_1_1.done && (_a = hfs_1.return)) _a.call(hfs_1);\n            }\n            finally { if (e_5) throw e_5.error; }\n        }\n        throw new Error(\"Hardfork \".concat(hardfork, \" not defined for chain \").concat(this.chainName()));\n    };\n    /**\n     * Internal helper function to check if a hardfork is set to be supported by the library\n     * @param hardfork Hardfork name\n     * @returns True if hardfork is supported\n     */\n    Common.prototype._isSupportedHardfork = function (hardfork) {\n        var e_6, _a;\n        if (this._supportedHardforks.length > 0) {\n            try {\n                for (var _b = __values(this._supportedHardforks), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var supportedHf = _c.value;\n                    if (hardfork === supportedHf)\n                        return true;\n                }\n            }\n            catch (e_6_1) { e_6 = { error: e_6_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_6) throw e_6.error; }\n            }\n        }\n        else {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Sets the active EIPs\n     * @param eips\n     */\n    Common.prototype.setEIPs = function (eips) {\n        var e_7, _a;\n        var _this = this;\n        if (eips === void 0) { eips = []; }\n        var _loop_1 = function (eip) {\n            if (!(eip in eips_1.EIPs)) {\n                throw new Error(\"\".concat(eip, \" not supported\"));\n            }\n            var minHF = this_1.gteHardfork(eips_1.EIPs[eip]['minimumHardfork']);\n            if (!minHF) {\n                throw new Error(\"\".concat(eip, \" cannot be activated on hardfork \").concat(this_1.hardfork(), \", minimumHardfork: \").concat(minHF));\n            }\n            if (eips_1.EIPs[eip].requiredEIPs) {\n                ;\n                eips_1.EIPs[eip].requiredEIPs.forEach(function (elem) {\n                    if (!(eips.includes(elem) || _this.isActivatedEIP(elem))) {\n                        throw new Error(\"\".concat(eip, \" requires EIP \").concat(elem, \", but is not included in the EIP list\"));\n                    }\n                });\n            }\n        };\n        var this_1 = this;\n        try {\n            for (var eips_2 = __values(eips), eips_2_1 = eips_2.next(); !eips_2_1.done; eips_2_1 = eips_2.next()) {\n                var eip = eips_2_1.value;\n                _loop_1(eip);\n            }\n        }\n        catch (e_7_1) { e_7 = { error: e_7_1 }; }\n        finally {\n            try {\n                if (eips_2_1 && !eips_2_1.done && (_a = eips_2.return)) _a.call(eips_2);\n            }\n            finally { if (e_7) throw e_7.error; }\n        }\n        this._eips = eips;\n    };\n    /**\n     * Returns a parameter for the current chain setup\n     *\n     * If the parameter is present in an EIP, the EIP always takes precendence.\n     * Otherwise the parameter if taken from the latest applied HF with\n     * a change on the respective parameter.\n     *\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.param = function (topic, name) {\n        var e_8, _a;\n        // TODO: consider the case that different active EIPs\n        // can change the same parameter\n        var value = null;\n        try {\n            for (var _b = __values(this._eips), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var eip = _c.value;\n                value = this.paramByEIP(topic, name, eip);\n                if (value !== null) {\n                    return value;\n                }\n            }\n        }\n        catch (e_8_1) { e_8 = { error: e_8_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_8) throw e_8.error; }\n        }\n        return this.paramByHardfork(topic, name, this._hardfork);\n    };\n    /**\n     * Returns the parameter corresponding to a hardfork\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param hardfork Hardfork name\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByHardfork = function (topic, name, hardfork) {\n        var e_9, _a, e_10, _b;\n        hardfork = this._chooseHardfork(hardfork);\n        var value = null;\n        try {\n            for (var HARDFORK_CHANGES_2 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next(); !HARDFORK_CHANGES_2_1.done; HARDFORK_CHANGES_2_1 = HARDFORK_CHANGES_2.next()) {\n                var hfChanges = HARDFORK_CHANGES_2_1.value;\n                // EIP-referencing HF file (e.g. berlin.json)\n                if ('eips' in hfChanges[1]) {\n                    var hfEIPs = hfChanges[1]['eips'];\n                    try {\n                        for (var hfEIPs_1 = (e_10 = void 0, __values(hfEIPs)), hfEIPs_1_1 = hfEIPs_1.next(); !hfEIPs_1_1.done; hfEIPs_1_1 = hfEIPs_1.next()) {\n                            var eip = hfEIPs_1_1.value;\n                            var valueEIP = this.paramByEIP(topic, name, eip);\n                            value = valueEIP !== null ? valueEIP : value;\n                        }\n                    }\n                    catch (e_10_1) { e_10 = { error: e_10_1 }; }\n                    finally {\n                        try {\n                            if (hfEIPs_1_1 && !hfEIPs_1_1.done && (_b = hfEIPs_1.return)) _b.call(hfEIPs_1);\n                        }\n                        finally { if (e_10) throw e_10.error; }\n                    }\n                    // Paramater-inlining HF file (e.g. istanbul.json)\n                }\n                else {\n                    if (!hfChanges[1][topic]) {\n                        throw new Error(\"Topic \".concat(topic, \" not defined\"));\n                    }\n                    if (hfChanges[1][topic][name] !== undefined) {\n                        value = hfChanges[1][topic][name].v;\n                    }\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_9_1) { e_9 = { error: e_9_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_2_1 && !HARDFORK_CHANGES_2_1.done && (_a = HARDFORK_CHANGES_2.return)) _a.call(HARDFORK_CHANGES_2);\n            }\n            finally { if (e_9) throw e_9.error; }\n        }\n        return value;\n    };\n    /**\n     * Returns a parameter corresponding to an EIP\n     * @param topic Parameter topic ('gasConfig', 'gasPrices', 'vm', 'pow')\n     * @param name Parameter name (e.g. 'minGasLimit' for 'gasConfig' topic)\n     * @param eip Number of the EIP\n     * @returns The value requested or `null` if not found\n     */\n    Common.prototype.paramByEIP = function (topic, name, eip) {\n        if (!(eip in eips_1.EIPs)) {\n            throw new Error(\"\".concat(eip, \" not supported\"));\n        }\n        var eipParams = eips_1.EIPs[eip];\n        if (!(topic in eipParams)) {\n            throw new Error(\"Topic \".concat(topic, \" not defined\"));\n        }\n        if (eipParams[topic][name] === undefined) {\n            return null;\n        }\n        var value = eipParams[topic][name].v;\n        return value;\n    };\n    /**\n     * Returns a parameter for the hardfork active on block number\n     * @param topic Parameter topic\n     * @param name Parameter name\n     * @param blockNumber Block number\n     */\n    Common.prototype.paramByBlock = function (topic, name, blockNumber) {\n        var activeHfs = this.activeHardforks(blockNumber);\n        var hardfork = activeHfs[activeHfs.length - 1]['name'];\n        return this.paramByHardfork(topic, name, hardfork);\n    };\n    /**\n     * Checks if an EIP is activated by either being included in the EIPs\n     * manually passed in with the {@link CommonOpts.eips} or in a\n     * hardfork currently being active\n     *\n     * Note: this method only works for EIPs being supported\n     * by the {@link CommonOpts.eips} constructor option\n     * @param eip\n     */\n    Common.prototype.isActivatedEIP = function (eip) {\n        var e_11, _a;\n        if (this.eips().includes(eip)) {\n            return true;\n        }\n        try {\n            for (var HARDFORK_CHANGES_3 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next(); !HARDFORK_CHANGES_3_1.done; HARDFORK_CHANGES_3_1 = HARDFORK_CHANGES_3.next()) {\n                var hfChanges = HARDFORK_CHANGES_3_1.value;\n                var hf = hfChanges[1];\n                if (this.gteHardfork(hf['name']) && 'eips' in hf) {\n                    if (hf['eips'].includes(eip)) {\n                        return true;\n                    }\n                }\n            }\n        }\n        catch (e_11_1) { e_11 = { error: e_11_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_3_1 && !HARDFORK_CHANGES_3_1.done && (_a = HARDFORK_CHANGES_3.return)) _a.call(HARDFORK_CHANGES_3);\n            }\n            finally { if (e_11) throw e_11.error; }\n        }\n        return false;\n    };\n    /**\n     * Checks if set or provided hardfork is active on block number\n     * @param hardfork Hardfork name or null (for HF set)\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.hardforkIsActiveOnBlock = function (hardfork, blockNumber, opts) {\n        var _a;\n        if (opts === void 0) { opts = {}; }\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        var onlySupported = (_a = opts.onlySupported) !== null && _a !== void 0 ? _a : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock && blockNumber.gte(hfBlock)) {\n            return true;\n        }\n        return false;\n    };\n    /**\n     * Alias to hardforkIsActiveOnBlock when hardfork is set\n     * @param blockNumber\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if HF is active on block number\n     */\n    Common.prototype.activeOnBlock = function (blockNumber, opts) {\n        return this.hardforkIsActiveOnBlock(null, blockNumber, opts);\n    };\n    /**\n     * Sequence based check if given or set HF1 is greater than or equal HF2\n     * @param hardfork1 Hardfork name or null (if set)\n     * @param hardfork2 Hardfork name\n     * @param opts Hardfork options\n     * @returns True if HF1 gte HF2\n     */\n    Common.prototype.hardforkGteHardfork = function (hardfork1, hardfork2, opts) {\n        var e_12, _a;\n        if (opts === void 0) { opts = {}; }\n        var onlyActive = opts.onlyActive === undefined ? false : opts.onlyActive;\n        hardfork1 = this._chooseHardfork(hardfork1, opts.onlySupported);\n        var hardforks;\n        if (onlyActive) {\n            hardforks = this.activeHardforks(null, opts);\n        }\n        else {\n            hardforks = this.hardforks();\n        }\n        var posHf1 = -1, posHf2 = -1;\n        var index = 0;\n        try {\n            for (var hardforks_2 = __values(hardforks), hardforks_2_1 = hardforks_2.next(); !hardforks_2_1.done; hardforks_2_1 = hardforks_2.next()) {\n                var hf = hardforks_2_1.value;\n                if (hf['name'] === hardfork1)\n                    posHf1 = index;\n                if (hf['name'] === hardfork2)\n                    posHf2 = index;\n                index += 1;\n            }\n        }\n        catch (e_12_1) { e_12 = { error: e_12_1 }; }\n        finally {\n            try {\n                if (hardforks_2_1 && !hardforks_2_1.done && (_a = hardforks_2.return)) _a.call(hardforks_2);\n            }\n            finally { if (e_12) throw e_12.error; }\n        }\n        return posHf1 >= posHf2 && posHf2 !== -1;\n    };\n    /**\n     * Alias to hardforkGteHardfork when hardfork is set\n     * @param hardfork Hardfork name\n     * @param opts Hardfork options\n     * @returns True if hardfork set is greater than hardfork provided\n     */\n    Common.prototype.gteHardfork = function (hardfork, opts) {\n        return this.hardforkGteHardfork(null, hardfork, opts);\n    };\n    /**\n     * Checks if given or set hardfork is active on the chain\n     * @param hardfork Hardfork name, optional if HF set\n     * @param opts Hardfork options (onlyActive unused)\n     * @returns True if hardfork is active on the chain\n     */\n    Common.prototype.hardforkIsActiveOnChain = function (hardfork, opts) {\n        var e_13, _a;\n        var _b;\n        if (opts === void 0) { opts = {}; }\n        var onlySupported = (_b = opts.onlySupported) !== null && _b !== void 0 ? _b : false;\n        hardfork = this._chooseHardfork(hardfork, onlySupported);\n        try {\n            for (var _c = __values(this.hardforks()), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var hf = _d.value;\n                if (hf['name'] === hardfork && hf['block'] !== null)\n                    return true;\n            }\n        }\n        catch (e_13_1) { e_13 = { error: e_13_1 }; }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n            }\n            finally { if (e_13) throw e_13.error; }\n        }\n        return false;\n    };\n    /**\n     * Returns the active hardfork switches for the current chain\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Array with hardfork arrays\n     */\n    Common.prototype.activeHardforks = function (blockNumber, opts) {\n        var e_14, _a;\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = [];\n        var hfs = this.hardforks();\n        try {\n            for (var hfs_2 = __values(hfs), hfs_2_1 = hfs_2.next(); !hfs_2_1.done; hfs_2_1 = hfs_2.next()) {\n                var hf = hfs_2_1.value;\n                if (hf['block'] === null)\n                    continue;\n                if (blockNumber !== undefined && blockNumber !== null && blockNumber < hf['block'])\n                    break;\n                if (opts.onlySupported && !this._isSupportedHardfork(hf['name']))\n                    continue;\n                activeHardforks.push(hf);\n            }\n        }\n        catch (e_14_1) { e_14 = { error: e_14_1 }; }\n        finally {\n            try {\n                if (hfs_2_1 && !hfs_2_1.done && (_a = hfs_2.return)) _a.call(hfs_2);\n            }\n            finally { if (e_14) throw e_14.error; }\n        }\n        return activeHardforks;\n    };\n    /**\n     * Returns the latest active hardfork name for chain or block or throws if unavailable\n     * @param blockNumber up to block if provided, otherwise for the whole chain\n     * @param opts Hardfork options (onlyActive unused)\n     * @return Hardfork name\n     */\n    Common.prototype.activeHardfork = function (blockNumber, opts) {\n        if (opts === void 0) { opts = {}; }\n        var activeHardforks = this.activeHardforks(blockNumber, opts);\n        if (activeHardforks.length > 0) {\n            return activeHardforks[activeHardforks.length - 1]['name'];\n        }\n        else {\n            throw new Error(\"No (supported) active hardfork found\");\n        }\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     * @deprecated Please use {@link Common.hardforkBlockBN} for large number support\n     */\n    Common.prototype.hardforkBlock = function (hardfork) {\n        var block = this.hardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the hardfork change block for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if unscheduled\n     */\n    Common.prototype.hardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this._getHardfork(hardfork)['block'];\n        if (block === undefined || block === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(block);\n    };\n    /**\n     * Returns the hardfork change total difficulty (Merge HF) for hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Total difficulty or null if no set\n     */\n    Common.prototype.hardforkTD = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var td = this._getHardfork(hardfork)['td'];\n        if (td === undefined || td === null) {\n            return null;\n        }\n        return new ethereumjs_util_1.BN(td);\n    };\n    /**\n     * True if block number provided is the hardfork (given or set) change block\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var block = this.hardforkBlockBN(hardfork);\n        return block ? block.eq(blockNumber) : false;\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     * @deprecated Please use {@link Common.nextHardforkBlockBN} for large number support\n     */\n    Common.prototype.nextHardforkBlock = function (hardfork) {\n        var block = this.nextHardforkBlockBN(hardfork);\n        return (0, ethereumjs_util_1.toType)(block, ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the change block for the next hardfork after the hardfork provided or set\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns Block number or null if not available\n     */\n    Common.prototype.nextHardforkBlockBN = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var hfBlock = this.hardforkBlockBN(hardfork);\n        if (hfBlock === null) {\n            return null;\n        }\n        // Next fork block number or null if none available\n        // Logic: if accumulator is still null and on the first occurrence of\n        // a block greater than the current hfBlock set the accumulator,\n        // pass on the accumulator as the final result from this time on\n        var nextHfBlock = this.hardforks().reduce(function (acc, hf) {\n            var block = new ethereumjs_util_1.BN(hf.block);\n            return block.gt(hfBlock) && acc === null ? block : acc;\n        }, null);\n        return nextHfBlock;\n    };\n    /**\n     * True if block number provided is the hardfork change block following the hardfork given or set\n     * @param blockNumber Number of the block to check\n     * @param hardfork Hardfork name, optional if HF set\n     * @returns True if blockNumber is HF block\n     */\n    Common.prototype.isNextHardforkBlock = function (blockNumber, hardfork) {\n        blockNumber = (0, ethereumjs_util_1.toType)(blockNumber, ethereumjs_util_1.TypeOutput.BN);\n        hardfork = this._chooseHardfork(hardfork, false);\n        var nextHardforkBlock = this.nextHardforkBlockBN(hardfork);\n        return nextHardforkBlock === null ? false : nextHardforkBlock.eq(blockNumber);\n    };\n    /**\n     * Internal helper function to calculate a fork hash\n     * @param hardfork Hardfork name\n     * @returns Fork hash as hex string\n     */\n    Common.prototype._calcForkHash = function (hardfork) {\n        var e_15, _a;\n        var genesis = Buffer.from(this.genesis().hash.substr(2), 'hex');\n        var hfBuffer = Buffer.alloc(0);\n        var prevBlock = 0;\n        try {\n            for (var _b = __values(this.hardforks()), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var hf = _c.value;\n                var block = hf.block;\n                // Skip for chainstart (0), not applied HFs (null) and\n                // when already applied on same block number HFs\n                if (block !== 0 && block !== null && block !== prevBlock) {\n                    var hfBlockBuffer = Buffer.from(block.toString(16).padStart(16, '0'), 'hex');\n                    hfBuffer = Buffer.concat([hfBuffer, hfBlockBuffer]);\n                }\n                if (hf.name === hardfork)\n                    break;\n                if (block !== null) {\n                    prevBlock = block;\n                }\n            }\n        }\n        catch (e_15_1) { e_15 = { error: e_15_1 }; }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n            }\n            finally { if (e_15) throw e_15.error; }\n        }\n        var inputBuffer = Buffer.concat([genesis, hfBuffer]);\n        // CRC32 delivers result as signed (negative) 32-bit integer,\n        // convert to hex string\n        var forkhash = (0, ethereumjs_util_1.intToBuffer)((0, crc_32_1.buf)(inputBuffer) >>> 0).toString('hex');\n        return \"0x\".concat(forkhash);\n    };\n    /**\n     * Returns an eth/64 compliant fork hash (EIP-2124)\n     * @param hardfork Hardfork name, optional if HF set\n     */\n    Common.prototype.forkHash = function (hardfork) {\n        hardfork = this._chooseHardfork(hardfork, false);\n        var data = this._getHardfork(hardfork);\n        if (data['block'] === null && data['td'] === undefined) {\n            var msg = 'No fork hash calculation possible for future hardfork';\n            throw new Error(msg);\n        }\n        if (data['forkHash'] !== undefined) {\n            return data['forkHash'];\n        }\n        return this._calcForkHash(hardfork);\n    };\n    /**\n     *\n     * @param forkHash Fork hash as a hex string\n     * @returns Array with hardfork data (name, block, forkHash)\n     */\n    Common.prototype.hardforkForForkHash = function (forkHash) {\n        var resArray = this.hardforks().filter(function (hf) {\n            return hf.forkHash === forkHash;\n        });\n        return resArray.length >= 1 ? resArray[resArray.length - 1] : null;\n    };\n    /**\n     * Returns the Genesis parameters of the current chain\n     * @returns Genesis dictionary\n     */\n    Common.prototype.genesis = function () {\n        return this._chainParams['genesis'];\n    };\n    /**\n     * Returns the Genesis state of the current chain,\n     * all values are provided as hex-prefixed strings.\n     */\n    Common.prototype.genesisState = function () {\n        var e_16, _a;\n        // Use require statements here in favor of import statements\n        // to load json files on demand\n        // (high memory usage by large mainnet.json genesis state file)\n        switch (this.chainName()) {\n            case 'mainnet':\n                return require('./genesisStates/mainnet.json');\n            case 'ropsten':\n                return require('./genesisStates/ropsten.json');\n            case 'rinkeby':\n                return require('./genesisStates/rinkeby.json');\n            case 'kovan':\n                return require('./genesisStates/kovan.json');\n            case 'goerli':\n                return require('./genesisStates/goerli.json');\n            case 'sepolia':\n                return require('./genesisStates/sepolia.json');\n        }\n        // Custom chains with genesis state provided\n        if (this._customChains &&\n            this._customChains.length > 0 &&\n            Array.isArray(this._customChains[0])) {\n            try {\n                for (var _b = __values(this._customChains), _c = _b.next(); !_c.done; _c = _b.next()) {\n                    var chainArrayWithGenesis = _c.value;\n                    if (chainArrayWithGenesis[0].name === this.chainName()) {\n                        return chainArrayWithGenesis[1];\n                    }\n                }\n            }\n            catch (e_16_1) { e_16 = { error: e_16_1 }; }\n            finally {\n                try {\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n                }\n                finally { if (e_16) throw e_16.error; }\n            }\n        }\n        return {};\n    };\n    /**\n     * Returns the hardforks for current chain\n     * @returns {Array} Array with arrays of hardforks\n     */\n    Common.prototype.hardforks = function () {\n        return this._chainParams['hardforks'];\n    };\n    /**\n     * Returns bootstrap nodes for the current chain\n     * @returns {Dictionary} Dict with bootstrap nodes\n     */\n    Common.prototype.bootstrapNodes = function () {\n        return this._chainParams['bootstrapNodes'];\n    };\n    /**\n     * Returns DNS networks for the current chain\n     * @returns {String[]} Array of DNS ENR urls\n     */\n    Common.prototype.dnsNetworks = function () {\n        return this._chainParams['dnsNetworks'];\n    };\n    /**\n     * Returns the hardfork set\n     * @returns Hardfork name\n     */\n    Common.prototype.hardfork = function () {\n        return this._hardfork;\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     * @deprecated Please use {@link Common.chainIdBN} for large number support\n     */\n    Common.prototype.chainId = function () {\n        return (0, ethereumjs_util_1.toType)(this.chainIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current chain\n     * @returns chain Id\n     */\n    Common.prototype.chainIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['chainId']);\n    };\n    /**\n     * Returns the name of current chain\n     * @returns chain name (lower case)\n     */\n    Common.prototype.chainName = function () {\n        return this._chainParams['name'];\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     * @deprecated Please use {@link Common.networkIdBN} for large number support\n     */\n    Common.prototype.networkId = function () {\n        return (0, ethereumjs_util_1.toType)(this.networkIdBN(), ethereumjs_util_1.TypeOutput.Number);\n    };\n    /**\n     * Returns the Id of current network\n     * @returns network Id\n     */\n    Common.prototype.networkIdBN = function () {\n        return new ethereumjs_util_1.BN(this._chainParams['networkId']);\n    };\n    /**\n     * Returns the active EIPs\n     * @returns List of EIPs\n     */\n    Common.prototype.eips = function () {\n        return this._eips;\n    };\n    /**\n     * Returns the consensus type of the network\n     * Possible values: \"pow\"|\"poa\"|\"pos\"\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusType = function () {\n        var e_17, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_4 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next(); !HARDFORK_CHANGES_4_1.done; HARDFORK_CHANGES_4_1 = HARDFORK_CHANGES_4.next()) {\n                var hfChanges = HARDFORK_CHANGES_4_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['type'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_17_1) { e_17 = { error: e_17_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_4_1 && !HARDFORK_CHANGES_4_1.done && (_a = HARDFORK_CHANGES_4.return)) _a.call(HARDFORK_CHANGES_4);\n            }\n            finally { if (e_17) throw e_17.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['type'];\n    };\n    /**\n     * Returns the concrete consensus implementation\n     * algorithm or protocol for the network\n     * e.g. \"ethash\" for \"pow\" consensus type,\n     * \"clique\" for \"poa\" consensus type or\n     * \"casper\" for \"pos\" consensus type.\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusAlgorithm = function () {\n        var e_18, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_5 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next(); !HARDFORK_CHANGES_5_1.done; HARDFORK_CHANGES_5_1 = HARDFORK_CHANGES_5.next()) {\n                var hfChanges = HARDFORK_CHANGES_5_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    value = hfChanges[1]['consensus']['algorithm'];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_18_1) { e_18 = { error: e_18_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_5_1 && !HARDFORK_CHANGES_5_1.done && (_a = HARDFORK_CHANGES_5.return)) _a.call(HARDFORK_CHANGES_5);\n            }\n            finally { if (e_18) throw e_18.error; }\n        }\n        if (value) {\n            return value;\n        }\n        return this._chainParams['consensus']['algorithm'];\n    };\n    /**\n     * Returns a dictionary with consensus configuration\n     * parameters based on the consensus algorithm\n     *\n     * Expected returns (parameters must be present in\n     * the respective chain json files):\n     *\n     * ethash: -\n     * clique: period, epoch\n     * aura: -\n     * casper: -\n     *\n     * Note: This value can update along a hardfork.\n     */\n    Common.prototype.consensusConfig = function () {\n        var e_19, _a;\n        var hardfork = this.hardfork();\n        var value;\n        try {\n            for (var HARDFORK_CHANGES_6 = __values(hardforks_1.hardforks), HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next(); !HARDFORK_CHANGES_6_1.done; HARDFORK_CHANGES_6_1 = HARDFORK_CHANGES_6.next()) {\n                var hfChanges = HARDFORK_CHANGES_6_1.value;\n                if ('consensus' in hfChanges[1]) {\n                    // The config parameter is named after the respective consensus algorithm\n                    value = hfChanges[1]['consensus'][hfChanges[1]['consensus']['algorithm']];\n                }\n                if (hfChanges[0] === hardfork)\n                    break;\n            }\n        }\n        catch (e_19_1) { e_19 = { error: e_19_1 }; }\n        finally {\n            try {\n                if (HARDFORK_CHANGES_6_1 && !HARDFORK_CHANGES_6_1.done && (_a = HARDFORK_CHANGES_6.return)) _a.call(HARDFORK_CHANGES_6);\n            }\n            finally { if (e_19) throw e_19.error; }\n        }\n        if (value) {\n            return value;\n        }\n        var consensusAlgorithm = this.consensusAlgorithm();\n        return this._chainParams['consensus'][consensusAlgorithm];\n    };\n    /**\n     * Returns a deep copy of this {@link Common} instance.\n     */\n    Common.prototype.copy = function () {\n        return Object.assign(Object.create(Object.getPrototypeOf(this)), this);\n    };\n    return Common;\n}(events_1.EventEmitter));\nexports.default = Common;\n//# sourceMappingURL=index.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","TypeError","String","create","__assign","assign","t","s","i","n","arguments","length","apply","__values","o","Symbol","iterator","m","next","value","done","defineProperty","ConsensusAlgorithm","ConsensusType","Hardfork","Chain","CustomChain","events_1","crc_32_1","ethereumjs_util_1","chains_1","hardforks_1","eips_1","Common","_super","opts","_a","_b","_c","_this","_supportedHardforks","_eips","_customChains","customChains","_chainParams","setChain","chain","DEFAULT_HARDFORK","defaultHardfork","Istanbul","_d","hardforks","_e","hf","forkHash","_calcForkHash","name","e_1_1","e_1","error","return","_hardfork","supportedHardforks","hardfork","setHardfork","eips","setEIPs","custom","Common.custom","chainParamsOrName","baseChain","standardChainParams","_getChainParams","PolygonMainnet","chainId","networkId","PolygonMumbai","ArbitrumRinkebyTestnet","xDaiChain","OptimisticKovan","Berlin","OptimisticEthereum","Error","concat","forCustomChain","Common.forCustomChain","customChainParams","isSupportedChainId","Common.isSupportedChainId","initializedChains","_getInitializedChains","toString","Common._getChainParams","BN","isBN","name_1","Common.prototype.setChain","plainCustomChains","isArray","map","e","required","required_1","required_1_1","param","undefined","e_2_1","e_2","Common.prototype.setHardfork","_isSupportedHardfork","existing","HARDFORK_CHANGES_1","HARDFORK_CHANGES_1_1","emit","e_3_1","e_3","getHardforkByBlockNumber","Common.prototype.getHardforkByBlockNumber","blockNumber","td","toType","TypeOutput","Chainstart","minTdHF","maxTdHF","block","gte","previousHF","e_4_1","e_4","msgAdd","hardforkGteHardfork","msg","setHardforkByBlockNumber","Common.prototype.setHardforkByBlockNumber","_chooseHardfork","Common.prototype._chooseHardfork","onlySupported","_getHardfork","Common.prototype._getHardfork","hfs","hfs_1","hfs_1_1","e_5_1","e_5","chainName","Common.prototype._isSupportedHardfork","e_6_1","e_6","Common.prototype.setEIPs","_loop_1","eip","EIPs","minHF","this_1","gteHardfork","requiredEIPs","forEach","elem","includes","isActivatedEIP","eips_2","eips_2_1","e_7_1","e_7","Common.prototype.param","topic","paramByEIP","e_8_1","e_8","paramByHardfork","Common.prototype.paramByHardfork","e_10","HARDFORK_CHANGES_2","HARDFORK_CHANGES_2_1","hfChanges","hfEIPs","hfEIPs_1","hfEIPs_1_1","valueEIP","e_10_1","v","e_9_1","e_9","Common.prototype.paramByEIP","eipParams","paramByBlock","Common.prototype.paramByBlock","activeHfs","activeHardforks","Common.prototype.isActivatedEIP","HARDFORK_CHANGES_3","HARDFORK_CHANGES_3_1","e_11_1","e_11","hardforkIsActiveOnBlock","Common.prototype.hardforkIsActiveOnBlock","hfBlock","hardforkBlockBN","activeOnBlock","Common.prototype.activeOnBlock","Common.prototype.hardforkGteHardfork","hardfork1","hardfork2","onlyActive","posHf2","posHf1","index","hardforks_2","hardforks_2_1","e_12_1","e_12","Common.prototype.gteHardfork","hardforkIsActiveOnChain","Common.prototype.hardforkIsActiveOnChain","e_13_1","e_13","Common.prototype.activeHardforks","hfs_2","hfs_2_1","push","e_14_1","e_14","activeHardfork","Common.prototype.activeHardfork","hardforkBlock","Common.prototype.hardforkBlock","Number","Common.prototype.hardforkBlockBN","hardforkTD","Common.prototype.hardforkTD","isHardforkBlock","Common.prototype.isHardforkBlock","eq","nextHardforkBlock","Common.prototype.nextHardforkBlock","nextHardforkBlockBN","Common.prototype.nextHardforkBlockBN","reduce","nextHfBlock","acc","gt","isNextHardforkBlock","Common.prototype.isNextHardforkBlock","Common.prototype._calcForkHash","genesis","from","hash","substr","hfBuffer","alloc","prevBlock","hfBlockBuffer","padStart","e_15_1","e_15","inputBuffer","forkhash","intToBuffer","buf","Common.prototype.forkHash","data","hardforkForForkHash","Common.prototype.hardforkForForkHash","resArray","filter","Common.prototype.genesis","genesisState","Common.prototype.genesisState","chainArrayWithGenesis","e_16_1","e_16","Common.prototype.hardforks","bootstrapNodes","Common.prototype.bootstrapNodes","dnsNetworks","Common.prototype.dnsNetworks","Common.prototype.hardfork","Common.prototype.chainId","chainIdBN","Common.prototype.chainIdBN","Common.prototype.chainName","Common.prototype.networkId","networkIdBN","Common.prototype.networkIdBN","Common.prototype.eips","consensusType","Common.prototype.consensusType","HARDFORK_CHANGES_4","HARDFORK_CHANGES_4_1","e_17_1","e_17","consensusAlgorithm","Common.prototype.consensusAlgorithm","HARDFORK_CHANGES_5","HARDFORK_CHANGES_5_1","e_18_1","e_18","consensusConfig","Common.prototype.consensusConfig","HARDFORK_CHANGES_6","HARDFORK_CHANGES_6_1","e_19_1","e_19","copy","Common.prototype.copy","getPrototypeOf","EventEmitter","default"]
}
