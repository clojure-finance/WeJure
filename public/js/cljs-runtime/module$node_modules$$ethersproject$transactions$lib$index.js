shadow$provide.module$node_modules$$ethersproject$transactions$lib$index=function(global,require,module,exports){function handleAddress(value){return"0x"===value?null:(0,address_1.getAddress)(value)}function handleNumber(value){return"0x"===value?constants_1.Zero:bignumber_1.BigNumber.from(value)}function computeAddress(key){key=(0,signing_key_1.computePublicKey)(key);return(0,address_1.getAddress)((0,bytes_1.hexDataSlice)((0,keccak256_1.keccak256)((0,bytes_1.hexDataSlice)(key,1)),12))}function recoverAddress(digest,
signature){return computeAddress((0,signing_key_1.recoverPublicKey)((0,bytes_1.arrayify)(digest),signature))}function formatNumber(value,name){var result=(0,bytes_1.stripZeros)(bignumber_1.BigNumber.from(value).toHexString());32<result.length&&logger.throwArgumentError("invalid length for "+name,"transaction:"+name,value);return result}function accessSetify(addr,storageKeys){return{address:(0,address_1.getAddress)(addr),storageKeys:(storageKeys||[]).map(function(storageKey,index){32!==(0,bytes_1.hexDataLength)(storageKey)&&
logger.throwArgumentError("invalid access list storageKey","accessList["+addr+":"+index+"]",storageKey);return storageKey.toLowerCase()})}}function accessListify(value){if(Array.isArray(value))return value.map(function(set,index){return Array.isArray(set)?(2<set.length&&logger.throwArgumentError("access list expected to be [ address, storageKeys[] ]","value["+index+"]",set),accessSetify(set[0],set[1])):accessSetify(set.address,set.storageKeys)});var result=Object.keys(value).map(function(addr){var storageKeys=
value[addr].reduce(function(accum,storageKey){accum[storageKey]=!0;return accum},{});return accessSetify(addr,Object.keys(storageKeys).sort())});result.sort(function(a,b){return a.address.localeCompare(b.address)});return result}function formatAccessList(value){return accessListify(value).map(function(set){return[set.address,set.storageKeys]})}function _serializeEip1559(transaction,signature){if(null!=transaction.gasPrice){var gasPrice=bignumber_1.BigNumber.from(transaction.gasPrice),maxFeePerGas=
bignumber_1.BigNumber.from(transaction.maxFeePerGas||0);gasPrice.eq(maxFeePerGas)||logger.throwArgumentError("mismatch EIP-1559 gasPrice !\x3d maxFeePerGas","tx",{gasPrice,maxFeePerGas})}transaction=[formatNumber(transaction.chainId||0,"chainId"),formatNumber(transaction.nonce||0,"nonce"),formatNumber(transaction.maxPriorityFeePerGas||0,"maxPriorityFeePerGas"),formatNumber(transaction.maxFeePerGas||0,"maxFeePerGas"),formatNumber(transaction.gasLimit||0,"gasLimit"),null!=transaction.to?(0,address_1.getAddress)(transaction.to):
"0x",formatNumber(transaction.value||0,"value"),transaction.data||"0x",formatAccessList(transaction.accessList||[])];signature&&(signature=(0,bytes_1.splitSignature)(signature),transaction.push(formatNumber(signature.recoveryParam,"recoveryParam")),transaction.push((0,bytes_1.stripZeros)(signature.r)),transaction.push((0,bytes_1.stripZeros)(signature.s)));return(0,bytes_1.hexConcat)(["0x02",RLP.encode(transaction)])}function _serializeEip2930(transaction,signature){transaction=[formatNumber(transaction.chainId||
0,"chainId"),formatNumber(transaction.nonce||0,"nonce"),formatNumber(transaction.gasPrice||0,"gasPrice"),formatNumber(transaction.gasLimit||0,"gasLimit"),null!=transaction.to?(0,address_1.getAddress)(transaction.to):"0x",formatNumber(transaction.value||0,"value"),transaction.data||"0x",formatAccessList(transaction.accessList||[])];signature&&(signature=(0,bytes_1.splitSignature)(signature),transaction.push(formatNumber(signature.recoveryParam,"recoveryParam")),transaction.push((0,bytes_1.stripZeros)(signature.r)),
transaction.push((0,bytes_1.stripZeros)(signature.s)));return(0,bytes_1.hexConcat)(["0x01",RLP.encode(transaction)])}function _serialize(transaction,signature){(0,properties_1.checkProperties)(transaction,allowedTransactionKeys);var raw=[];transactionFields.forEach(function(fieldInfo){var value=transaction[fieldInfo.name]||[],options={};fieldInfo.numeric&&(options.hexPad="left");value=(0,bytes_1.arrayify)((0,bytes_1.hexlify)(value,options));fieldInfo.length&&value.length!==fieldInfo.length&&0<value.length&&
logger.throwArgumentError("invalid length for "+fieldInfo.name,"transaction:"+fieldInfo.name,value);fieldInfo.maxLength&&(value=(0,bytes_1.stripZeros)(value),value.length>fieldInfo.maxLength&&logger.throwArgumentError("invalid length for "+fieldInfo.name,"transaction:"+fieldInfo.name,value));raw.push((0,bytes_1.hexlify)(value))});var chainId=0;null!=transaction.chainId?(chainId=transaction.chainId,"number"!==typeof chainId&&logger.throwArgumentError("invalid transaction.chainId","transaction",transaction)):
signature&&!(0,bytes_1.isBytesLike)(signature)&&28<signature.v&&(chainId=Math.floor((signature.v-35)/2));0!==chainId&&(raw.push((0,bytes_1.hexlify)(chainId)),raw.push("0x"),raw.push("0x"));if(!signature)return RLP.encode(raw);var sig=(0,bytes_1.splitSignature)(signature),v=27+sig.recoveryParam;0!==chainId?(raw.pop(),raw.pop(),raw.pop(),v+=2*chainId+8,28<sig.v&&sig.v!==v&&logger.throwArgumentError("transaction.chainId/signature.v mismatch","signature",signature)):sig.v!==v&&logger.throwArgumentError("transaction.chainId/signature.v mismatch",
"signature",signature);raw.push((0,bytes_1.hexlify)(v));raw.push((0,bytes_1.stripZeros)((0,bytes_1.arrayify)(sig.r)));raw.push((0,bytes_1.stripZeros)((0,bytes_1.arrayify)(sig.s)));return RLP.encode(raw)}function _parseEipSignature(tx,fields,serialize){try{var recid=handleNumber(fields[0]).toNumber();if(0!==recid&&1!==recid)throw Error("bad recid");tx.v=recid}catch(error){logger.throwArgumentError("invalid v for transaction type: 1","v",fields[0])}tx.r=(0,bytes_1.hexZeroPad)(fields[1],32);tx.s=(0,bytes_1.hexZeroPad)(fields[2],
32);try{var digest=(0,keccak256_1.keccak256)(serialize(tx));tx.from=recoverAddress(digest,{r:tx.r,s:tx.s,recoveryParam:tx.v})}catch(error){console.log(error)}}var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k);o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,
value:v})}:function(o,v){o["default"]=v});global=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);__setModuleDefault(result,mod);return result};Object.defineProperty(exports,"__esModule",{value:!0});exports.parse=exports.serialize=exports.accessListify=exports.recoverAddress=exports.computeAddress=exports.TransactionTypes=void 0;var address_1=
require("module$node_modules$$ethersproject$address$lib$index"),bignumber_1=require("module$node_modules$$ethersproject$bignumber$lib$index"),bytes_1=require("module$node_modules$$ethersproject$bytes$lib$index"),constants_1=require("module$node_modules$$ethersproject$constants$lib$index"),keccak256_1=require("module$node_modules$$ethersproject$keccak256$lib$index"),properties_1=require("module$node_modules$$ethersproject$properties$lib$index"),RLP=global(require("module$node_modules$$ethersproject$rlp$lib$index")),
signing_key_1=require("module$node_modules$$ethersproject$signing_key$lib$index"),logger_1=require("module$node_modules$$ethersproject$logger$lib$index");require=require("module$node_modules$$ethersproject$transactions$lib$_version");var logger=new logger_1.Logger(require.version);(function(TransactionTypes){TransactionTypes[TransactionTypes.legacy=0]="legacy";TransactionTypes[TransactionTypes.eip2930=1]="eip2930";TransactionTypes[TransactionTypes.eip1559=2]="eip1559"})(exports.TransactionTypes||
(exports.TransactionTypes={}));var transactionFields=[{name:"nonce",maxLength:32,numeric:!0},{name:"gasPrice",maxLength:32,numeric:!0},{name:"gasLimit",maxLength:32,numeric:!0},{name:"to",length:20},{name:"value",maxLength:32,numeric:!0},{name:"data"}],allowedTransactionKeys={chainId:!0,data:!0,gasLimit:!0,gasPrice:!0,nonce:!0,to:!0,type:!0,value:!0};exports.computeAddress=computeAddress;exports.recoverAddress=recoverAddress;exports.accessListify=accessListify;exports.serialize=function(transaction,
signature){if(null==transaction.type||0===transaction.type)return null!=transaction.accessList&&logger.throwArgumentError("untyped transactions do not support accessList; include type: 1","transaction",transaction),_serialize(transaction,signature);switch(transaction.type){case 1:return _serializeEip2930(transaction,signature);case 2:return _serializeEip1559(transaction,signature)}return logger.throwError("unsupported transaction type: "+transaction.type,logger_1.Logger.errors.UNSUPPORTED_OPERATION,
{operation:"serializeTransaction",transactionType:transaction.type})};exports.parse=function(rawTransaction){rawTransaction=(0,bytes_1.arrayify)(rawTransaction);if(127<rawTransaction[0]){a:{var transaction=RLP.decode(rawTransaction);9!==transaction.length&&6!==transaction.length&&logger.throwArgumentError("invalid raw transaction","rawTransaction",rawTransaction);var tx={nonce:handleNumber(transaction[0]).toNumber(),gasPrice:handleNumber(transaction[1]),gasLimit:handleNumber(transaction[2]),to:handleAddress(transaction[3]),
value:handleNumber(transaction[4]),data:transaction[5],chainId:0};if(6!==transaction.length){try{tx.v=bignumber_1.BigNumber.from(transaction[6]).toNumber()}catch(error){console.log(error);rawTransaction=tx;break a}tx.r=(0,bytes_1.hexZeroPad)(transaction[7],32);tx.s=(0,bytes_1.hexZeroPad)(transaction[8],32);if(bignumber_1.BigNumber.from(tx.r).isZero()&&bignumber_1.BigNumber.from(tx.s).isZero())tx.chainId=tx.v,tx.v=0;else{tx.chainId=Math.floor((tx.v-35)/2);0>tx.chainId&&(tx.chainId=0);var recoveryParam=
tx.v-27;transaction=transaction.slice(0,6);0!==tx.chainId&&(transaction.push((0,bytes_1.hexlify)(tx.chainId)),transaction.push("0x"),transaction.push("0x"),recoveryParam-=2*tx.chainId+8);transaction=(0,keccak256_1.keccak256)(RLP.encode(transaction));try{tx.from=recoverAddress(transaction,{r:(0,bytes_1.hexlify)(tx.r),s:(0,bytes_1.hexlify)(tx.s),recoveryParam})}catch(error){console.log(error)}tx.hash=(0,keccak256_1.keccak256)(rawTransaction)}tx.type=null}rawTransaction=tx}return rawTransaction}switch(rawTransaction[0]){case 1:return tx=
RLP.decode(rawTransaction.slice(1)),8!==tx.length&&11!==tx.length&&logger.throwArgumentError("invalid component count for transaction type: 1","payload",(0,bytes_1.hexlify)(rawTransaction)),recoveryParam={type:1,chainId:handleNumber(tx[0]).toNumber(),nonce:handleNumber(tx[1]).toNumber(),gasPrice:handleNumber(tx[2]),gasLimit:handleNumber(tx[3]),to:handleAddress(tx[4]),value:handleNumber(tx[5]),data:tx[6],accessList:accessListify(tx[7])},8!==tx.length&&(recoveryParam.hash=(0,keccak256_1.keccak256)(rawTransaction),
_parseEipSignature(recoveryParam,tx.slice(8),_serializeEip2930)),recoveryParam;case 2:return tx=RLP.decode(rawTransaction.slice(1)),9!==tx.length&&12!==tx.length&&logger.throwArgumentError("invalid component count for transaction type: 2","payload",(0,bytes_1.hexlify)(rawTransaction)),recoveryParam=handleNumber(tx[2]),transaction=handleNumber(tx[3]),recoveryParam={type:2,chainId:handleNumber(tx[0]).toNumber(),nonce:handleNumber(tx[1]).toNumber(),maxPriorityFeePerGas:recoveryParam,maxFeePerGas:transaction,
gasPrice:null,gasLimit:handleNumber(tx[4]),to:handleAddress(tx[5]),value:handleNumber(tx[6]),data:tx[7],accessList:accessListify(tx[8])},9!==tx.length&&(recoveryParam.hash=(0,keccak256_1.keccak256)(rawTransaction),_parseEipSignature(recoveryParam,tx.slice(9),_serializeEip1559)),recoveryParam}return logger.throwError("unsupported transaction type: "+rawTransaction[0],logger_1.Logger.errors.UNSUPPORTED_OPERATION,{operation:"parseTransaction",transactionType:rawTransaction[0]})}}
//# sourceMappingURL=module$node_modules$$ethersproject$transactions$lib$index.js.map
