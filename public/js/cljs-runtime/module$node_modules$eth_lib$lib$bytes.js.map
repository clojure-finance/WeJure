{
"version":3,
"file":"module$node_modules$eth_lib$lib$bytes.js",
"lineCount":6,
"mappings":"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",
"sources":["node_modules/eth-lib/lib/bytes.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$eth_lib$lib$bytes\"] = function(global,require,module,exports) {\nconst A = require(\"./array.js\");\n\nconst at = (bytes, index) => parseInt(bytes.slice(index * 2 + 2, index * 2 + 4), 16);\n\nconst random = bytes => {\n  let rnd;\n  if (typeof window !== \"undefined\" && window.crypto && window.crypto.getRandomValues) rnd = window.crypto.getRandomValues(new Uint8Array(bytes));else if (typeof require !== \"undefined\") rnd = require(\"c\" + \"rypto\").randomBytes(bytes);else throw \"Safe random numbers not available.\";\n  let hex = \"0x\";\n  for (let i = 0; i < bytes; ++i) hex += (\"00\" + rnd[i].toString(16)).slice(-2);\n  return hex;\n};\n\nconst length = a => (a.length - 2) / 2;\n\nconst flatten = a => \"0x\" + a.reduce((r, s) => r + s.slice(2), \"\");\n\nconst slice = (i, j, bs) => \"0x\" + bs.slice(i * 2 + 2, j * 2 + 2);\n\nconst reverse = hex => {\n  let rev = \"0x\";\n  for (let i = 0, l = length(hex); i < l; ++i) {\n    rev += hex.slice((l - i) * 2, (l - i + 1) * 2);\n  }\n  return rev;\n};\n\nconst pad = (l, hex) => hex.length === l * 2 + 2 ? hex : pad(l, \"0x\" + \"0\" + hex.slice(2));\n\nconst padRight = (l, hex) => hex.length === l * 2 + 2 ? hex : padRight(l, hex + \"0\");\n\nconst toArray = hex => {\n  let arr = [];\n  for (let i = 2, l = hex.length; i < l; i += 2) arr.push(parseInt(hex.slice(i, i + 2), 16));\n  return arr;\n};\n\nconst fromArray = arr => {\n  let hex = \"0x\";\n  for (let i = 0, l = arr.length; i < l; ++i) {\n    let b = arr[i];\n    hex += (b < 16 ? \"0\" : \"\") + b.toString(16);\n  }\n  return hex;\n};\n\nconst toUint8Array = hex => new Uint8Array(toArray(hex));\n\nconst fromUint8Array = arr => fromArray([].slice.call(arr, 0));\n\nconst fromNumber = num => {\n  let hex = num.toString(16);\n  return hex.length % 2 === 0 ? \"0x\" + hex : \"0x0\" + hex;\n};\n\nconst toNumber = hex => parseInt(hex.slice(2), 16);\n\nconst concat = (a, b) => a.concat(b.slice(2));\n\nconst fromNat = bn => bn === \"0x0\" ? \"0x\" : bn.length % 2 === 0 ? bn : \"0x0\" + bn.slice(2);\n\nconst toNat = bn => bn[2] === \"0\" ? \"0x\" + bn.slice(3) : bn;\n\nconst fromAscii = ascii => {\n  let hex = \"0x\";\n  for (let i = 0; i < ascii.length; ++i) hex += (\"00\" + ascii.charCodeAt(i).toString(16)).slice(-2);\n  return hex;\n};\n\nconst toAscii = hex => {\n  let ascii = \"\";\n  for (let i = 2; i < hex.length; i += 2) ascii += String.fromCharCode(parseInt(hex.slice(i, i + 2), 16));\n  return ascii;\n};\n\n// From https://gist.github.com/pascaldekloe/62546103a1576803dade9269ccf76330\nconst fromString = s => {\n  const makeByte = uint8 => {\n    const b = uint8.toString(16);\n    return b.length < 2 ? \"0\" + b : b;\n  };\n  let bytes = \"0x\";\n  for (let ci = 0; ci != s.length; ci++) {\n    let c = s.charCodeAt(ci);\n    if (c < 128) {\n      bytes += makeByte(c);\n      continue;\n    }\n    if (c < 2048) {\n      bytes += makeByte(c >> 6 | 192);\n    } else {\n      if (c > 0xd7ff && c < 0xdc00) {\n        if (++ci == s.length) return null;\n        let c2 = s.charCodeAt(ci);\n        if (c2 < 0xdc00 || c2 > 0xdfff) return null;\n        c = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n        bytes += makeByte(c >> 18 | 240);\n        bytes += makeByte(c >> 12 & 63 | 128);\n      } else {\n        // c <= 0xffff\n        bytes += makeByte(c >> 12 | 224);\n      }\n      bytes += makeByte(c >> 6 & 63 | 128);\n    }\n    bytes += makeByte(c & 63 | 128);\n  }\n  return bytes;\n};\n\nconst toString = bytes => {\n  let s = '';\n  let i = 0;\n  let l = length(bytes);\n  while (i < l) {\n    let c = at(bytes, i++);\n    if (c > 127) {\n      if (c > 191 && c < 224) {\n        if (i >= l) return null;\n        c = (c & 31) << 6 | at(bytes, i) & 63;\n      } else if (c > 223 && c < 240) {\n        if (i + 1 >= l) return null;\n        c = (c & 15) << 12 | (at(bytes, i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else if (c > 239 && c < 248) {\n        if (i + 2 >= l) return null;\n        c = (c & 7) << 18 | (at(bytes, i) & 63) << 12 | (at(bytes, ++i) & 63) << 6 | at(bytes, ++i) & 63;\n      } else return null;\n      ++i;\n    }\n    if (c <= 0xffff) s += String.fromCharCode(c);else if (c <= 0x10ffff) {\n      c -= 0x10000;\n      s += String.fromCharCode(c >> 10 | 0xd800);\n      s += String.fromCharCode(c & 0x3FF | 0xdc00);\n    } else return null;\n  }\n  return s;\n};\n\nmodule.exports = {\n  random,\n  length,\n  concat,\n  flatten,\n  slice,\n  reverse,\n  pad,\n  padRight,\n  fromAscii,\n  toAscii,\n  fromString,\n  toString,\n  fromNumber,\n  toNumber,\n  fromNat,\n  toNat,\n  fromArray,\n  toArray,\n  fromUint8Array,\n  toUint8Array\n};\n};"],
"names":["shadow$provide","global","require","module","exports","at","bytes","index","parseInt","slice","pad","l","hex","length","padRight","toArray","arr","i","push","fromArray","b","toString","random","rnd","window","crypto","getRandomValues","Uint8Array","randomBytes","a","concat","flatten","reduce","r","s","j","bs","reverse","rev","fromAscii","ascii","charCodeAt","toAscii","String","fromCharCode","fromString","makeByte","uint8","ci","c","c2","fromNumber","num","toNumber","fromNat","bn","toNat","fromUint8Array","call","toUint8Array"]
}
