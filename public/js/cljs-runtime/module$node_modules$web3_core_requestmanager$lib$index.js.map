{
"version":3,
"file":"module$node_modules$web3_core_requestmanager$lib$index.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/web3-core-requestmanager/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_core_requestmanager$lib$index\"] = function(global,require,module,exports) {\n/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file index.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\nconst { callbackify } = require('util');\nvar errors = require('web3-core-helpers').errors;\nvar Jsonrpc = require('./jsonrpc.js');\nvar BatchManager = require('./batch.js');\nvar givenProvider = require('./givenProvider.js');\n/**\n * It's responsible for passing messages to providers\n * It's also responsible for polling the ethereum node for incoming messages\n * Default poll timeout is 1 second\n * Singleton\n *\n * @param {string|Object}provider\n * @param {Net.Socket} net\n *\n * @constructor\n */\nvar RequestManager = function RequestManager(provider, net) {\n    this.provider = null;\n    this.providers = RequestManager.providers;\n    this.setProvider(provider, net);\n    this.subscriptions = new Map();\n};\nRequestManager.givenProvider = givenProvider;\nRequestManager.providers = {\n    WebsocketProvider: require('web3-providers-ws'),\n    HttpProvider: require('web3-providers-http'),\n    IpcProvider: require('web3-providers-ipc')\n};\n/**\n * Should be used to set provider of request manager\n *\n * @method setProvider\n *\n * @param {Object} provider\n * @param {net.Socket} net\n *\n * @returns void\n */\nRequestManager.prototype.setProvider = function (provider, net) {\n    var _this = this;\n    // autodetect provider\n    if (provider && typeof provider === 'string' && this.providers) {\n        // HTTP\n        if (/^http(s)?:\\/\\//i.test(provider)) {\n            provider = new this.providers.HttpProvider(provider);\n            // WS\n        }\n        else if (/^ws(s)?:\\/\\//i.test(provider)) {\n            provider = new this.providers.WebsocketProvider(provider);\n            // IPC\n        }\n        else if (provider && typeof net === 'object' && typeof net.connect === 'function') {\n            provider = new this.providers.IpcProvider(provider, net);\n        }\n        else if (provider) {\n            throw new Error('Can\\'t autodetect provider for \"' + provider + '\"');\n        }\n    }\n    // reset the old one before changing, if still connected\n    if (this.provider && this.provider.connected)\n        this.clearSubscriptions();\n    this.provider = provider || null;\n    // listen to incoming notifications\n    if (this.provider && this.provider.on) {\n        if (typeof provider.request === 'function') { // EIP-1193 provider\n            this.provider.on('message', function (payload) {\n                if (payload && payload.type === 'eth_subscription' && payload.data) {\n                    const data = payload.data;\n                    if (data.subscription && _this.subscriptions.has(data.subscription)) {\n                        _this.subscriptions.get(data.subscription).callback(null, data.result);\n                    }\n                }\n            });\n        }\n        else { // legacy provider subscription event\n            this.provider.on('data', function data(result, deprecatedResult) {\n                result = result || deprecatedResult; // this is for possible old providers, which may had the error first handler\n                // if result is a subscription, call callback for that subscription\n                if (result.method && result.params && result.params.subscription && _this.subscriptions.has(result.params.subscription)) {\n                    _this.subscriptions.get(result.params.subscription).callback(null, result.params.result);\n                }\n            });\n        }\n        // resubscribe if the provider has reconnected\n        this.provider.on('connect', function connect() {\n            _this.subscriptions.forEach(function (subscription) {\n                subscription.subscription.resubscribe();\n            });\n        });\n        // notify all subscriptions about the error condition\n        this.provider.on('error', function error(error) {\n            _this.subscriptions.forEach(function (subscription) {\n                subscription.callback(error);\n            });\n        });\n        // notify all subscriptions about bad close conditions\n        const disconnect = function disconnect(event) {\n            if (!_this._isCleanCloseEvent(event) || _this._isIpcCloseError(event)) {\n                _this.subscriptions.forEach(function (subscription) {\n                    subscription.callback(errors.ConnectionCloseError(event));\n                    _this.subscriptions.delete(subscription.subscription.id);\n                });\n                if (_this.provider && _this.provider.emit) {\n                    _this.provider.emit('error', errors.ConnectionCloseError(event));\n                }\n            }\n            if (_this.provider && _this.provider.emit) {\n                _this.provider.emit('end', event);\n            }\n        };\n        // TODO: Remove close once the standard allows it\n        this.provider.on('close', disconnect);\n        this.provider.on('disconnect', disconnect);\n        // TODO add end, timeout??\n    }\n};\n/**\n * Asynchronously send request to provider.\n * Prefers to use the `request` method available on the provider as specified in [EIP-1193](https://eips.ethereum.org/EIPS/eip-1193).\n * If `request` is not available, falls back to `sendAsync` and `send` respectively.\n * @method send\n * @param {Object} data\n * @param {Function} callback\n */\nRequestManager.prototype.send = function (data, callback) {\n    callback = callback || function () { };\n    if (!this.provider) {\n        return callback(errors.InvalidProvider());\n    }\n    const { method, params } = data;\n    const jsonrpcPayload = Jsonrpc.toPayload(method, params);\n    const jsonrpcResultCallback = this._jsonrpcResultCallback(callback, jsonrpcPayload);\n    if (this.provider.request) {\n        const callbackRequest = callbackify(this.provider.request.bind(this.provider));\n        const requestArgs = { method, params };\n        callbackRequest(requestArgs, callback);\n    }\n    else if (this.provider.sendAsync) {\n        this.provider.sendAsync(jsonrpcPayload, jsonrpcResultCallback);\n    }\n    else if (this.provider.send) {\n        this.provider.send(jsonrpcPayload, jsonrpcResultCallback);\n    }\n    else {\n        throw new Error('Provider does not have a request or send method to use.');\n    }\n};\n/**\n * Asynchronously send batch request.\n * Only works if provider supports batch methods through `sendAsync` or `send`.\n * @method sendBatch\n * @param {Array} data - array of payload objects\n * @param {Function} callback\n */\nRequestManager.prototype.sendBatch = function (data, callback) {\n    if (!this.provider) {\n        return callback(errors.InvalidProvider());\n    }\n    var payload = Jsonrpc.toBatchPayload(data);\n    this.provider[this.provider.sendAsync ? 'sendAsync' : 'send'](payload, function (err, results) {\n        if (err) {\n            return callback(err);\n        }\n        if (!Array.isArray(results)) {\n            return callback(errors.InvalidResponse(results));\n        }\n        callback(null, results);\n    });\n};\n/**\n * Waits for notifications\n *\n * @method addSubscription\n * @param {Subscription} subscription         the subscription\n * @param {String} type         the subscription namespace (eth, personal, etc)\n * @param {Function} callback   the callback to call for incoming notifications\n */\nRequestManager.prototype.addSubscription = function (subscription, callback) {\n    if (this.provider.on) {\n        this.subscriptions.set(subscription.id, {\n            callback: callback,\n            subscription: subscription\n        });\n    }\n    else {\n        throw new Error('The provider doesn\\'t support subscriptions: ' + this.provider.constructor.name);\n    }\n};\n/**\n * Waits for notifications\n *\n * @method removeSubscription\n * @param {String} id           the subscription id\n * @param {Function} callback   fired once the subscription is removed\n */\nRequestManager.prototype.removeSubscription = function (id, callback) {\n    if (this.subscriptions.has(id)) {\n        var type = this.subscriptions.get(id).subscription.options.type;\n        // remove subscription first to avoid reentry\n        this.subscriptions.delete(id);\n        // then, try to actually unsubscribe\n        this.send({\n            method: type + '_unsubscribe',\n            params: [id]\n        }, callback);\n        return;\n    }\n    if (typeof callback === 'function') {\n        // call the callback if the subscription was already removed\n        callback(null);\n    }\n};\n/**\n * Should be called to reset the subscriptions\n *\n * @method reset\n *\n * @returns {boolean}\n */\nRequestManager.prototype.clearSubscriptions = function (keepIsSyncing) {\n    try {\n        var _this = this;\n        // uninstall all subscriptions\n        if (this.subscriptions.size > 0) {\n            this.subscriptions.forEach(function (value, id) {\n                if (!keepIsSyncing || value.name !== 'syncing')\n                    _this.removeSubscription(id);\n            });\n        }\n        //  reset notification callbacks etc.\n        if (this.provider.reset)\n            this.provider.reset();\n        return true;\n    }\n    catch (e) {\n        throw new Error(`Error while clearing subscriptions: ${e}`);\n    }\n};\n/**\n * Evaluates WS close event\n *\n * @method _isCleanClose\n *\n * @param {CloseEvent | boolean} event WS close event or exception flag\n *\n * @returns {boolean}\n */\nRequestManager.prototype._isCleanCloseEvent = function (event) {\n    return typeof event === 'object' && ([1000].includes(event.code) || event.wasClean === true);\n};\n/**\n * Detects Ipc close error. The node.net module emits ('close', isException)\n *\n * @method _isIpcCloseError\n *\n * @param {CloseEvent | boolean} event WS close event or exception flag\n *\n * @returns {boolean}\n */\nRequestManager.prototype._isIpcCloseError = function (event) {\n    return typeof event === 'boolean' && event;\n};\n/**\n * The jsonrpc result callback for RequestManager.send\n *\n * @method _jsonrpcResultCallback\n *\n * @param {Function} callback the callback to use\n * @param {Object} payload the jsonrpc payload\n *\n * @returns {Function} return callback of form (err, result)\n *\n */\nRequestManager.prototype._jsonrpcResultCallback = function (callback, payload) {\n    return function (err, result) {\n        if (result && result.id && payload.id !== result.id) {\n            return callback(new Error(`Wrong response id ${result.id} (expected: ${payload.id}) in ${JSON.stringify(payload)}`));\n        }\n        if (err) {\n            return callback(err);\n        }\n        if (result && result.error) {\n            return callback(errors.ErrorResponse(result));\n        }\n        if (!Jsonrpc.isValidResponse(result)) {\n            return callback(errors.InvalidResponse(result));\n        }\n        callback(null, result.result);\n    };\n};\nmodule.exports = {\n    Manager: RequestManager,\n    BatchManager: BatchManager\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","callbackify","errors","Jsonrpc","BatchManager","givenProvider","RequestManager","provider","net","providers","setProvider","subscriptions","Map","WebsocketProvider","HttpProvider","IpcProvider","prototype","RequestManager.prototype.setProvider","_this","test","connect","Error","connected","clearSubscriptions","on","request","payload","type","data","subscription","has","get","callback","result","deprecatedResult","method","params","forEach","resubscribe","error","disconnect","event","_isCleanCloseEvent","_isIpcCloseError","ConnectionCloseError","delete","id","emit","send","RequestManager.prototype.send","InvalidProvider","jsonrpcPayload","toPayload","jsonrpcResultCallback","_jsonrpcResultCallback","callbackRequest","bind","requestArgs","sendAsync","sendBatch","RequestManager.prototype.sendBatch","toBatchPayload","err","results","Array","isArray","InvalidResponse","addSubscription","RequestManager.prototype.addSubscription","set","constructor","name","removeSubscription","RequestManager.prototype.removeSubscription","options","RequestManager.prototype.clearSubscriptions","keepIsSyncing","size","value","reset","e","RequestManager.prototype._isCleanCloseEvent","includes","code","wasClean","RequestManager.prototype._isIpcCloseError","RequestManager.prototype._jsonrpcResultCallback","JSON","stringify","ErrorResponse","isValidResponse","Manager"]
}
