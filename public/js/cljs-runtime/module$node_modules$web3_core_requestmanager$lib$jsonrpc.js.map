{
"version":3,
"file":"module$node_modules$web3_core_requestmanager$lib$jsonrpc.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,wDAAA,CAA6E,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CA0BrH,IAAIC,QAAU,CACVC,UAAW,CADD,CAWd,UAAoBC,QAAS,CAACC,MAAD,CAASC,MAAT,CAAiB,CAC1C,GAAI,CAACD,MAAL,CACI,KAAUE,MAAJ,CAAU,kDAAV,CAA+DC,IAAKC,CAAAA,SAAL,CAAeH,MAAf,CAA/D,CAAwF,IAAxF,CAAN,CAGJJ,OAAQC,CAAAA,SAAR,EACA,OAAO,CACHO,QAAS,KADN,CAEHC,GAAIT,OAAQC,CAAAA,SAFT,CAGKE,MAHL,CAIHC,OAAQA,MAARA,EAAkB,EAJf,CANmC,CAXhC,CA+Bd,gBAA0BM,QAAS,CAACC,QAAD,CAAW,CAE1CC,QAASA,sBAAqB,CAACC,OAAD,CAAU,CACpC,MAAO,CAAC,CAACA,OAAT,EACI,CAACA,OAAQC,CAAAA,KADb,EAEwB,KAFxB,GAEID,OAAQL,CAAAA,OAFZ,GAG2B,QAH3B;AAGK,MAAOK,QAAQJ,CAAAA,EAHpB,EAG6D,QAH7D,GAGuC,MAAOI,QAAQJ,CAAAA,EAHtD,GAIuBM,IAAAA,EAJvB,GAIIF,OAAQG,CAAAA,MALwB,CADxC,MAAOC,MAAMC,CAAAA,OAAN,CAAcP,QAAd,CAAA,CAA0BA,QAASQ,CAAAA,KAAT,CAAeP,qBAAf,CAA1B,CAAkEA,qBAAA,CAAsBD,QAAtB,CAD/B,CA/BhC,CAgDd,eAAyBS,QAAS,CAACC,QAAD,CAAW,CACzC,MAAOA,SAASC,CAAAA,GAAT,CAAa,QAAS,CAACT,OAAD,CAAU,CACnC,MAAOb,QAAQuB,CAAAA,SAAR,CAAkBV,OAAQV,CAAAA,MAA1B,CAAkCU,OAAQT,CAAAA,MAA1C,CAD4B,CAAhC,CADkC,CAhD/B,CAqDdN,OAAOC,CAAAA,OAAP,CAAiBC,OA/EoG;",
"sources":["node_modules/web3-core-requestmanager/lib/jsonrpc.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_core_requestmanager$lib$jsonrpc\"] = function(global,require,module,exports) {\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/** @file jsonrpc.js\n * @authors:\n *   Fabian Vogelsteller <fabian@ethereum.org>\n *   Marek Kotewicz <marek@ethdev.com>\n *   Aaron Kumavis <aaron@kumavis.me>\n * @date 2015\n */\n\"use strict\";\n// Initialize Jsonrpc as a simple object with utility functions.\nvar Jsonrpc = {\n    messageId: 0\n};\n/**\n * Should be called to valid json create payload object\n *\n * @method toPayload\n * @param {Function} method of jsonrpc call, required\n * @param {Array} params, an array of method params, optional\n * @returns {Object} valid jsonrpc payload object\n */\nJsonrpc.toPayload = function (method, params) {\n    if (!method) {\n        throw new Error('JSONRPC method should be specified for params: \"' + JSON.stringify(params) + '\"!');\n    }\n    // advance message ID\n    Jsonrpc.messageId++;\n    return {\n        jsonrpc: '2.0',\n        id: Jsonrpc.messageId,\n        method: method,\n        params: params || []\n    };\n};\n/**\n * Should be called to check if jsonrpc response is valid\n *\n * @method isValidResponse\n * @param {Object}\n * @returns {Boolean} true if response is valid, otherwise false\n */\nJsonrpc.isValidResponse = function (response) {\n    return Array.isArray(response) ? response.every(validateSingleMessage) : validateSingleMessage(response);\n    function validateSingleMessage(message) {\n        return !!message &&\n            !message.error &&\n            message.jsonrpc === '2.0' &&\n            (typeof message.id === 'number' || typeof message.id === 'string') &&\n            message.result !== undefined; // only undefined is not valid json object\n    }\n};\n/**\n * Should be called to create batch payload object\n *\n * @method toBatchPayload\n * @param {Array} messages, an array of objects with method (required) and params (optional) fields\n * @returns {Array} batch payload\n */\nJsonrpc.toBatchPayload = function (messages) {\n    return messages.map(function (message) {\n        return Jsonrpc.toPayload(message.method, message.params);\n    });\n};\nmodule.exports = Jsonrpc;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Jsonrpc","messageId","Jsonrpc.toPayload","method","params","Error","JSON","stringify","jsonrpc","id","Jsonrpc.isValidResponse","response","validateSingleMessage","message","error","undefined","result","Array","isArray","every","Jsonrpc.toBatchPayload","messages","map","toPayload"]
}
