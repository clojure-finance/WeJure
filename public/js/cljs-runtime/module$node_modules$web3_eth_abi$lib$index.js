shadow$provide.module$node_modules$web3_eth_abi$lib$index=function(global,require,module,exports){function Result(){}var Buffer=require("module$node_modules$buffer$index").Buffer,utils=require("module$node_modules$web3_utils$lib$index");global=require("module$node_modules$$ethersproject$abi$lib$index").AbiCoder;var ParamType=require("module$node_modules$$ethersproject$abi$lib$index").ParamType,ethersAbiCoder=new global(function(type,value){return!type.match(/^u?int/)||Array.isArray(value)||value&&
"object"===typeof value&&"BN"===value.constructor.name?value:value.toString()});require=function(){};require.prototype.encodeFunctionSignature=function(functionName){if("function"===typeof functionName||"object"===typeof functionName&&functionName)functionName=utils._jsonInterfaceMethodToString(functionName);return utils.sha3(functionName).slice(0,10)};require.prototype.encodeEventSignature=function(functionName){if("function"===typeof functionName||"object"===typeof functionName&&functionName)functionName=
utils._jsonInterfaceMethodToString(functionName);return utils.sha3(functionName)};require.prototype.encodeParameter=function(type,param){return this.encodeParameters([type],[param])};require.prototype.encodeParameters=function(types,params){var self=this;types=self.mapTypes(types);params=params.map(function(param$jscomp$0,index){index=types[index];"object"===typeof index&&index.type&&(index=index.type);param$jscomp$0=self.formatParam(index,param$jscomp$0);if("string"===typeof index&&index.includes("tuple")){index=
ethersAbiCoder._getCoder(ParamType.from(index));const modifyParams=(coder,param)=>{if("array"===coder.name)return param.map(p=>modifyParams(ethersAbiCoder._getCoder(ParamType.from(coder.type.replace("[]",""))),p));coder.coders.forEach((c,i)=>{"tuple"===c.name?modifyParams(c,param[i]):param[i]=self.formatParam(c.name,param[i])})};modifyParams(index,param$jscomp$0)}return param$jscomp$0});return ethersAbiCoder.encode(types,params)};require.prototype.mapTypes=function(types){var self=this,mappedTypes=
[];types.forEach(function(type){"object"===typeof type&&"function"===type.type&&(type=Object.assign({},type,{type:"bytes24"}));if(self.isSimplifiedStructFormat(type)){var structName=Object.keys(type)[0];mappedTypes.push(Object.assign(self.mapStructNameAndType(structName),{components:self.mapStructToCoderFormat(type[structName])}))}else mappedTypes.push(type)});return mappedTypes};require.prototype.isSimplifiedStructFormat=function(type){return"object"===typeof type&&"undefined"===typeof type.components&&
"undefined"===typeof type.name};require.prototype.mapStructNameAndType=function(structName){var type="tuple";-1<structName.indexOf("[]")&&(type="tuple[]",structName=structName.slice(0,-2));return{type,name:structName}};require.prototype.mapStructToCoderFormat=function(struct){var self=this,components=[];Object.keys(struct).forEach(function(key){"object"===typeof struct[key]?components.push(Object.assign(self.mapStructNameAndType(key),{components:self.mapStructToCoderFormat(struct[key])})):components.push({name:key,
type:struct[key]})});return components};require.prototype.formatParam=function(type,param){var paramTypeBytes=new RegExp(/^bytes([0-9]*)$/),paramTypeBytesArray=new RegExp(/^bytes([0-9]*)\[\]$/);const paramTypeNumber=new RegExp(/^(u?int)([0-9]*)$/),paramTypeNumberArray=new RegExp(/^(u?int)([0-9]*)\[\]$/);if(utils.isBN(param)||utils.isBigNumber(param))return param.toString(10);if(type.match(paramTypeBytesArray)||type.match(paramTypeNumberArray))return param.map(p=>this.formatParam(type.replace("[]",
""),p));if(paramTypeBytesArray=type.match(paramTypeNumber))paramTypeBytesArray=parseInt(paramTypeBytesArray[2]||"256"),paramTypeBytesArray/8<param.length&&(param=utils.leftPad(param,paramTypeBytesArray));if(paramTypeBytesArray=type.match(paramTypeBytes)){Buffer.isBuffer(param)&&(param=utils.toHex(param));if(paramTypeBytes=parseInt(paramTypeBytesArray[1]))paramTypeBytesArray=2*paramTypeBytes,"0x"===param.substring(0,2)&&(paramTypeBytesArray+=2),param.length<paramTypeBytesArray&&(param=utils.rightPad(param,
2*paramTypeBytes));1===param.length%2&&(param="0x0"+param.substring(2))}return param};require.prototype.encodeFunctionCall=function(jsonInterface,params){return this.encodeFunctionSignature(jsonInterface)+this.encodeParameters(jsonInterface.inputs,params).replace("0x","")};require.prototype.decodeParameter=function(type,bytes){return this.decodeParameters([type],bytes)[0]};require.prototype.decodeParameters=function(outputs,bytes){return this.decodeParametersWith(outputs,bytes,!1)};require.prototype.decodeParametersWith=
function(outputs,bytes,loose){if(0<outputs.length&&(!bytes||"0x"===bytes||"0X"===bytes))throw Error("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");var res=ethersAbiCoder.decode(this.mapTypes(outputs),"0x"+bytes.replace(/0x/i,""),loose),returnValue=new Result;returnValue.__length__=
0;outputs.forEach(function(output,i){var decodedValue=res[returnValue.__length__];decodedValue="0x"===decodedValue?null:decodedValue;returnValue[i]=decodedValue;("function"===typeof output||output&&"object"===typeof output)&&output.name&&(returnValue[output.name]=decodedValue);returnValue.__length__++});return returnValue};require.prototype.decodeLog=function(inputs,data,topics){var _this=this;topics=Array.isArray(topics)?topics:[topics];data=data||"";var notIndexedInputs=[],indexedParams=[],topicCount=
0;inputs.forEach(function(input,i){input.indexed?(indexedParams[i]="bool int uint address fixed ufixed".split(" ").find(function(staticType){return-1!==input.type.indexOf(staticType)})?_this.decodeParameter(input.type,topics[topicCount]):topics[topicCount],topicCount++):notIndexedInputs[i]=input});var notIndexedParams=data?this.decodeParametersWith(notIndexedInputs,data,!0):[],returnValue=new Result;returnValue.__length__=0;inputs.forEach(function(res,i){returnValue[i]="string"===res.type?"":null;
"undefined"!==typeof notIndexedParams[i]&&(returnValue[i]=notIndexedParams[i]);"undefined"!==typeof indexedParams[i]&&(returnValue[i]=indexedParams[i]);res.name&&(returnValue[res.name]=returnValue[i]);returnValue.__length__++});return returnValue};require=new require;module.exports=require}
//# sourceMappingURL=module$node_modules$web3_eth_abi$lib$index.js.map
