{
"version":3,
"file":"module$node_modules$web3_utils$lib$soliditySha3.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/web3-utils/lib/soliditySha3.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_utils$lib$soliditySha3\"] = function(global,require,module,exports) {\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file soliditySha3.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar utils = require('./utils.js');\nvar _elementaryName = function (name) {\n    /*jshint maxcomplexity:false */\n    if (name.startsWith('int[')) {\n        return 'int256' + name.slice(3);\n    }\n    else if (name === 'int') {\n        return 'int256';\n    }\n    else if (name.startsWith('uint[')) {\n        return 'uint256' + name.slice(4);\n    }\n    else if (name === 'uint') {\n        return 'uint256';\n    }\n    else if (name.startsWith('fixed[')) {\n        return 'fixed128x128' + name.slice(5);\n    }\n    else if (name === 'fixed') {\n        return 'fixed128x128';\n    }\n    else if (name.startsWith('ufixed[')) {\n        return 'ufixed128x128' + name.slice(6);\n    }\n    else if (name === 'ufixed') {\n        return 'ufixed128x128';\n    }\n    return name;\n};\n// Parse N from type<N>\nvar _parseTypeN = function (type) {\n    var typesize = /^\\D+(\\d+).*$/.exec(type);\n    return typesize ? parseInt(typesize[1], 10) : null;\n};\n// Parse N from type[<N>]\nvar _parseTypeNArray = function (type) {\n    var arraySize = /^\\D+\\d*\\[(\\d+)\\]$/.exec(type);\n    return arraySize ? parseInt(arraySize[1], 10) : null;\n};\nvar _parseNumber = function (arg) {\n    var type = typeof arg;\n    if (type === 'string') {\n        if (utils.isHexStrict(arg)) {\n            return new BN(arg.replace(/0x/i, ''), 16);\n        }\n        else {\n            return new BN(arg, 10);\n        }\n    }\n    else if (type === 'number') {\n        return new BN(arg);\n    }\n    else if (utils.isBigNumber(arg)) {\n        return new BN(arg.toString(10));\n    }\n    else if (utils.isBN(arg)) {\n        return arg;\n    }\n    else {\n        throw new Error(arg + ' is not a number');\n    }\n};\nvar _solidityPack = function (type, value, arraySize) {\n    /*jshint maxcomplexity:false */\n    var size, num;\n    type = _elementaryName(type);\n    if (type === 'bytes') {\n        if (value.replace(/^0x/i, '').length % 2 !== 0) {\n            throw new Error('Invalid bytes characters ' + value.length);\n        }\n        return value;\n    }\n    else if (type === 'string') {\n        return utils.utf8ToHex(value);\n    }\n    else if (type === 'bool') {\n        return value ? '01' : '00';\n    }\n    else if (type.startsWith('address')) {\n        if (arraySize) {\n            size = 64;\n        }\n        else {\n            size = 40;\n        }\n        if (!utils.isAddress(value)) {\n            throw new Error(value + ' is not a valid address, or the checksum is invalid.');\n        }\n        return utils.leftPad(value.toLowerCase(), size);\n    }\n    size = _parseTypeN(type);\n    if (type.startsWith('bytes')) {\n        if (!size) {\n            throw new Error('bytes[] not yet supported in solidity');\n        }\n        // must be 32 byte slices when in an array\n        if (arraySize) {\n            size = 32;\n        }\n        if (size < 1 || size > 32 || size < value.replace(/^0x/i, '').length / 2) {\n            throw new Error('Invalid bytes' + size + ' for ' + value);\n        }\n        return utils.rightPad(value, size * 2);\n    }\n    else if (type.startsWith('uint')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid uint' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied uint exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            throw new Error('Supplied uint ' + num.toString() + ' is negative');\n        }\n        return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n    }\n    else if (type.startsWith('int')) {\n        if ((size % 8) || (size < 8) || (size > 256)) {\n            throw new Error('Invalid int' + size + ' size');\n        }\n        num = _parseNumber(value);\n        if (num.bitLength() > size) {\n            throw new Error('Supplied int exceeds width: ' + size + ' vs ' + num.bitLength());\n        }\n        if (num.lt(new BN(0))) {\n            return num.toTwos(size).toString('hex');\n        }\n        else {\n            return size ? utils.leftPad(num.toString('hex'), size / 8 * 2) : num;\n        }\n    }\n    else {\n        // FIXME: support all other types\n        throw new Error('Unsupported or invalid type: ' + type);\n    }\n};\nvar _processSolidityEncodePackedArgs = function (arg) {\n    /*jshint maxcomplexity:false */\n    if (Array.isArray(arg)) {\n        throw new Error('Autodetection of array types is not supported.');\n    }\n    var type, value = '';\n    var hexArg, arraySize;\n    // if type is given\n    if (!!arg && typeof arg === 'object' && (arg.hasOwnProperty('v') || arg.hasOwnProperty('t') || arg.hasOwnProperty('value') || arg.hasOwnProperty('type'))) {\n        type = arg.hasOwnProperty('t') ? arg.t : arg.type;\n        value = arg.hasOwnProperty('v') ? arg.v : arg.value;\n        // otherwise try to guess the type\n    }\n    else {\n        type = utils.toHex(arg, true);\n        value = utils.toHex(arg);\n        if (!type.startsWith('int') && !type.startsWith('uint')) {\n            type = 'bytes';\n        }\n    }\n    if ((type.startsWith('int') || type.startsWith('uint')) && typeof value === 'string' && !/^(-)?0x/i.test(value)) {\n        value = new BN(value);\n    }\n    // get the array size\n    if (Array.isArray(value)) {\n        arraySize = _parseTypeNArray(type);\n        if (arraySize && value.length !== arraySize) {\n            throw new Error(type + ' is not matching the given array ' + JSON.stringify(value));\n        }\n        else {\n            arraySize = value.length;\n        }\n    }\n    if (Array.isArray(value)) {\n        hexArg = value.map(function (val) {\n            return _solidityPack(type, val, arraySize).toString('hex').replace('0x', '');\n        });\n        return hexArg.join('');\n    }\n    else {\n        hexArg = _solidityPack(type, value, arraySize);\n        return hexArg.toString('hex').replace('0x', '');\n    }\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256\n *\n * @method soliditySha3\n * @return {Object} the sha3\n */\nvar soliditySha3 = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    // console.log(args, hexArgs);\n    // console.log('0x'+ hexArgs.join(''));\n    return utils.sha3('0x' + hexArgs.join(''));\n};\n/**\n * Hashes solidity values to a sha3 hash using keccak 256 but does return the hash of value `null` instead of `null`\n *\n * @method soliditySha3Raw\n * @return {Object} the sha3\n */\nvar soliditySha3Raw = function () {\n    return utils.sha3Raw('0x' + Array.prototype.slice.call(arguments).map(_processSolidityEncodePackedArgs).join(''));\n};\n/**\n * Encode packed args to hex\n *\n * @method encodePacked\n * @return {String} the hex encoded arguments\n */\nvar encodePacked = function () {\n    /*jshint maxcomplexity:false */\n    var args = Array.prototype.slice.call(arguments);\n    var hexArgs = args.map(_processSolidityEncodePackedArgs);\n    return '0x' + hexArgs.join('').toLowerCase();\n};\nmodule.exports = {\n    soliditySha3: soliditySha3,\n    soliditySha3Raw: soliditySha3Raw,\n    encodePacked: encodePacked\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","BN","utils","_parseTypeNArray","type","arraySize","exec","parseInt","_parseNumber","arg","isHexStrict","replace","isBigNumber","toString","isBN","Error","_solidityPack","value","name","startsWith","slice","length","utf8ToHex","size","isAddress","leftPad","toLowerCase","typesize","rightPad","num","bitLength","lt","toTwos","_processSolidityEncodePackedArgs","Array","isArray","hasOwnProperty","t","v","toHex","test","JSON","stringify","hexArg","map","val","join","soliditySha3","hexArgs","prototype","call","args","arguments","sha3","soliditySha3Raw","sha3Raw","encodePacked"]
}
