{
"version":3,
"file":"module$node_modules$keccak$lib$api$shake.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/keccak/lib/api/shake.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$keccak$lib$api$shake\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\nconst { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","Transform","KeccakState","module.exports","Shake","constructor","rate","capacity","delimitedSuffix","options","_rate","_capacity","_delimitedSuffix","_options","_state","initialize","_finalized","_transform","chunk","encoding","callback","error","update","err","_flush","_read","size","push","squeeze","data","isBuffer","TypeError","Error","from","absorb","dataByteLength","absorbLastFewBits","undefined","toString","_resetState","_clone","clone","copy"]
}
