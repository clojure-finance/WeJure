{
"version":3,
"file":"module$node_modules$ethereumjs_util$dist_browser$object.js",
"lineCount":5,
"mappings":"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",
"sources":["node_modules/ethereumjs-util/dist.browser/object.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereumjs_util$dist_browser$object\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar assert_1 = __importDefault(require(\"assert\"));\nvar internal_1 = require(\"./internal\");\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nvar defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\".concat(self[field].toString('hex'));\n            });\n            return obj_1;\n        }\n        return (0, bytes_1.baToJSON)(self.raw);\n    };\n    self.serialize = function serialize() {\n        return externals_1.rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = (0, bytes_1.toBuffer)(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = (0, bytes_1.unpadBuffer)(v);\n                (0, assert_1.default)(field.length >= v.length, \"The field \".concat(field.name, \" must not have more \").concat(field.length, \" bytes\"));\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                (0, assert_1.default)(field.length === v.length, \"The field \".concat(field.name, \" must have byte length of \").concat(field.length));\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from((0, internal_1.stripHexPrefix)(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = externals_1.rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = (0, bytes_1.toBuffer)(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\nexports.defineProperties = defineProperties;\n//# sourceMappingURL=object.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","__importDefault","mod","__esModule","Object","defineProperty","value","defineProperties","assert_1","internal_1","externals_1","bytes_1","self","fields","data","raw","_fields","toJSON","self.toJSON","label","obj_1","forEach","field","concat","toString","baToJSON","serialize","self.serialize","rlp","encode","i","getter","setter","v","toBuffer","allowZero","allocUnsafe","allowLess","length","unpadBuffer","default","name","push","enumerable","configurable","get","set","alias","from","stripHexPrefix","isBuffer","decode","Array","isArray","Error","d","keys_1","keys","indexOf"]
}
