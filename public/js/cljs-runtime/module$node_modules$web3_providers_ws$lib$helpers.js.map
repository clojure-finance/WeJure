{
"version":3,
"file":"module$node_modules$web3_providers_ws$lib$helpers.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,iDAAA,CAAsE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC1GC,MAAAA,CAAUH,OAAA,CAAQ,qCAAR,CACd,KAAII,OAASJ,OAAA,CAAQ,kCAAR,CAAkBI,CAAAA,MAC3BC,QAAAA,CAA0F,kBAA1FA,GAASC,MAAOC,CAAAA,SAAUC,CAAAA,QAASC,CAAAA,IAA1B,CAAkD,WAAnB,GAAA,MAAON,OAAP,CAAiCA,MAAjC,CAA2C,CAA1E,CACb,KAAIO,KAA4B,WAA5BA,GAAO,MAAOC,UAAdD,EAAiE,aAAjEA,GAA2CC,SAAUC,CAAAA,OAAzD,CAEIC,QADAC,MACAD,CADQ,IAEZ,IAAIR,OAAJ,EAAcK,IAAd,CAKI,GAJAI,MAIQC,CAJAD,QAAS,CAACE,GAAD,CAAM,CACnB,MAAOZ,OAAOa,CAAAA,IAAP,CAAYD,GAAZ,CAAiBR,CAAAA,QAAjB,CAA0B,QAA1B,CADY,CAIfO,CADJG,OACIH;AADEf,OAAA,CAAQ,6BAAR,CACFe,CAAJG,OAAIH,CAAAA,GAAR,CAAa,CAET,IAAII,OAASD,OAAIH,CAAAA,GACjBF,QAAA,CAAUA,QAAS,CAACK,GAAD,CAAM,CACrB,MAAO,KAAIC,MAAJ,CAAWD,GAAX,CADc,CAHhB,CAAb,IASIL,QAAA,CAAUb,OAAA,CAAQ,6BAAR,CAAeoB,CAAAA,KAdjC,KAkBIN,OACA,CADQO,IAAKC,CAAAA,IAAL,CAAUC,MAAV,CACR,CAAAV,OAAA,CAAUA,QAAS,CAACK,GAAD,CAAM,CACrB,MAAO,KAAIH,GAAJ,CAAQG,GAAR,CADc,CAI7BjB,OAAOC,CAAAA,OAAP,CAAiB,CACbsB,SAAUX,OADG,CAEbQ,KAAMP,MAFO,CA9B6F;",
"sources":["node_modules/web3-providers-ws/lib/helpers.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_providers_ws$lib$helpers\"] = function(global,require,module,exports) {\nvar process = require('process');\nvar Buffer = require('buffer').Buffer;\nvar isNode = Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]';\nvar isRN = typeof navigator !== 'undefined' && navigator.product === 'ReactNative';\nvar _btoa = null;\nvar helpers = null;\nif (isNode || isRN) {\n    _btoa = function (str) {\n        return Buffer.from(str).toString('base64');\n    };\n    var url = require('url');\n    if (url.URL) {\n        // Use the new Node 6+ API for parsing URLs that supports username/password\n        var newURL = url.URL;\n        helpers = function (url) {\n            return new newURL(url);\n        };\n    }\n    else {\n        // Web3 supports Node.js 5, so fall back to the legacy URL API if necessary\n        helpers = require('url').parse;\n    }\n}\nelse {\n    _btoa = btoa.bind(window);\n    helpers = function (url) {\n        return new URL(url);\n    };\n}\nmodule.exports = {\n    parseURL: helpers,\n    btoa: _btoa\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","process","Buffer","isNode","Object","prototype","toString","call","isRN","navigator","product","helpers","_btoa","URL","str","from","url","newURL","parse","btoa","bind","window","parseURL"]
}
