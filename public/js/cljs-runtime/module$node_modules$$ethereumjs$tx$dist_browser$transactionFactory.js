shadow$provide.module$node_modules$$ethereumjs$tx$dist_browser$transactionFactory=function(global,require,module,exports){var Buffer=require("module$node_modules$buffer$index").Buffer;"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var ethereumjs_util_1=require("module$node_modules$ethereumjs_util$dist_browser$index"),_1=require("module$node_modules$$ethereumjs$tx$dist_browser$index");global=function(){function TransactionFactory(){}TransactionFactory.fromTxData=function(txData,
txOptions){void 0===txOptions&&(txOptions={});if("type"in txData&&void 0!==txData.type){var txType=(new ethereumjs_util_1.BN((0,ethereumjs_util_1.toBuffer)(txData.type))).toNumber();if(0===txType)return _1.Transaction.fromTxData(txData,txOptions);if(1===txType)return _1.AccessListEIP2930Transaction.fromTxData(txData,txOptions);if(2===txType)return _1.FeeMarketEIP1559Transaction.fromTxData(txData,txOptions);throw Error("Tx instantiation with type ".concat(txType," not supported"));}return _1.Transaction.fromTxData(txData,
txOptions)};TransactionFactory.fromSerializedData=function(data,txOptions){void 0===txOptions&&(txOptions={});if(127>=data[0]){switch(data[0]){case 1:var EIP=2930;break;case 2:EIP=1559;break;default:throw Error("TypedTransaction with ID ".concat(data[0]," unknown"));}return 1559===EIP?_1.FeeMarketEIP1559Transaction.fromSerializedTx(data,txOptions):_1.AccessListEIP2930Transaction.fromSerializedTx(data,txOptions)}return _1.Transaction.fromSerializedTx(data,txOptions)};TransactionFactory.fromBlockBodyData=
function(data,txOptions){void 0===txOptions&&(txOptions={});if(Buffer.isBuffer(data))return this.fromSerializedData(data,txOptions);if(Array.isArray(data))return _1.Transaction.fromValuesArray(data,txOptions);throw Error("Cannot decode transaction: unknown type input");};TransactionFactory.getTransactionClass=function(transactionID,_common){void 0===transactionID&&(transactionID=0);if(0==transactionID||128<=transactionID&&255>=transactionID)return _1.Transaction;switch(transactionID){case 1:return _1.AccessListEIP2930Transaction;
case 2:return _1.FeeMarketEIP1559Transaction;default:throw Error("TypedTransaction with ID ".concat(transactionID," unknown"));}};return TransactionFactory}();exports.default=global}
//# sourceMappingURL=module$node_modules$$ethereumjs$tx$dist_browser$transactionFactory.js.map
