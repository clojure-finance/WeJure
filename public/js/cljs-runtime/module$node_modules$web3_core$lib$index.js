shadow$provide.module$node_modules$web3_core$lib$index=function(global,require,module,exports){const requestManager=require("module$node_modules$web3_core_requestmanager$lib$index"),extend=require("module$node_modules$web3_core$lib$extend");module.exports={packageInit:(pkg,args)=>{args=Array.prototype.slice.call(args);if(!pkg)throw Error('You need to instantiate using the "new" keyword.');Object.defineProperty(pkg,"currentProvider",{get:()=>pkg._provider,set:value=>pkg.setProvider(value),enumerable:!0,
configurable:!0});pkg._requestManager=args[0]&&args[0]._requestManager?args[0]._requestManager:new requestManager.Manager(args[0],args[1]);pkg.givenProvider=requestManager.Manager.givenProvider;pkg.providers=requestManager.Manager.providers;pkg._provider=pkg._requestManager.provider;pkg.setProvider||(pkg.setProvider=(provider,net)=>{pkg._requestManager.setProvider(provider,net);pkg._provider=pkg._requestManager.provider;return!0});pkg.setRequestManager=manager=>{pkg._requestManager=manager;pkg._provider=
manager.provider};pkg.BatchRequest=requestManager.BatchManager.bind(null,pkg._requestManager);pkg.extend=extend(pkg)},addProviders:pkg=>{pkg.givenProvider=requestManager.Manager.givenProvider;pkg.providers=requestManager.Manager.providers}}}
//# sourceMappingURL=module$node_modules$web3_core$lib$index.js.map
