{
"version":3,
"file":"module$node_modules$$ethersproject$strings$lib$utf8.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/@ethersproject/strings/lib/utf8.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$strings$lib$utf8\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toUtf8CodePoints = exports.toUtf8String = exports._toUtf8String = exports._toEscapedUtf8String = exports.toUtf8Bytes = exports.Utf8ErrorFuncs = exports.Utf8ErrorReason = exports.UnicodeNormalizationForm = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\n///////////////////////////////\nvar UnicodeNormalizationForm;\n(function (UnicodeNormalizationForm) {\n    UnicodeNormalizationForm[\"current\"] = \"\";\n    UnicodeNormalizationForm[\"NFC\"] = \"NFC\";\n    UnicodeNormalizationForm[\"NFD\"] = \"NFD\";\n    UnicodeNormalizationForm[\"NFKC\"] = \"NFKC\";\n    UnicodeNormalizationForm[\"NFKD\"] = \"NFKD\";\n})(UnicodeNormalizationForm = exports.UnicodeNormalizationForm || (exports.UnicodeNormalizationForm = {}));\n;\nvar Utf8ErrorReason;\n(function (Utf8ErrorReason) {\n    // A continuation byte was present where there was nothing to continue\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"UNEXPECTED_CONTINUE\"] = \"unexpected continuation byte\";\n    // An invalid (non-continuation) byte to start a UTF-8 codepoint was found\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"BAD_PREFIX\"] = \"bad codepoint prefix\";\n    // The string is too short to process the expected codepoint\n    // - offset = the index the codepoint began in\n    Utf8ErrorReason[\"OVERRUN\"] = \"string overrun\";\n    // A missing continuation byte was expected but not found\n    // - offset = the index the continuation byte was expected at\n    Utf8ErrorReason[\"MISSING_CONTINUE\"] = \"missing continuation byte\";\n    // The computed code point is outside the range for UTF-8\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; outside the UTF-8 range\n    Utf8ErrorReason[\"OUT_OF_RANGE\"] = \"out of UTF-8 range\";\n    // UTF-8 strings may not contain UTF-16 surrogate pairs\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; inside the UTF-16 surrogate range\n    Utf8ErrorReason[\"UTF16_SURROGATE\"] = \"UTF-16 surrogate\";\n    // The string is an overlong representation\n    // - offset       = start of this codepoint\n    // - badCodepoint = the computed codepoint; already bounds checked\n    Utf8ErrorReason[\"OVERLONG\"] = \"overlong representation\";\n})(Utf8ErrorReason = exports.Utf8ErrorReason || (exports.Utf8ErrorReason = {}));\n;\nfunction errorFunc(reason, offset, bytes, output, badCodepoint) {\n    return logger.throwArgumentError(\"invalid codepoint at offset \" + offset + \"; \" + reason, \"bytes\", bytes);\n}\nfunction ignoreFunc(reason, offset, bytes, output, badCodepoint) {\n    // If there is an invalid prefix (including stray continuation), skip any additional continuation bytes\n    if (reason === Utf8ErrorReason.BAD_PREFIX || reason === Utf8ErrorReason.UNEXPECTED_CONTINUE) {\n        var i = 0;\n        for (var o = offset + 1; o < bytes.length; o++) {\n            if (bytes[o] >> 6 !== 0x02) {\n                break;\n            }\n            i++;\n        }\n        return i;\n    }\n    // This byte runs us past the end of the string, so just jump to the end\n    // (but the first byte was read already read and therefore skipped)\n    if (reason === Utf8ErrorReason.OVERRUN) {\n        return bytes.length - offset - 1;\n    }\n    // Nothing to skip\n    return 0;\n}\nfunction replaceFunc(reason, offset, bytes, output, badCodepoint) {\n    // Overlong representations are otherwise \"valid\" code points; just non-deistingtished\n    if (reason === Utf8ErrorReason.OVERLONG) {\n        output.push(badCodepoint);\n        return 0;\n    }\n    // Put the replacement character into the output\n    output.push(0xfffd);\n    // Otherwise, process as if ignoring errors\n    return ignoreFunc(reason, offset, bytes, output, badCodepoint);\n}\n// Common error handing strategies\nexports.Utf8ErrorFuncs = Object.freeze({\n    error: errorFunc,\n    ignore: ignoreFunc,\n    replace: replaceFunc\n});\n// http://stackoverflow.com/questions/13356493/decode-utf-8-with-javascript#13691499\nfunction getUtf8CodePoints(bytes, onError) {\n    if (onError == null) {\n        onError = exports.Utf8ErrorFuncs.error;\n    }\n    bytes = (0, bytes_1.arrayify)(bytes);\n    var result = [];\n    var i = 0;\n    // Invalid bytes are ignored\n    while (i < bytes.length) {\n        var c = bytes[i++];\n        // 0xxx xxxx\n        if (c >> 7 === 0) {\n            result.push(c);\n            continue;\n        }\n        // Multibyte; how many bytes left for this character?\n        var extraLength = null;\n        var overlongMask = null;\n        // 110x xxxx 10xx xxxx\n        if ((c & 0xe0) === 0xc0) {\n            extraLength = 1;\n            overlongMask = 0x7f;\n            // 1110 xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf0) === 0xe0) {\n            extraLength = 2;\n            overlongMask = 0x7ff;\n            // 1111 0xxx 10xx xxxx 10xx xxxx 10xx xxxx\n        }\n        else if ((c & 0xf8) === 0xf0) {\n            extraLength = 3;\n            overlongMask = 0xffff;\n        }\n        else {\n            if ((c & 0xc0) === 0x80) {\n                i += onError(Utf8ErrorReason.UNEXPECTED_CONTINUE, i - 1, bytes, result);\n            }\n            else {\n                i += onError(Utf8ErrorReason.BAD_PREFIX, i - 1, bytes, result);\n            }\n            continue;\n        }\n        // Do we have enough bytes in our data?\n        if (i - 1 + extraLength >= bytes.length) {\n            i += onError(Utf8ErrorReason.OVERRUN, i - 1, bytes, result);\n            continue;\n        }\n        // Remove the length prefix from the char\n        var res = c & ((1 << (8 - extraLength - 1)) - 1);\n        for (var j = 0; j < extraLength; j++) {\n            var nextChar = bytes[i];\n            // Invalid continuation byte\n            if ((nextChar & 0xc0) != 0x80) {\n                i += onError(Utf8ErrorReason.MISSING_CONTINUE, i, bytes, result);\n                res = null;\n                break;\n            }\n            ;\n            res = (res << 6) | (nextChar & 0x3f);\n            i++;\n        }\n        // See above loop for invalid continuation byte\n        if (res === null) {\n            continue;\n        }\n        // Maximum code point\n        if (res > 0x10ffff) {\n            i += onError(Utf8ErrorReason.OUT_OF_RANGE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Reserved for UTF-16 surrogate halves\n        if (res >= 0xd800 && res <= 0xdfff) {\n            i += onError(Utf8ErrorReason.UTF16_SURROGATE, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        // Check for overlong sequences (more bytes than needed)\n        if (res <= overlongMask) {\n            i += onError(Utf8ErrorReason.OVERLONG, i - 1 - extraLength, bytes, result, res);\n            continue;\n        }\n        result.push(res);\n    }\n    return result;\n}\n// http://stackoverflow.com/questions/18729405/how-to-convert-utf8-string-to-byte-array\nfunction toUtf8Bytes(str, form) {\n    if (form === void 0) { form = UnicodeNormalizationForm.current; }\n    if (form != UnicodeNormalizationForm.current) {\n        logger.checkNormalize();\n        str = str.normalize(form);\n    }\n    var result = [];\n    for (var i = 0; i < str.length; i++) {\n        var c = str.charCodeAt(i);\n        if (c < 0x80) {\n            result.push(c);\n        }\n        else if (c < 0x800) {\n            result.push((c >> 6) | 0xc0);\n            result.push((c & 0x3f) | 0x80);\n        }\n        else if ((c & 0xfc00) == 0xd800) {\n            i++;\n            var c2 = str.charCodeAt(i);\n            if (i >= str.length || (c2 & 0xfc00) !== 0xdc00) {\n                throw new Error(\"invalid utf-8 string\");\n            }\n            // Surrogate Pair\n            var pair = 0x10000 + ((c & 0x03ff) << 10) + (c2 & 0x03ff);\n            result.push((pair >> 18) | 0xf0);\n            result.push(((pair >> 12) & 0x3f) | 0x80);\n            result.push(((pair >> 6) & 0x3f) | 0x80);\n            result.push((pair & 0x3f) | 0x80);\n        }\n        else {\n            result.push((c >> 12) | 0xe0);\n            result.push(((c >> 6) & 0x3f) | 0x80);\n            result.push((c & 0x3f) | 0x80);\n        }\n    }\n    return (0, bytes_1.arrayify)(result);\n}\nexports.toUtf8Bytes = toUtf8Bytes;\n;\nfunction escapeChar(value) {\n    var hex = (\"0000\" + value.toString(16));\n    return \"\\\\u\" + hex.substring(hex.length - 4);\n}\nfunction _toEscapedUtf8String(bytes, onError) {\n    return '\"' + getUtf8CodePoints(bytes, onError).map(function (codePoint) {\n        if (codePoint < 256) {\n            switch (codePoint) {\n                case 8: return \"\\\\b\";\n                case 9: return \"\\\\t\";\n                case 10: return \"\\\\n\";\n                case 13: return \"\\\\r\";\n                case 34: return \"\\\\\\\"\";\n                case 92: return \"\\\\\\\\\";\n            }\n            if (codePoint >= 32 && codePoint < 127) {\n                return String.fromCharCode(codePoint);\n            }\n        }\n        if (codePoint <= 0xffff) {\n            return escapeChar(codePoint);\n        }\n        codePoint -= 0x10000;\n        return escapeChar(((codePoint >> 10) & 0x3ff) + 0xd800) + escapeChar((codePoint & 0x3ff) + 0xdc00);\n    }).join(\"\") + '\"';\n}\nexports._toEscapedUtf8String = _toEscapedUtf8String;\nfunction _toUtf8String(codePoints) {\n    return codePoints.map(function (codePoint) {\n        if (codePoint <= 0xffff) {\n            return String.fromCharCode(codePoint);\n        }\n        codePoint -= 0x10000;\n        return String.fromCharCode((((codePoint >> 10) & 0x3ff) + 0xd800), ((codePoint & 0x3ff) + 0xdc00));\n    }).join(\"\");\n}\nexports._toUtf8String = _toUtf8String;\nfunction toUtf8String(bytes, onError) {\n    return _toUtf8String(getUtf8CodePoints(bytes, onError));\n}\nexports.toUtf8String = toUtf8String;\nfunction toUtf8CodePoints(str, form) {\n    if (form === void 0) { form = UnicodeNormalizationForm.current; }\n    return getUtf8CodePoints(toUtf8Bytes(str, form));\n}\nexports.toUtf8CodePoints = toUtf8CodePoints;\n//# sourceMappingURL=utf8.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","ignoreFunc","reason","offset","bytes","output","badCodepoint","Utf8ErrorReason","BAD_PREFIX","UNEXPECTED_CONTINUE","i","o","length","OVERRUN","getUtf8CodePoints","onError","Utf8ErrorFuncs","error","bytes_1","arrayify","result","c","push","extraLength","overlongMask","res","j","nextChar","MISSING_CONTINUE","OUT_OF_RANGE","UTF16_SURROGATE","OVERLONG","toUtf8Bytes","str","form","UnicodeNormalizationForm","current","logger","checkNormalize","normalize","charCodeAt","c2","Error","pair","escapeChar","value","hex","toString","substring","_toUtf8String","codePoints","map","codePoint","String","fromCharCode","join","Object","defineProperty","toUtf8CodePoints","toUtf8String","_toEscapedUtf8String","logger_1","_version_1","Logger","version","freeze","errorFunc","throwArgumentError","ignore","replace","replaceFunc"]
}
