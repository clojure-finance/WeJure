{"version":3,"sources":["wejure/components/ipfsTest.cljs"],"mappings":";AAaA,8CAAA,9CAAMA,oGAAkBC,SAASC;AAAjC,AACE,IAAMC,OAAK,KAAAC,gIAAA,UAAA,rIAAU,qBAAA,rBAACC,wGAASH;AAA/B,AACE,6DAAA,AAAAI,2BAAA,2CAAA,5HAACC,sEAAYL,2GAAiBD,iBAClB,WAAKO,IAAIC;AAAT,AACE,gHAAA,zGAACC,4LAASF,IAAIC;;;AAEhC,sCAAA,tCAAME;AAAN,AACE,AAACC;;AAOD,IAAMC,IAAE,6CAAA,7CAACC;AAAT,AACE;AAAA,AAAA,0FAAA,sDAAA,2CAAA,+DAGI,WAAKE;AAAL,AACE,AAAiBA;;AACjB,2EAAA,AAAAV,pEAACN,4CAAiB,AAAA,AAAAM,gBAASO,wBAAIA;WALrC,mFAAA,sDAAA,2CAAA,qDAAA,OAAA,+DAAA,WAAAE;AAAA,AAOwB,IAAME,IAAyB,CAAA,AAAA,AAAAF,8BAAA;AAA/B,AACE,OAACG,sBAAOL,EAAEI;mBARpC,mFAAA,sDAAA,2CAAA,qDAAA,SAAA,sDAAA","names":["wejure.components.ipfsTest/add-file-to-ipfs","filename","file-data","blob","js/Blob","cljs.core/clj->js","cljs.core/deref","cljs_ipfs_api.files.add","err","files","cljs.core.println","wejure.components.ipfsTest/ipfsTest","cljs_ipfs_api.core.init_ipfs","f","cljs.core.atom","p1__11909#","e","v","cljs.core/reset!"],"sourcesContent":["(ns wejure.components.ipfsTest\r\n  (:require [reagent.core :as r]\r\n            [reagent-mui.material.text-field :refer [text-field]]\r\n            [reagent-mui.material.button :refer [button]]\r\n            [reagent-mui.material.typography :refer [typography]]\r\n            [reagent-mui.material.box :refer [box]]\r\n            [reagent-mui.material.icon-button :refer [icon-button]]\r\n            [reagent-mui.icons.add-a-photo-sharp :refer [add-a-photo-sharp]]\r\n            [cljs-ipfs-api.core :as icore :refer [init-ipfs]]\r\n            [cljs-ipfs-api.files :as ifiles]\r\n            [\"../js/test\" :as jsTest]))\r\n\r\n\r\n(defn add-file-to-ipfs [filename file-data]\r\n  (let [blob (js/Blob. (clj->js [file-data]) #js {:type \"image/*\"})]\r\n    (ifiles/add @file-data {:path filename}\r\n                (fn [err files]\r\n                  (println [err files])))))\r\n\r\n(defn ipfsTest []\r\n  (init-ipfs)\r\n;;(init-ipfs {:host \"http://127.0.0.1:5001\" :endpoint \"/api/v0\"})\r\n\r\n;;fls to avoid clashes with ls from files.ls\r\n\r\n;;Files upload on NODEJS see files_test\r\n;;Files upload -- reagent\r\n  (let [f (atom nil)]\r\n    (fn []\r\n      [:form\r\n       {:on-submit\r\n        (fn [e]\r\n          (.preventDefault e)\r\n          (add-file-to-ipfs (.-name @f) @f))}\r\n       [:input {:type \"file\"\r\n                :on-change #(let [v (-> % .-target .-files (aget 0))]\r\n                              (reset! f v))}]\r\n       [:input\r\n        {:type \"submit\"\r\n         :value \"Import\"}]])))\r\n"]}