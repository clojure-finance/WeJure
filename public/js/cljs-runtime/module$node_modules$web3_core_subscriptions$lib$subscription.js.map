{
"version":3,
"file":"module$node_modules$web3_core_subscriptions$lib$subscription.js",
"lineCount":10,
"mappings":"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",
"sources":["node_modules/web3-core-subscriptions/lib/subscription.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_core_subscriptions$lib$subscription\"] = function(global,require,module,exports) {\n/*\n    This file is part of web3.js.\n\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file subscription.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\n\"use strict\";\nvar errors = require('web3-core-helpers').errors;\nvar EventEmitter = require('eventemitter3');\nvar formatters = require('web3-core-helpers').formatters;\nfunction identity(value) {\n    return value;\n}\nfunction Subscription(options) {\n    EventEmitter.call(this);\n    this.id = null;\n    this.callback = identity;\n    this.arguments = null;\n    this.lastBlock = null; // \"from\" block tracker for backfilling events on reconnection\n    this.options = {\n        subscription: options.subscription,\n        type: options.type,\n        requestManager: options.requestManager\n    };\n}\n// INHERIT\nSubscription.prototype = Object.create(EventEmitter.prototype);\nSubscription.prototype.constructor = Subscription;\n/**\n * Should be used to extract callback from array of arguments. Modifies input param\n *\n * @method extractCallback\n * @param {Array} arguments\n * @return {Function|Null} callback, if exists\n */\nSubscription.prototype._extractCallback = function (args) {\n    if (typeof args[args.length - 1] === 'function') {\n        return args.pop(); // modify the args array!\n    }\n};\n/**\n * Should be called to check if the number of arguments is correct\n *\n * @method validateArgs\n * @param {Array} arguments\n * @throws {Error} if it is not\n */\nSubscription.prototype._validateArgs = function (args) {\n    var subscription = this.options.subscription;\n    if (!subscription)\n        subscription = {};\n    if (!subscription.params)\n        subscription.params = 0;\n    if (args.length !== subscription.params) {\n        throw errors.InvalidNumberOfParams(args.length, subscription.params, subscription.subscriptionName);\n    }\n};\n/**\n * Should be called to format input args of method\n *\n * @method formatInput\n * @param {Array}\n * @return {Array}\n */\nSubscription.prototype._formatInput = function (args) {\n    var subscription = this.options.subscription;\n    if (!subscription) {\n        return args;\n    }\n    if (!subscription.inputFormatter) {\n        return args;\n    }\n    var formattedArgs = subscription.inputFormatter.map(function (formatter, index) {\n        return formatter ? formatter(args[index]) : args[index];\n    });\n    return formattedArgs;\n};\n/**\n * Should be called to format output(result) of method\n *\n * @method formatOutput\n * @param result {Object}\n * @return {Object}\n */\nSubscription.prototype._formatOutput = function (result) {\n    var subscription = this.options.subscription;\n    return (subscription && subscription.outputFormatter && result) ? subscription.outputFormatter(result) : result;\n};\n/**\n * Should create payload from given input args\n *\n * @method toPayload\n * @param {Array} args\n * @return {Object}\n */\nSubscription.prototype._toPayload = function (args) {\n    var params = [];\n    this.callback = this._extractCallback(args) || identity;\n    if (!this.subscriptionMethod) {\n        this.subscriptionMethod = args.shift();\n        // replace subscription with given name\n        if (this.options.subscription.subscriptionName) {\n            this.subscriptionMethod = this.options.subscription.subscriptionName;\n        }\n    }\n    if (!this.arguments) {\n        this.arguments = this._formatInput(args);\n        this._validateArgs(this.arguments);\n        args = []; // make empty after validation\n    }\n    // re-add subscriptionName\n    params.push(this.subscriptionMethod);\n    params = params.concat(this.arguments);\n    if (args.length) {\n        throw new Error('Only a callback is allowed as parameter on an already instantiated subscription.');\n    }\n    return {\n        method: this.options.type + '_subscribe',\n        params: params\n    };\n};\n/**\n * Unsubscribes and clears callbacks\n *\n * @method unsubscribe\n * @return {Object}\n */\nSubscription.prototype.unsubscribe = function (callback) {\n    this.options.requestManager.removeSubscription(this.id, callback);\n    this.id = null;\n    this.lastBlock = null;\n    this.removeAllListeners();\n};\n/**\n * Subscribes and watches for changes\n *\n * @method subscribe\n * @param {String} subscription the subscription\n * @param {Object} options the options object with address topics and fromBlock\n * @return {Object}\n */\nSubscription.prototype.subscribe = function () {\n    var _this = this;\n    var args = Array.prototype.slice.call(arguments);\n    var payload = this._toPayload(args);\n    if (!payload) {\n        return this;\n    }\n    // throw error, if provider is not set\n    if (!this.options.requestManager.provider) {\n        setTimeout(function () {\n            var err1 = new Error('No provider set.');\n            _this.callback(err1, null, _this);\n            _this.emit('error', err1);\n        }, 0);\n        return this;\n    }\n    // throw error, if provider doesnt support subscriptions\n    if (!this.options.requestManager.provider.on) {\n        setTimeout(function () {\n            var err2 = new Error('The current provider doesn\\'t support subscriptions: ' +\n                _this.options.requestManager.provider.constructor.name);\n            _this.callback(err2, null, _this);\n            _this.emit('error', err2);\n        }, 0);\n        return this;\n    }\n    // Re-subscription only: continue fetching from the last block we received.\n    // a dropped connection may have resulted in gaps in the logs...\n    if (this.lastBlock && !!this.options.params && typeof this.options.params === 'object') {\n        payload.params[1] = this.options.params;\n        payload.params[1].fromBlock = formatters.inputBlockNumberFormatter(this.lastBlock + 1);\n    }\n    // if id is there unsubscribe first\n    if (this.id) {\n        this.unsubscribe();\n    }\n    // store the params in the options object\n    this.options.params = payload.params[1];\n    // get past logs, if fromBlock is available\n    if (payload.params[0] === 'logs' && !!payload.params[1] && typeof payload.params[1] === 'object' && payload.params[1].hasOwnProperty('fromBlock') && isFinite(payload.params[1].fromBlock)) {\n        // send the subscription request\n        // copy the params to avoid race-condition with deletion below this block\n        var blockParams = Object.assign({}, payload.params[1]);\n        this.options.requestManager.send({\n            method: 'eth_getLogs',\n            params: [blockParams]\n        }, function (err, logs) {\n            if (!err) {\n                logs.forEach(function (log) {\n                    var output = _this._formatOutput(log);\n                    _this.callback(null, output, _this);\n                    _this.emit('data', output);\n                });\n                // TODO subscribe here? after the past logs?\n            }\n            else {\n                setTimeout(function () {\n                    _this.callback(err, null, _this);\n                    _this.emit('error', err);\n                }, 0);\n            }\n        });\n    }\n    // create subscription\n    // TODO move to separate function? so that past logs can go first?\n    if (typeof payload.params[1] === 'object')\n        delete payload.params[1].fromBlock;\n    this.options.requestManager.send(payload, function (err, result) {\n        if (!err && result) {\n            _this.id = result;\n            _this.method = payload.params[0];\n            // call callback on notifications\n            _this.options.requestManager.addSubscription(_this, function (error, result) {\n                if (!error) {\n                    if (!Array.isArray(result)) {\n                        result = [result];\n                    }\n                    result.forEach(function (resultItem) {\n                        var output = _this._formatOutput(resultItem);\n                        // Track current block (for gaps introduced by dropped connections)\n                        _this.lastBlock = !!output && typeof output === 'object' ? output.blockNumber : null;\n                        if (typeof _this.options.subscription.subscriptionHandler === 'function') {\n                            return _this.options.subscription.subscriptionHandler.call(_this, output);\n                        }\n                        else {\n                            _this.emit('data', output);\n                        }\n                        // call the callback, last so that unsubscribe there won't affect the emit above\n                        _this.callback(null, output, _this);\n                    });\n                }\n                else {\n                    _this.callback(error, false, _this);\n                    _this.emit('error', error);\n                }\n            });\n            _this.emit('connected', result);\n        }\n        else {\n            setTimeout(function () {\n                _this.callback(err, false, _this);\n                _this.emit('error', err);\n            }, 0);\n        }\n    });\n    // return an object to cancel the subscription\n    return this;\n};\n/**\n * Resubscribe\n *\n * @method resubscribe\n *\n * @returns {void}\n */\nSubscription.prototype.resubscribe = function () {\n    this.options.requestManager.removeSubscription(this.id); // unsubscribe\n    this.id = null;\n    this.subscribe(this.callback);\n};\nmodule.exports = Subscription;\n\n};"],
"names":["shadow$provide","global","require","module","exports","identity","value","Subscription","options","EventEmitter","call","id","callback","lastBlock","arguments","subscription","type","requestManager","errors","formatters","prototype","Object","create","constructor","_extractCallback","Subscription.prototype._extractCallback","args","length","pop","_validateArgs","Subscription.prototype._validateArgs","params","InvalidNumberOfParams","subscriptionName","_formatInput","Subscription.prototype._formatInput","inputFormatter","map","formattedArgs","formatter","index","_formatOutput","Subscription.prototype._formatOutput","result","outputFormatter","_toPayload","Subscription.prototype._toPayload","subscriptionMethod","shift","push","concat","Error","method","unsubscribe","Subscription.prototype.unsubscribe","removeSubscription","removeAllListeners","subscribe","Subscription.prototype.subscribe","_this","Array","slice","payload","provider","setTimeout","err1","emit","on","err2","name","fromBlock","inputBlockNumberFormatter","hasOwnProperty","isFinite","blockParams","assign","send","err","logs","forEach","log","output","addSubscription","error","isArray","resultItem","blockNumber","subscriptionHandler","resubscribe","Subscription.prototype.resubscribe"]
}
