{"version":3,"sources":["wejure/components/chatPage.cljs"],"mappings":"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","names":["wejure.components.chatPage/recipient-list","reagent.core.atom","wejure.components.chatPage/selected-recipient","wejure.components.chatPage/message","wejure.components.chatPage/message-list","wejure.components.chatPage/atom-reset","target-atom","value","cljs.core/reset!","wejure.components.chatPage/atom-conj","cljs.core.swap_BANG_","cljs.core/conj","wejure.components.chatPage/atom-str","cljs.core/str","p__12430","map__12431","cljs.core/--destructure-map","cljs.core.get","wejure.components.chatPage/chat-page","details","step","cljs.core/deref","username","prev-peer","cljs.core._EQ_","cljs.core/count","js/module$wejure$js$chatSystem.init","reagent-mui.material.typography/typography","event","js/module$wejure$js$chatSystem.displayMessage","iter__5523__auto__","s__12433","cljs.core/LazySeq","temp__5804__auto__","cljs.core/seq","cljs.core/chunked-seq?","c__5521__auto__","size__5522__auto__","b__12435","cljs.core/chunk-buffer","i__12434","cljs.core/-nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__12432","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","recipient","cljs.core.not_EQ_","s__12437","b__12439","i__12438","iter__12436","message-line","cljs.core.js__GT_clj","reagent-mui.material.button/button","js/module$wejure$js$chatSystem.storeMessage","cljs.core/chunk-first"],"sourcesContent":["(ns wejure.components.chatPage\r\n  (:require [reagent.core :as r] \r\n            [reagent-mui.material.text-field :refer [text-field]]\r\n            [reagent-mui.material.button :refer [button]]\r\n            [reagent-mui.material.typography :refer [typography]]\r\n            [reagent-mui.material.select :refer [select]]\r\n            [\"../js/test\" :as test]\r\n            [\"../js/chatSystem\" :as chat]))\r\n\r\n(def recipient-list (r/atom [\"Select recipient\"]))\r\n\r\n(def selected-recipient (r/atom \"\"))\r\n\r\n(def message (r/atom \"\"))\r\n\r\n(def message-list (r/atom []))\r\n\r\n;; used in chatSystem.js\r\n(defn ^:export atom-reset [target-atom value]\r\n  (reset! target-atom value)\r\n  target-atom)\r\n\r\n;; used in chatSystem.js\r\n(defn ^:export atom-conj [target-atom value]                  \r\n  (swap! target-atom conj value)\r\n  target-atom)\r\n\r\n;; used in chatSystem.js\r\n(defn ^:export atom-str [target-atom value]\r\n  (swap! target-atom str value)\r\n  target-atom)\r\n\r\n(defn chat-page [{:keys [details step]}]\r\n  (let [username (get @details :name) prev-peer (r/atom \"\")] \r\n    (when (= 1 (count @recipient-list))\r\n      (chat/init username))\r\n    [:div\r\n     [typography\r\n      {:variant \"h4\"\r\n       :component \"div\"}\r\n      \"Direct Messages\"]\r\n     [:div\r\n      [:label \"Send to: \"]\r\n      [:select {:value @selected-recipient\r\n                :on-change (fn [event] (reset! prev-peer @selected-recipient)                       ;; update the previous peer\r\n                                       (reset! selected-recipient (-> event .-target .-value))      ;; perform peer selection\r\n                                       (reset! message-list [])                                     ;; clear the previous message output\r\n                                       (chat/displayMessage @selected-recipient @prev-peer))}       ;; display all the stored messages between the user and the peer\r\n       (for [recipient @recipient-list]                                                             ;; retrieve the user list and add them in the peer selection box\r\n         (when (not= recipient username)\r\n           [:option {:key recipient :value recipient} recipient]))]]\r\n\r\n     [:div\r\n      {:style {:height \"600px\"\r\n               :border \"2px solid #ccc\"\r\n               :display \"flex\"\r\n               :flex-direction \"column\"}}\r\n      (for [message-line (js->clj @message-list :keywordize-keys true)]             ;; show all the messages in the message list to the screen\r\n          ^{:key message-line} [:p (get message-line :timestamp) \" \" [:span {:style {:color \"red\"}} (get message-line :sender)\":\"] \" \" (get message-line :content)])]\r\n\r\n     [:div\r\n      [:input {:style {:width \"100%\"}\r\n               :id \"message\"\r\n               :type \"text\"\r\n               :placeholder \"Send message here\"\r\n               :value @message\r\n               :on-change (fn [event]\r\n                            (reset! message (-> event .-target .-value)))}]]\r\n\r\n     [:div\r\n      [button\r\n       {:variant \"contained\"\r\n        :disable-elevation true\r\n        :size \"small\"\r\n        :on-click #(chat/storeMessage @selected-recipient @message)}\r\n       \"send\"]]]\r\n  ))\r\n\r\n\r\n"]}