{
"version":3,
"file":"module$node_modules$web3_utils$lib$index.js",
"lineCount":11,
"mappings":"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",
"sources":["node_modules/web3-utils/lib/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_utils$lib$index\"] = function(global,require,module,exports) {\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Marek Kotewicz <marek@parity.io>\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar ethjsUnit = require('ethjs-unit');\nvar utils = require('./utils.js');\nvar soliditySha3 = require('./soliditySha3.js');\nvar randombytes = require('randombytes');\nvar BN = require('bn.js');\n/**\n * Fires an error in an event emitter and callback and returns the eventemitter\n *\n * @method _fireError\n * @param {Object} error a string, a error, or an object with {message, data}\n * @param {Object} emitter\n * @param {Function} reject\n * @param {Function} callback\n * @param {any} optionalData\n * @return {Object} the emitter\n */\nvar _fireError = function (error, emitter, reject, callback, optionalData) {\n    /*jshint maxcomplexity: 10 */\n    // add data if given\n    if (!!error && typeof error === 'object' && !(error instanceof Error) && error.data) {\n        if (!!error.data && typeof error.data === 'object' || Array.isArray(error.data)) {\n            error.data = JSON.stringify(error.data, null, 2);\n        }\n        error = error.message + \"\\n\" + error.data;\n    }\n    if (typeof error === 'string') {\n        error = new Error(error);\n    }\n    if (typeof callback === 'function') {\n        callback(error, optionalData);\n    }\n    if (typeof reject === 'function') {\n        // suppress uncatched error if an error listener is present\n        // OR suppress uncatched error if an callback listener is present\n        if (emitter &&\n            (typeof emitter.listeners === 'function' &&\n                emitter.listeners('error').length) || typeof callback === 'function') {\n            emitter.catch(function () { });\n        }\n        // reject later, to be able to return emitter\n        setTimeout(function () {\n            reject(error);\n        }, 1);\n    }\n    if (emitter && typeof emitter.emit === 'function') {\n        // emit later, to be able to return emitter\n        setTimeout(function () {\n            emitter.emit('error', error, optionalData);\n            emitter.removeAllListeners();\n        }, 1);\n    }\n    return emitter;\n};\n/**\n * Should be used to create full function/event name from json abi\n *\n * @method _jsonInterfaceMethodToString\n * @param {Object} json\n * @return {String} full function/event name\n */\nvar _jsonInterfaceMethodToString = function (json) {\n    if (!!json && typeof json === 'object' && json.name && json.name.indexOf('(') !== -1) {\n        return json.name;\n    }\n    return json.name + '(' + _flattenTypes(false, json.inputs).join(',') + ')';\n};\n/**\n * Should be used to flatten json abi inputs/outputs into an array of type-representing-strings\n *\n * @method _flattenTypes\n * @param {bool} includeTuple\n * @param {Object} puts\n * @return {Array} parameters as strings\n */\nvar _flattenTypes = function (includeTuple, puts) {\n    // console.log(\"entered _flattenTypes. inputs/outputs: \" + puts)\n    var types = [];\n    puts.forEach(function (param) {\n        if (typeof param.components === 'object') {\n            if (param.type.substring(0, 5) !== 'tuple') {\n                throw new Error('components found but type is not tuple; report on GitHub');\n            }\n            var suffix = '';\n            var arrayBracket = param.type.indexOf('[');\n            if (arrayBracket >= 0) {\n                suffix = param.type.substring(arrayBracket);\n            }\n            var result = _flattenTypes(includeTuple, param.components);\n            // console.log(\"result should have things: \" + result)\n            if (Array.isArray(result) && includeTuple) {\n                // console.log(\"include tuple word, and its an array. joining...: \" + result.types)\n                types.push('tuple(' + result.join(',') + ')' + suffix);\n            }\n            else if (!includeTuple) {\n                // console.log(\"don't include tuple, but its an array. joining...: \" + result)\n                types.push('(' + result.join(',') + ')' + suffix);\n            }\n            else {\n                // console.log(\"its a single type within a tuple: \" + result.types)\n                types.push('(' + result + ')');\n            }\n        }\n        else {\n            // console.log(\"its a type and not directly in a tuple: \" + param.type)\n            types.push(param.type);\n        }\n    });\n    return types;\n};\n/**\n * Returns a random hex string by the given bytes size\n *\n * @param {Number} size\n * @returns {string}\n */\nvar randomHex = function (size) {\n    return '0x' + randombytes(size).toString('hex');\n};\n/**\n * Should be called to get ascii from it's hex representation\n *\n * @method hexToAscii\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToAscii = function (hex) {\n    if (!utils.isHexStrict(hex))\n        throw new Error('The parameter must be a valid HEX string.');\n    var str = \"\";\n    var i = 0, l = hex.length;\n    if (hex.substring(0, 2) === '0x') {\n        i = 2;\n    }\n    for (; i < l; i += 2) {\n        var code = parseInt(hex.substr(i, 2), 16);\n        str += String.fromCharCode(code);\n    }\n    return str;\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @method asciiToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar asciiToHex = function (str) {\n    if (!str)\n        return \"0x00\";\n    var hex = \"\";\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n    }\n    return \"0x\" + hex;\n};\n/**\n * Returns value of unit in Wei\n *\n * @method getUnitValue\n * @param {String} unit the unit to convert to, default ether\n * @returns {BN} value of the unit (in Wei)\n * @throws error if the unit is not correct:w\n */\nvar getUnitValue = function (unit) {\n    unit = unit ? unit.toLowerCase() : 'ether';\n    if (!ethjsUnit.unitMap[unit]) {\n        throw new Error('This unit \"' + unit + '\" doesn\\'t exist, please use the one of the following units' + JSON.stringify(ethjsUnit.unitMap, null, 2));\n    }\n    return unit;\n};\n/**\n * Takes a number of wei and converts it to any other ether unit.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method fromWei\n * @param {Number|String} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert to, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar fromWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.fromWei(number, unit) : ethjsUnit.fromWei(number, unit).toString(10);\n};\n/**\n * Takes a number of a unit and converts it to wei.\n *\n * Possible units are:\n *   SI Short   SI Full        Effigy       Other\n * - kwei       femtoether     babbage\n * - mwei       picoether      lovelace\n * - gwei       nanoether      shannon      nano\n * - --         microether     szabo        micro\n * - --         microether     szabo        micro\n * - --         milliether     finney       milli\n * - ether      --             --\n * - kether                    --           grand\n * - mether\n * - gether\n * - tether\n *\n * @method toWei\n * @param {Number|String|BN} number can be a number, number string or a HEX of a decimal\n * @param {String} unit the unit to convert from, default ether\n * @return {String|Object} When given a BN object it returns one as well, otherwise a number\n */\nvar toWei = function (number, unit) {\n    unit = getUnitValue(unit);\n    if (!utils.isBN(number) && !(typeof number === 'string')) {\n        throw new Error('Please pass numbers as strings or BN objects to avoid precision errors.');\n    }\n    return utils.isBN(number) ? ethjsUnit.toWei(number, unit) : ethjsUnit.toWei(number, unit).toString(10);\n};\n/**\n * Converts to a checksum address\n *\n * @method toChecksumAddress\n * @param {String} address the given HEX address\n * @return {String}\n */\nvar toChecksumAddress = function (address) {\n    if (typeof address === 'undefined')\n        return '';\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address))\n        throw new Error('Given address \"' + address + '\" is not a valid Ethereum address.');\n    address = address.toLowerCase().replace(/^0x/i, '');\n    var addressHash = utils.sha3(address).replace(/^0x/i, '');\n    var checksumAddress = '0x';\n    for (var i = 0; i < address.length; i++) {\n        // If ith character is 8 to f then make it uppercase\n        if (parseInt(addressHash[i], 16) > 7) {\n            checksumAddress += address[i].toUpperCase();\n        }\n        else {\n            checksumAddress += address[i];\n        }\n    }\n    return checksumAddress;\n};\n/**\n * Returns -1 if a<b, 1 if a>b; 0 if a == b.\n * For more details on this type of function, see\n * developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort\n *\n * @method compareBlockNumbers\n *\n * @param {String|Number|BN} a\n *\n * @param {String|Number|BN} b\n *\n * @returns {Number} -1, 0, or 1\n */\nvar compareBlockNumbers = function (a, b) {\n    if (a == b) {\n        return 0;\n    }\n    else if ((\"genesis\" == a || \"earliest\" == a || 0 == a) && (\"genesis\" == b || \"earliest\" == b || 0 == b)) {\n        return 0;\n    }\n    else if (\"genesis\" == a || \"earliest\" == a) {\n        // b !== a, thus a < b\n        return -1;\n    }\n    else if (\"genesis\" == b || \"earliest\" == b) {\n        // b !== a, thus a > b\n        return 1;\n    }\n    else if (a == \"latest\") {\n        if (b == \"pending\") {\n            return -1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return 1;\n        }\n    }\n    else if (b === \"latest\") {\n        if (a == \"pending\") {\n            return 1;\n        }\n        else {\n            // b !== (\"pending\" OR \"latest\"), thus a > b\n            return -1;\n        }\n    }\n    else if (a == \"pending\") {\n        // b (== OR <) \"latest\", thus a > b\n        return 1;\n    }\n    else if (b == \"pending\") {\n        return -1;\n    }\n    else {\n        let bnA = new BN(a);\n        let bnB = new BN(b);\n        if (bnA.lt(bnB)) {\n            return -1;\n        }\n        else if (bnA.eq(bnB)) {\n            return 0;\n        }\n        else {\n            return 1;\n        }\n    }\n};\nmodule.exports = {\n    _fireError: _fireError,\n    _jsonInterfaceMethodToString: _jsonInterfaceMethodToString,\n    _flattenTypes: _flattenTypes,\n    // extractDisplayName: extractDisplayName,\n    // extractTypeName: extractTypeName,\n    randomHex: randomHex,\n    BN: utils.BN,\n    isBN: utils.isBN,\n    isBigNumber: utils.isBigNumber,\n    isHex: utils.isHex,\n    isHexStrict: utils.isHexStrict,\n    sha3: utils.sha3,\n    sha3Raw: utils.sha3Raw,\n    keccak256: utils.sha3,\n    soliditySha3: soliditySha3.soliditySha3,\n    soliditySha3Raw: soliditySha3.soliditySha3Raw,\n    encodePacked: soliditySha3.encodePacked,\n    isAddress: utils.isAddress,\n    checkAddressChecksum: utils.checkAddressChecksum,\n    toChecksumAddress: toChecksumAddress,\n    toHex: utils.toHex,\n    toBN: utils.toBN,\n    bytesToHex: utils.bytesToHex,\n    hexToBytes: utils.hexToBytes,\n    hexToNumberString: utils.hexToNumberString,\n    hexToNumber: utils.hexToNumber,\n    toDecimal: utils.hexToNumber,\n    numberToHex: utils.numberToHex,\n    fromDecimal: utils.numberToHex,\n    hexToUtf8: utils.hexToUtf8,\n    hexToString: utils.hexToUtf8,\n    toUtf8: utils.hexToUtf8,\n    stripHexPrefix: utils.stripHexPrefix,\n    utf8ToHex: utils.utf8ToHex,\n    stringToHex: utils.utf8ToHex,\n    fromUtf8: utils.utf8ToHex,\n    hexToAscii: hexToAscii,\n    toAscii: hexToAscii,\n    asciiToHex: asciiToHex,\n    fromAscii: asciiToHex,\n    unitMap: ethjsUnit.unitMap,\n    toWei: toWei,\n    fromWei: fromWei,\n    padLeft: utils.leftPad,\n    leftPad: utils.leftPad,\n    padRight: utils.rightPad,\n    rightPad: utils.rightPad,\n    toTwosComplement: utils.toTwosComplement,\n    isBloom: utils.isBloom,\n    isUserEthereumAddressInBloom: utils.isUserEthereumAddressInBloom,\n    isContractAddressInBloom: utils.isContractAddressInBloom,\n    isTopic: utils.isTopic,\n    isTopicInBloom: utils.isTopicInBloom,\n    isInBloom: utils.isInBloom,\n    compareBlockNumbers: compareBlockNumbers,\n    toNumber: utils.toNumber\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","ethjsUnit","utils","soliditySha3","randombytes","BN","_flattenTypes","includeTuple","puts","types","forEach","param","components","type","substring","Error","suffix","arrayBracket","indexOf","result","Array","isArray","push","join","hexToAscii","hex","isHexStrict","str","i","l","length","code","parseInt","substr","String","fromCharCode","asciiToHex","n","charCodeAt","toString","getUnitValue","unit","toLowerCase","unitMap","JSON","stringify","_fireError","error","emitter","reject","callback","optionalData","data","message","listeners","catch","setTimeout","emit","removeAllListeners","_jsonInterfaceMethodToString","json","name","inputs","randomHex","size","isBN","isBigNumber","isHex","sha3","sha3Raw","keccak256","soliditySha3Raw","encodePacked","isAddress","checkAddressChecksum","toChecksumAddress","address","test","replace","addressHash","checksumAddress","toUpperCase","toHex","toBN","bytesToHex","hexToBytes","hexToNumberString","hexToNumber","toDecimal","numberToHex","fromDecimal","hexToUtf8","hexToString","toUtf8","stripHexPrefix","utf8ToHex","stringToHex","fromUtf8","toAscii","fromAscii","toWei","number","fromWei","padLeft","leftPad","padRight","rightPad","toTwosComplement","isBloom","isUserEthereumAddressInBloom","isContractAddressInBloom","isTopic","isTopicInBloom","isInBloom","compareBlockNumbers","a","b","bnA","bnB","lt","eq","toNumber"]
}
