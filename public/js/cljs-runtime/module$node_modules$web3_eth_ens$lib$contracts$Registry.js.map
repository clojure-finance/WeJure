{
"version":3,
"file":"module$node_modules$web3_eth_ens$lib$contracts$Registry.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/web3-eth-ens/lib/contracts/Registry.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_eth_ens$lib$contracts$Registry\"] = function(global,require,module,exports) {\n/*\n    This file is part of web3.js.\n    web3.js is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Lesser General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n    web3.js is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Lesser General Public License for more details.\n    You should have received a copy of the GNU Lesser General Public License\n    along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n/**\n * @file Registry.js\n *\n * @author Samuel Furter <samuel@ethereum.org>\n * @date 2018\n */\n\"use strict\";\nvar Contract = require('web3-eth-contract');\nvar namehash = require('eth-ens-namehash');\nvar PromiEvent = require('web3-core-promievent');\nvar formatters = require('web3-core-helpers').formatters;\nvar utils = require('web3-utils');\nvar REGISTRY_ABI = require('../resources/ABI/Registry');\nvar RESOLVER_ABI = require('../resources/ABI/Resolver');\n/**\n * A wrapper around the ENS registry contract.\n *\n * @method Registry\n * @param {Ens} ens\n * @constructor\n */\nfunction Registry(ens) {\n    var self = this;\n    this.ens = ens;\n    this.contract = ens.checkNetwork().then(function (address) {\n        var contract = new Contract(REGISTRY_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n        return contract;\n    });\n}\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @deprecated Please use the \"getOwner\" method instead of \"owner\"\n *\n * @method owner\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<string>}\n */\nRegistry.prototype.owner = function (name, callback) {\n    console.warn('Deprecated: Please use the \"getOwner\" method instead of \"owner\".');\n    return this.getOwner(name, callback);\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method getOwner\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<string>}\n */\nRegistry.prototype.getOwner = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.owner(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setOwner\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setOwner = function (name, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setOwner(namehash.hash(name), formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the TTL of the given node by his name\n *\n * @method getTTL\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returnss {Promise<string>}\n */\nRegistry.prototype.getTTL = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.ttl(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setTTL\n *\n * @param {string} name\n * @param {number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setTTL = function (name, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setTTL(namehash.hash(name), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setSubnodeOwner\n *\n * @param {string} name\n * @param {string} label\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setSubnodeOwner = function (name, label, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    if (!utils.isHexStrict(label)) {\n        label = utils.sha3(label);\n    }\n    this.contract.then(function (contract) {\n        return contract.methods.setSubnodeOwner(namehash.hash(name), label, formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets the owner, resolver, and TTL for an ENS record in a single operation.\n *\n * @method setRecord\n *\n * @param {string} name\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setRecord = function (name, owner, resolver, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setRecord(namehash.hash(name), formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(resolver), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets the owner, resolver and TTL for a subdomain, creating it if necessary.\n *\n * @method setSubnodeRecord\n *\n * @param {string} name\n * @param {string} label\n * @param {string} owner\n * @param {string} resolver\n * @param {string | number} ttl\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setSubnodeRecord = function (name, label, owner, resolver, ttl, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    if (!utils.isHexStrict(label)) {\n        label = utils.sha3(label);\n    }\n    this.contract.then(function (contract) {\n        return contract.methods.setSubnodeRecord(namehash.hash(name), label, formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(resolver), ttl).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Sets or clears an approval by the given operator.\n *\n * @method setApprovalForAll\n *\n * @param {string} operator\n * @param {boolean} approved\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setApprovalForAll = function (operator, approved, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setApprovalForAll(formatters.inputAddressFormatter(operator), approved).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns true if the operator is approved\n *\n * @method isApprovedForAll\n *\n * @param {string} owner\n * @param {string} operator\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nRegistry.prototype.isApprovedForAll = function (owner, operator, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.isApprovedForAll(formatters.inputAddressFormatter(owner), formatters.inputAddressFormatter(operator)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns true if the record exists\n *\n * @method recordExists\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<boolean>}\n */\nRegistry.prototype.recordExists = function (name, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.recordExists(namehash.hash(name)).call();\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\n/**\n * Returns the resolver contract associated with a name.\n *\n * @deprecated Please use the \"getResolver\" method instead of \"resolver\"\n *\n * @method resolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nRegistry.prototype.resolver = function (name, callback) {\n    console.warn('Deprecated: Please use the \"getResolver\" method instead of \"resolver\".');\n    return this.getResolver(name, callback);\n};\n/**\n * Returns the resolver contract associated with a name.\n *\n * @method getResolver\n *\n * @param {string} name\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {Promise<Contract>}\n */\nRegistry.prototype.getResolver = function (name, callback) {\n    var self = this;\n    return this.contract.then(function (contract) {\n        return contract.methods.resolver(namehash.hash(name)).call();\n    }).then(function (address) {\n        var contract = new Contract(RESOLVER_ABI, address);\n        contract.setProvider(self.ens.eth.currentProvider);\n        if (typeof callback === 'function') {\n            // It's required to pass the contract to the first argument to be backward compatible and to have the required consistency\n            callback(contract, contract);\n            return;\n        }\n        return contract;\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        throw error;\n    });\n};\n/**\n * Returns the address of the owner of an ENS name.\n *\n * @method setResolver\n *\n * @param {string} name\n * @param {string} address\n * @param {TransactionConfig} txConfig\n * @param {function} callback\n *\n * @callback callback callback(error, result)\n * @returns {PromiEvent<TransactionReceipt | TransactionRevertInstructionError>}\n */\nRegistry.prototype.setResolver = function (name, address, txConfig, callback) {\n    var promiEvent = new PromiEvent(true);\n    this.contract.then(function (contract) {\n        return contract.methods.setResolver(namehash.hash(name), formatters.inputAddressFormatter(address)).send(txConfig);\n    }).then(function (receipt) {\n        if (typeof callback === 'function') {\n            // It's required to pass the receipt to the first argument to be backward compatible and to have the required consistency\n            callback(receipt, receipt);\n            return;\n        }\n        promiEvent.resolve(receipt);\n    }).catch(function (error) {\n        if (typeof callback === 'function') {\n            callback(error, null);\n            return;\n        }\n        promiEvent.reject(error);\n    });\n    return promiEvent.eventEmitter;\n};\nmodule.exports = Registry;\n\n};"],
"names":["shadow$provide","global","require","module","exports","Registry","ens","self","contract","checkNetwork","then","address","Contract","REGISTRY_ABI","setProvider","eth","currentProvider","namehash","PromiEvent","formatters","utils","RESOLVER_ABI","prototype","owner","Registry.prototype.owner","name","callback","console","warn","getOwner","Registry.prototype.getOwner","promiEvent","methods","hash","call","receipt","resolve","catch","error","reject","eventEmitter","setOwner","Registry.prototype.setOwner","txConfig","inputAddressFormatter","send","getTTL","Registry.prototype.getTTL","ttl","setTTL","Registry.prototype.setTTL","setSubnodeOwner","Registry.prototype.setSubnodeOwner","label","isHexStrict","sha3","setRecord","Registry.prototype.setRecord","resolver","setSubnodeRecord","Registry.prototype.setSubnodeRecord","setApprovalForAll","Registry.prototype.setApprovalForAll","operator","approved","isApprovedForAll","Registry.prototype.isApprovedForAll","recordExists","Registry.prototype.recordExists","Registry.prototype.resolver","getResolver","Registry.prototype.getResolver","setResolver","Registry.prototype.setResolver"]
}
