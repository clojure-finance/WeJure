{
"version":3,
"file":"module$node_modules$ethereumjs_util$dist_browser$signature.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/ethereumjs-util/dist.browser/signature.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$ethereumjs_util$dist_browser$signature\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toCompactSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar secp256k1_1 = require(\"ethereum-cryptography/secp256k1\");\nvar externals_1 = require(\"./externals\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\nvar types_1 = require(\"./types\");\nfunction ecsign(msgHash, privateKey, chainId) {\n    var _a = (0, secp256k1_1.ecdsaSign)(msgHash, privateKey), signature = _a.signature, recovery = _a.recid;\n    var r = Buffer.from(signature.slice(0, 32));\n    var s = Buffer.from(signature.slice(32, 64));\n    if (!chainId || typeof chainId === 'number') {\n        // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n        if (chainId && !Number.isSafeInteger(chainId)) {\n            throw new Error('The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)');\n        }\n        var v_1 = chainId ? recovery + (chainId * 2 + 35) : recovery + 27;\n        return { r: r, s: s, v: v_1 };\n    }\n    var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n    var v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer);\n    return { r: r, s: s, v: v };\n}\nexports.ecsign = ecsign;\nfunction calculateSigRecovery(v, chainId) {\n    var vBN = (0, types_1.toType)(v, types_1.TypeOutput.BN);\n    if (!chainId) {\n        return vBN.subn(27);\n    }\n    var chainIdBN = (0, types_1.toType)(chainId, types_1.TypeOutput.BN);\n    return vBN.sub(chainIdBN.muln(2).addn(35));\n}\nfunction isValidSigRecovery(recovery) {\n    var rec = new externals_1.BN(recovery);\n    return rec.eqn(0) || rec.eqn(1);\n}\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nvar ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = (0, secp256k1_1.ecdsaRecover)(signature, recovery.toNumber(), msgHash);\n    return Buffer.from((0, secp256k1_1.publicKeyConvert)(senderPubKey, false).slice(1));\n};\nexports.ecrecover = ecrecover;\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nvar toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(s, 32), (0, bytes_1.toBuffer)(v)]));\n};\nexports.toRpcSig = toRpcSig;\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * @returns Signature\n */\nvar toCompactSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var vn = (0, types_1.toType)(v, types_1.TypeOutput.Number);\n    var ss = s;\n    if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n        ss = Buffer.from(s);\n        ss[0] |= 0x80;\n    }\n    return (0, bytes_1.bufferToHex)(Buffer.concat([(0, bytes_1.setLengthLeft)(r, 32), (0, bytes_1.setLengthLeft)(ss, 32)]));\n};\nexports.toCompactSig = toCompactSig;\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nvar fromRpcSig = function (sig) {\n    var buf = (0, bytes_1.toBuffer)(sig);\n    var r;\n    var s;\n    var v;\n    if (buf.length >= 65) {\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToInt)(buf.slice(64));\n    }\n    else if (buf.length === 64) {\n        // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n        r = buf.slice(0, 32);\n        s = buf.slice(32, 64);\n        v = (0, bytes_1.bufferToInt)(buf.slice(32, 33)) >> 7;\n        s[0] &= 0x7f;\n    }\n    else {\n        throw new Error('Invalid signature length');\n    }\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: r,\n        s: s,\n    };\n};\nexports.fromRpcSig = fromRpcSig;\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nvar isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new externals_1.BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new externals_1.BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new externals_1.BN(r);\n    var sBN = new externals_1.BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\nexports.isValidSignature = isValidSignature;\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nvar hashPersonalMessage = function (message) {\n    (0, helpers_1.assertIsBuffer)(message);\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\".concat(message.length), 'utf-8');\n    return (0, hash_1.keccak)(Buffer.concat([prefix, message]));\n};\nexports.hashPersonalMessage = hashPersonalMessage;\n//# sourceMappingURL=signature.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","calculateSigRecovery","v","chainId","vBN","types_1","toType","TypeOutput","BN","subn","chainIdBN","sub","muln","addn","isValidSigRecovery","recovery","rec","externals_1","eqn","Buffer","Object","defineProperty","value","hashPersonalMessage","isValidSignature","fromRpcSig","toCompactSig","toRpcSig","ecrecover","ecsign","secp256k1_1","bytes_1","hash_1","helpers_1","msgHash","privateKey","_a","ecdsaSign","signature","recid","r","from","slice","s","Number","isSafeInteger","Error","v_1","toArrayLike","concat","setLengthLeft","senderPubKey","ecdsaRecover","toNumber","publicKeyConvert","bufferToHex","toBuffer","vn","ss","sig","buf","length","bufferToInt","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","isZero","gt","cmp","message","assertIsBuffer","prefix","keccak"]
}
