shadow$provide.module$node_modules$$mui$base$node$InputUnstyled$useInput=function(global,require,module,exports){function _getRequireWildcardCache(nodeInterop$jscomp$0){if("function"!==typeof WeakMap)return null;var cacheBabelInterop=new WeakMap,cacheNodeInterop=new WeakMap;return(_getRequireWildcardCache=function(nodeInterop){return nodeInterop?cacheNodeInterop:cacheBabelInterop})(nodeInterop$jscomp$0)}global=require("module$node_modules$$babel$runtime$helpers$interopRequireDefault");Object.defineProperty(exports,
"__esModule",{value:!0});exports.default=function(props,inputRef){const {defaultValue,disabled:disabledProp=!1,error:errorProp=!1,onBlur,onChange,onFocus,required:requiredProp=!1,value:valueProp}=props,formControlContext=(0,_useFormControl.default)();let value,required,disabled,error;if(formControlContext){var _formControlContext$d,_formControlContext$r,_formControlContext$e;value=formControlContext.value;disabled=null!=(_formControlContext$d=formControlContext.disabled)?_formControlContext$d:!1;
required=null!=(_formControlContext$r=formControlContext.required)?_formControlContext$r:!1;error=null!=(_formControlContext$e=formControlContext.error)?_formControlContext$e:!1}else value=valueProp,disabled=disabledProp,required=requiredProp,error=errorProp;const {current:isControlled}=React.useRef(null!=value);_formControlContext$d=React.useCallback(instance=>{instance&&"INPUT"!==instance.nodeName&&!instance.focus&&console.error("MUI: You have provided a `components.Input` to the input component\nthat does not correctly handle the `ref` prop.\nMake sure the `ref` prop is called with a HTMLInputElement.")},
[]);const internalInputRef=React.useRef(null);inputRef=(0,_utils.unstable_useForkRef)(inputRef,_formControlContext$d);const handleInputRef=(0,_utils.unstable_useForkRef)(internalInputRef,inputRef),[focused,setFocused]=React.useState(!1);React.useEffect(()=>{!formControlContext&&disabled&&focused&&(setFocused(!1),null==onBlur?void 0:onBlur())},[formControlContext,disabled,focused,onBlur]);const handleFocus=otherHandlers=>event=>{var _otherHandlers$onFocu;if(null!=formControlContext&&formControlContext.disabled)event.stopPropagation();
else if(null==(_otherHandlers$onFocu=otherHandlers.onFocus)?void 0:_otherHandlers$onFocu.call(otherHandlers,event),formControlContext&&formControlContext.onFocus){var _formControlContext$o;null==formControlContext?void 0:null==(_formControlContext$o=formControlContext.onFocus)?void 0:_formControlContext$o.call(formControlContext)}else setFocused(!0)},handleBlur=otherHandlers=>event=>{var _otherHandlers$onBlur;null==(_otherHandlers$onBlur=otherHandlers.onBlur)?void 0:_otherHandlers$onBlur.call(otherHandlers,
event);if(formControlContext&&formControlContext.onBlur)formControlContext.onBlur();else setFocused(!1)},handleChange=otherHandlers=>(event,...args)=>{var _formControlContext$o2,_otherHandlers$onChan;if(!isControlled&&null==(event.target||internalInputRef.current))throw Error("MUI: Expected valid input target. Did you use a custom `components.Input` and forget to forward refs? See https://mui.com/r/input-component-ref-interface for more info.");null==formControlContext?void 0:null==(_formControlContext$o2=
formControlContext.onChange)?void 0:_formControlContext$o2.call(formControlContext,event);null==(_otherHandlers$onChan=otherHandlers.onChange)?void 0:_otherHandlers$onChan.call(otherHandlers,event,...args)},handleClick=otherHandlers=>event=>{var _otherHandlers$onClic;internalInputRef.current&&event.currentTarget===event.target&&internalInputRef.current.focus();null==(_otherHandlers$onClic=otherHandlers.onClick)?void 0:_otherHandlers$onClic.call(otherHandlers,event)};return{disabled,error,focused,
formControlContext,getInputProps:externalProps=>{const externalEventHandlers=(0,_extends2.default)({},{onBlur,onChange,onFocus},(0,_extractEventHandlers.default)(externalProps));externalProps=(0,_extends2.default)({},externalProps,externalEventHandlers,{onBlur:handleBlur(externalEventHandlers),onChange:handleChange(externalEventHandlers),onFocus:handleFocus(externalEventHandlers)});return(0,_extends2.default)({},externalProps,{"aria-invalid":error||void 0,defaultValue,ref:handleInputRef,value,required,
disabled})},getRootProps:externalProps=>{var propsEventHandlers=(0,_extractEventHandlers.default)(props,["onBlur","onChange","onFocus"]);propsEventHandlers=(0,_extends2.default)({},propsEventHandlers,(0,_extractEventHandlers.default)(externalProps));return(0,_extends2.default)({},externalProps,propsEventHandlers,{onClick:handleClick(propsEventHandlers)})},required,value}};var _extends2=global(require("module$node_modules$$babel$runtime$helpers$extends")),_utils=require("module$node_modules$$mui$utils$index"),
React=function(obj,nodeInterop){if(!nodeInterop&&obj&&obj.__esModule)return obj;if(null===obj||"object"!==typeof obj&&"function"!==typeof obj)return{default:obj};if((nodeInterop=_getRequireWildcardCache(nodeInterop))&&nodeInterop.has(obj))return nodeInterop.get(obj);var newObj={},hasPropertyDescriptor=Object.defineProperty&&Object.getOwnPropertyDescriptor,key;for(key in obj)if("default"!==key&&Object.prototype.hasOwnProperty.call(obj,key)){var desc=hasPropertyDescriptor?Object.getOwnPropertyDescriptor(obj,
key):null;desc&&(desc.get||desc.set)?Object.defineProperty(newObj,key,desc):newObj[key]=obj[key]}newObj.default=obj;nodeInterop&&nodeInterop.set(obj,newObj);return newObj}(require("module$node_modules$react$index")),_useFormControl=global(require("module$node_modules$$mui$base$node$FormControlUnstyled$useFormControl")),_extractEventHandlers=global(require("module$node_modules$$mui$base$node$utils$extractEventHandlers"))}
//# sourceMappingURL=module$node_modules$$mui$base$node$InputUnstyled$useInput.js.map
