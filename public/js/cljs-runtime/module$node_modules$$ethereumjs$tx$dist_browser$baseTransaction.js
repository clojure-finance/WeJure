shadow$provide.module$node_modules$$ethereumjs$tx$dist_browser$baseTransaction=function(global,require,module,exports){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);Object.defineProperty(o,k2,{enumerable:!0,get:function(){return m[k]}})}:function(o,m,k,k2){void 0===k2&&(k2=k);o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o["default"]=
v});global=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);__setModuleDefault(result,mod);return result};var __values=this&&this.__values||function(o){var s="function"===typeof Symbol&&Symbol.iterator,m=s&&o[s],i=0;if(m)return m.call(o);if(o&&"number"===typeof o.length)return{next:function(){o&&i>=o.length&&(o=void 0);return{value:o&&o[i++],
done:!o}}};throw new TypeError(s?"Object is not iterable.":"Symbol.iterator is not defined.");},__read=this&&this.__read||function(o,n){var m="function"===typeof Symbol&&o[Symbol.iterator];if(!m)return o;o=m.call(o);var r,ar=[];try{for(;(void 0===n||0<n--)&&!(r=o.next()).done;)ar.push(r.value)}catch(error){var e={error}}finally{try{r&&!r.done&&(m=o["return"])&&m.call(o)}finally{if(e)throw e.error;}}return ar};Object.defineProperty(exports,"__esModule",{value:!0});exports.BaseTransaction=void 0;var common_1=
global(require("module$node_modules$$ethereumjs$common$dist_browser$index")),ethereumjs_util_1=require("module$node_modules$ethereumjs_util$dist_browser$index"),types_1=require("module$node_modules$$ethereumjs$tx$dist_browser$types");require=function(){function BaseTransaction(txData){this.cache={hash:void 0,dataFee:void 0};this.activeCapabilities=[];this.DEFAULT_CHAIN=common_1.Chain.Mainnet;this.DEFAULT_HARDFORK=common_1.Hardfork.Istanbul;var nonce=txData.nonce,gasLimit=txData.gasLimit,to=txData.to,
value=txData.value,data=txData.data,v=txData.v,r=txData.r,s=txData.s;this._type=(new ethereumjs_util_1.BN((0,ethereumjs_util_1.toBuffer)(txData.type))).toNumber();txData=(0,ethereumjs_util_1.toBuffer)(""===to?"0x":to);v=(0,ethereumjs_util_1.toBuffer)(""===v?"0x":v);r=(0,ethereumjs_util_1.toBuffer)(""===r?"0x":r);s=(0,ethereumjs_util_1.toBuffer)(""===s?"0x":s);this.nonce=new ethereumjs_util_1.BN((0,ethereumjs_util_1.toBuffer)(""===nonce?"0x":nonce));this.gasLimit=new ethereumjs_util_1.BN((0,ethereumjs_util_1.toBuffer)(""===
gasLimit?"0x":gasLimit));this.to=0<txData.length?new ethereumjs_util_1.Address(txData):void 0;this.value=new ethereumjs_util_1.BN((0,ethereumjs_util_1.toBuffer)(""===value?"0x":value));this.data=(0,ethereumjs_util_1.toBuffer)(""===data?"0x":data);this.v=0<v.length?new ethereumjs_util_1.BN(v):void 0;this.r=0<r.length?new ethereumjs_util_1.BN(r):void 0;this.s=0<s.length?new ethereumjs_util_1.BN(s):void 0;this._validateCannotExceedMaxInteger({value:this.value,r:this.r,s:this.s});this._validateCannotExceedMaxInteger({gasLimit:this.gasLimit},
64);this._validateCannotExceedMaxInteger({nonce:this.nonce},64,!0)}Object.defineProperty(BaseTransaction.prototype,"transactionType",{get:function(){return this.type},enumerable:!1,configurable:!0});Object.defineProperty(BaseTransaction.prototype,"type",{get:function(){return this._type},enumerable:!1,configurable:!0});BaseTransaction.prototype.supports=function(capability){return this.activeCapabilities.includes(capability)};BaseTransaction.prototype.validate=function(stringError){void 0===stringError&&
(stringError=!1);var errors=[];this.getBaseFee().gt(this.gasLimit)&&errors.push("gasLimit is too low. given ".concat(this.gasLimit,", need at least ").concat(this.getBaseFee()));this.isSigned()&&!this.verifySignature()&&errors.push("Invalid Signature");return stringError?errors:0===errors.length};BaseTransaction.prototype.getBaseFee=function(){var fee=this.getDataFee().addn(this.common.param("gasPrices","tx"));this.common.gteHardfork("homestead")&&this.toCreationAddress()&&fee.iaddn(this.common.param("gasPrices",
"txCreation"));return fee};BaseTransaction.prototype.getDataFee=function(){for(var txDataZero=this.common.param("gasPrices","txDataZero"),txDataNonZero=this.common.param("gasPrices","txDataNonZero"),cost=0,i=0;i<this.data.length;i++)0===this.data[i]?cost+=txDataZero:cost+=txDataNonZero;return new ethereumjs_util_1.BN(cost)};BaseTransaction.prototype.toCreationAddress=function(){return void 0===this.to||0===this.to.buf.length};BaseTransaction.prototype.isSigned=function(){var v=this.v,r=this.r,s=this.s;
if(0===this.type){if(v&&r&&s)return!0}else if(void 0!==v&&r&&s)return!0;return!1};BaseTransaction.prototype.verifySignature=function(){try{var publicKey=this.getSenderPublicKey();return 0!==(0,ethereumjs_util_1.unpadBuffer)(publicKey).length}catch(e){return!1}};BaseTransaction.prototype.getSenderAddress=function(){return new ethereumjs_util_1.Address((0,ethereumjs_util_1.publicToAddress)(this.getSenderPublicKey()))};BaseTransaction.prototype.sign=function(privateKey){if(32!==privateKey.length){var msg=
this._errorMsg("Private key must be 32 bytes in length.");throw Error(msg);}msg=!1;0===this.type&&this.common.gteHardfork("spuriousDragon")&&!this.supports(types_1.Capability.EIP155ReplayProtection)&&(this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection),msg=!0);var msgHash=this.getMessageToSign(!0);privateKey=(0,ethereumjs_util_1.ecsign)(msgHash,privateKey);privateKey=this._processSignature(privateKey.v,privateKey.r,privateKey.s);msg&&(msg=this.activeCapabilities.indexOf(types_1.Capability.EIP155ReplayProtection),
-1<msg&&this.activeCapabilities.splice(msg,1));return privateKey};BaseTransaction.prototype._getCommon=function(common,chainId){var _a;if(chainId){chainId=new ethereumjs_util_1.BN((0,ethereumjs_util_1.toBuffer)(chainId));if(common){if(!common.chainIdBN().eq(chainId))throw common=this._errorMsg("The chain ID does not match the chain ID of Common"),Error(common);return common.copy()}return common_1.default.isSupportedChainId(chainId)?new common_1.default({chain:chainId,hardfork:this.DEFAULT_HARDFORK}):
common_1.default.forCustomChain(this.DEFAULT_CHAIN,{name:"custom-chain",networkId:chainId,chainId},this.DEFAULT_HARDFORK)}return null!==(_a=null===common||void 0===common?void 0:common.copy())&&void 0!==_a?_a:new common_1.default({chain:this.DEFAULT_CHAIN,hardfork:this.DEFAULT_HARDFORK})};BaseTransaction.prototype._validateCannotExceedMaxInteger=function(values,bits,cannotEqual){var _a;void 0===bits&&(bits=256);void 0===cannotEqual&&(cannotEqual=!1);try{for(var _b=__values(Object.entries(values)),
_c=_b.next();!_c.done;_c=_b.next()){var _d=__read(_c.value,2),key=_d[0],value=_d[1];switch(bits){case 64:if(cannotEqual){if(null===value||void 0===value?0:value.gte(ethereumjs_util_1.MAX_UINT64)){var msg=this._errorMsg("".concat(key," cannot equal or exceed MAX_UINT64 (2^64-1), given ").concat(value));throw Error(msg);}}else if(null===value||void 0===value?0:value.gt(ethereumjs_util_1.MAX_UINT64))throw msg=this._errorMsg("".concat(key," cannot exceed MAX_UINT64 (2^64-1), given ").concat(value)),Error(msg);
break;case 256:if(cannotEqual){if(null===value||void 0===value?0:value.gte(ethereumjs_util_1.MAX_INTEGER))throw msg=this._errorMsg("".concat(key," cannot equal or exceed MAX_INTEGER (2^256-1), given ").concat(value)),Error(msg);}else if(null===value||void 0===value?0:value.gt(ethereumjs_util_1.MAX_INTEGER))throw msg=this._errorMsg("".concat(key," cannot exceed MAX_INTEGER (2^256-1), given ").concat(value)),Error(msg);break;default:throw msg=this._errorMsg("unimplemented bits value"),Error(msg);}}}catch(e_1_1){var e_1=
{error:e_1_1}}finally{try{_c&&!_c.done&&(_a=_b.return)&&_a.call(_b)}finally{if(e_1)throw e_1.error;}}};BaseTransaction.prototype._getSharedErrorPostfix=function(){var hash="";try{hash=this.isSigned()?(0,ethereumjs_util_1.bufferToHex)(this.hash()):"not available (unsigned)"}catch(e){hash="error"}var isSigned="";try{isSigned=this.isSigned().toString()}catch(e){hash="error"}var hf="";try{hf=this.common.hardfork()}catch(e){hf="error"}hash="tx type\x3d".concat(this.type," hash\x3d").concat(hash," nonce\x3d").concat(this.nonce,
" value\x3d").concat(this.value," ");return hash+="signed\x3d".concat(isSigned," hf\x3d").concat(hf)};return BaseTransaction}();exports.BaseTransaction=require}
//# sourceMappingURL=module$node_modules$$ethereumjs$tx$dist_browser$baseTransaction.js.map
