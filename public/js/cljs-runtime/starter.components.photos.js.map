{"version":3,"sources":["starter/components/photos.cljs"],"mappings":";AAQA,oCAAA,pCAAKA;AAEL,mCAAA,2CAAAC,9EAAMI;AAAN,AAAA,IAAAH,aAAAD;IAAAC,iBAAA,AAAAC,4BAAAD;uBAAA,AAAAE,4CAAAF,eAAA,9EAAsBI;SAAtB,AAAAF,4CAAAF,eAAA,hEAAuCK;AAAvC,AACI,IAAMC,QAAM,gDAAA,hDAACC;IAAWC,UAAQ,gDAAA,hDAACD;AAAjC,AACI,AAEQ,AAAG,AAAO,AAAGH,8BAAgCC,SACzC,WAAKI,MAAMC,xDAWf;AAXI,AACI,AACI,yEAAA,zEAACC,mDAAML,MAAMM,4EAAe,4CAAK,AAAOF;;AACxC,yEAAA,zEAACC,mDAAML,MAAMM,oFAAmB,4CAAK,AAAOF;;AAC5C,yGAAA,zGAACG,kHAAiB,4CAAK,AAAOH;;AAC9B,yEAAA,zEAACC,mDAAML,MAAMM,qEAAY,4CAAK,AAAOF;;AACrC,yGAAA,zGAACG;;AACD,OAAGC,YAAeJ;SAK1B;AAAA,AACI,OAAG,AAAO,AAAGN,kCAAoC,AAAA,mFAAA,AAAAW,gBAAQT,cACrD,WAAKG,MAAMC;AAAX,AACI,AACI,2EAAA,3EAACC,mDAAMH,QAAQI,qEAAY,4CAAK,AAAOF;;AACvC,2EAAA,3EAACC,mDAAMH,QAAQI,2EAAe,4CAAK,AAAOF;;AAC1C,yGAAA,zGAACG;;AACD,OAAGC,YAAeJ;;;;AAO1C;AAAA,AACI,AACA,CAAM,AAAIM,cAAiB,qBAAA,AAAAD,rBAACE,qCAASX;;AADrC,uHAAA,2CAAA,iDAAA,wCAAA,mEAAA,4EAAA,uDAAA,0DAAA,sEAAA,QAAA,wEAAA,yDAAA,2DAAA,SAAA,QAAA,QAAA,OAAA,OAAA,2CAAA,yDAAA,cAAA,SAAA,QAAA,mBAAA,gHAAA,2CAAA,iDAAA,2CAAA,0DAAA,OAAA,mEAAA,SAAA,uDAAA,OAAA,MAAA,2CAAA,yDAAA,gCAAA,mFAAA,mDAAA,2CAAA,iQAAA,uDAAA,KAAA,yDAAA,KAAA,uDAAA,2CAAA,sEAAA,8BAAA,8HAAA,2CAAA,2DAAA,KAAA,+DAAA,MAAA,iDAAA,2CAAA,gEAAA,oJAAA,gHAAA,2CAAA,iDAAA,2CAAA,uDAAA,OAAA,4EAAA,UAAA,yDAAA,sBAAA,mFAAA,mDAAA,2CAAA,gQAAA,uDAAA,2CAAA,uDAAA,OAAA,yDAAA,OAAA,iEAAA,0CAAA,8HAAA,2CAAA,2DAAA,KAAA,+DAAA,MAAA,iDAAA,2CAAA,gEAAA,OAAA,mEAAA,9+IAECY,27BAUIA,8tBAWgB,CAAKpB,8EAAQ,AAAA,yFAAA,AAAAiB,gBAAWP,waAMpCW,8YAQG,AAAA,mFAAA,AAAAJ,gBAAQP,6GAGfU,4mBAUgB,CAAKpB,8EAAQ,AAAA,0FAAA,AAAAiB,gBAAWT,ibASxCa,4dASG,AAAA,kGAAA,AAAAJ,gBAAeT","names":["starter.components.photos/ipfsUrl","p__22108","map__22109","cljs.core/--destructure-map","cljs.core.get","starter.components.photos/photos","contractInstance","id","photo","reagent.core.atom","creator","error","result","cljs.core.swap_BANG_","cljs.core/assoc","cljs.core.println","js/console","cljs.core/deref","js/window","cljs.core/clj->js","reagent-mui.material.box/box","reagent-mui.material.typography/typography"],"sourcesContent":["(ns starter.components.photos\r\n    (:require\r\n        [reagent.core :as r]\r\n        [reagent-mui.material.box :refer [box]]\r\n        [reagent-mui.material.typography :refer [typography]]\r\n    )\r\n)\r\n\r\n(def ipfsUrl \"https://ipfs.infura.io/ipfs/\")\r\n\r\n(defn photos [{:keys [contractInstance id]}]\r\n    (let [photo (r/atom {}) creator (r/atom {})]\r\n        (do\r\n            (->\r\n                (. ^js (. (. contractInstance -methods) pics id) call \r\n                    (fn [error result] \r\n                        (do \r\n                            (swap! photo assoc :picHash (str ^js (. result -picHash)))\r\n                            (swap! photo assoc :description (str ^js (. result -description)))\r\n                            (println \"user: \" (str ^js (. result -user)))\r\n                            (swap! photo assoc :user (str ^js (. result -user)))\r\n                            (println \"photo\")\r\n                            (. js/console log result)\r\n                        )\r\n                    )\r\n                )\r\n                (.then \r\n                    (fn [] \r\n                        (. ^js (. (. contractInstance -methods) profiles (:user @photo)) call\r\n                            (fn [error result] \r\n                                (do \r\n                                    (swap! creator assoc :name (str ^js (. result -name)))\r\n                                    (swap! creator assoc :profile (str ^js (. result -picHash)))\r\n                                    (println \"creator\")\r\n                                    (. js/console log result)\r\n                                )\r\n                            )\r\n                        )\r\n                    )\r\n                )\r\n            )\r\n            (fn []\r\n                (do\r\n                (set! (.. js/window -tamp) (clj->js @photo))\r\n                [box\r\n                    {:sx {:width \"600px\"\r\n                        :height \"800px\" \r\n                        :background-color \"white\" \r\n                        :border-radius \"25px\"\r\n                        :display \"flex\"\r\n                        :flex-direction \"column\"\r\n                        :align-items \"center\"\r\n                        :margin \"20px 0\"\r\n                        \"&>div\" {:margin \"2px\"}}}\r\n                    [box\r\n                        {\r\n                            :sx {\r\n                                :display \"flex\"\r\n                                :align-items \"center\"\r\n                                :width \"100%\"\r\n                                \"&>*\" {:margin \"0 5px\"}\r\n                            }\r\n                        }\r\n                        [:img\r\n                            {\r\n                                :src (str ipfsUrl (:profile @creator))\r\n                                :width 50\r\n                                :height 50\r\n                                :style {:border-radius \"50%\"}\r\n                            }\r\n                        ]\r\n                        [typography\r\n                            {:variant \"h6\"\r\n                            :component \"div\"\r\n                            :sx \r\n                                {\r\n                                    :font-size \"17px\"\r\n                                }\r\n                            }\r\n                            (:name @creator)\r\n                        ]\r\n                    ]\r\n                    [box\r\n                        {:sx \r\n                            {\r\n                                :width \"100%\"\r\n                                :background-color \"#404040\"\r\n                                :height \"90%\"\r\n                            }\r\n                        }\r\n                        [:img\r\n                            {\r\n                                :src (str ipfsUrl (:picHash @photo))\r\n                                :style {\r\n                                    :width \"100%\"\r\n                                    :height \"100%\"\r\n                                    :object-fit \"contain\"\r\n                                }\r\n                            }\r\n                        ]\r\n                    ]\r\n                    [typography\r\n                        {:variant \"h6\"\r\n                        :component \"div\"\r\n                        :sx \r\n                            {\r\n                                :font-size \"17px\"\r\n                                :white-space \"pre-line\"\r\n                            }\r\n                        }\r\n                        (:description @photo)\r\n                    ]\r\n                ]\r\n                )\r\n            )\r\n        )\r\n    )\r\n)"]}