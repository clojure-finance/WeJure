{
"version":3,
"file":"module$node_modules$class_is$index.js",
"lineCount":3,
"mappings":"AAAAA,cAAA,CAAA,kCAAA,CAAuD,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAiE/FD,MAAOC,CAAAA,OAAP,CA9DAC,QAAe,CAACC,KAAD,CAAQ,CAAEC,SAAF,CAAaC,UAAb,CAAR,CAAmC,CAC9C,MAAMC,OAASC,MAAOC,CAAAA,GAAP,CAAWH,UAAX,CAETI,MAAAA,CAAiB,CAOnB,CAACL,SAAD,EAAa,aAAcD,MAAd,CACTO,WAAW,CAAC,GAAGC,IAAJ,CAAU,CACjB,KAAA,CAAM,GAAGA,IAAT,CACAC,OAAOC,CAAAA,cAAP,CAAsB,IAAtB,CAA4BP,MAA5B,CAAoC,CAAEQ,MAAO,CAAA,CAAT,CAApC,CAFiB,CAKrB,KAAKP,MAAOQ,CAAAA,WAAZ,CAA2B,EAAA,CACvB,MAAOX,UADgB,CANlB,CAPM,CAAA,CAiBrBA,SAjBqB,CAmBvBK,MAAA,CAAgB,KAAIL,SAAJ,EAAhB,CAAA,CAAoCY,GAAD,EAAS,EAAGA,CAAAA,GAAH,EAAU,CAAAA,GAAA,CAAIV,MAAJ,CAAV,CAE5C,OAAOG,MAxBuC,CA+DlDT,OAAOC,CAAAA,OAAQgB,CAAAA,KAAf,CApCAC,QAAoB,CAACf,KAAD,CAAQ,CAAEC,SAAF,CAAaC,UAAb,CAAyBc,UAAzB,CAAR,CAA+C,CAC/D,MAAMb;AAASC,MAAOC,CAAAA,GAAP,CAAWH,UAAX,CAAf,CAGMI,eAAiB,CACnB,CAACL,SAAD,EAAa,QAAS,CAAC,GAAGO,IAAJ,CAAU,CAC5B,GAAIQ,UAAJ,EAAkB,EAAE,IAAF,WAAkBV,eAAlB,CAAlB,CACI,MAAO,KAAIA,cAAJ,CAAmB,GAAGE,IAAtB,CAKX,EAFMS,IAEN,CAFcjB,KAAMkB,CAAAA,IAAN,CAAW,IAAX,CAAiB,GAAGV,IAApB,CAEd,EAF2C,IAE3C,GAAa,CAACS,IAAA,CAAMd,MAAN,CAAd,EACIM,MAAOC,CAAAA,cAAP,CAAsBO,IAAtB,CAA6Bd,MAA7B,CAAqC,CAAEQ,MAAO,CAAA,CAAT,CAArC,CAGJ,OAAOM,KAXqB,CADb,CAAA,CAcrBhB,SAdqB,CAiBvBK,eAAea,CAAAA,SAAf,CAA2BV,MAAOW,CAAAA,MAAP,CAAcpB,KAAMmB,CAAAA,SAApB,CAC3Bb,eAAea,CAAAA,SAAUZ,CAAAA,WAAzB,CAAuCD,cAEvCG,OAAOC,CAAAA,cAAP,CAAsBJ,cAAea,CAAAA,SAArC,CAAgDf,MAAOQ,CAAAA,WAAvD,CAAoE,CAChES,GAAG,EAAG,CACF,MAAOpB,UADL,CAD0D,CAApE,CAMAK,eAAA,CAAgB,KAAIL,SAAJ,EAAhB,CAAA;AAAoCY,GAAD,EAAS,EAAGA,CAAAA,GAAH,EAAU,CAAAA,GAAA,CAAIV,MAAJ,CAAV,CAE5C,OAAOG,eAhCwD,CA9B4B;",
"sources":["node_modules/class-is/index.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$class_is$index\"] = function(global,require,module,exports) {\n'use strict';\n\nfunction withIs(Class, { className, symbolName }) {\n    const symbol = Symbol.for(symbolName);\n\n    const ClassIsWrapper = {\n        // The code below assigns the class wrapper to an object to trick\n        // JavaScript engines to show the name of the extended class when\n        // logging an instances.\n        // We are assigning an anonymous class (class wrapper) to the object\n        // with key `className` to keep the correct name.\n        // If this is not supported it falls back to logging `ClassIsWrapper`.\n        [className]: class extends Class {\n            constructor(...args) {\n                super(...args);\n                Object.defineProperty(this, symbol, { value: true });\n            }\n\n            get [Symbol.toStringTag]() {\n                return className;\n            }\n        },\n    }[className];\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nfunction withIsProto(Class, { className, symbolName, withoutNew }) {\n    const symbol = Symbol.for(symbolName);\n\n    /* eslint-disable object-shorthand */\n    const ClassIsWrapper = {\n        [className]: function (...args) {\n            if (withoutNew && !(this instanceof ClassIsWrapper)) {\n                return new ClassIsWrapper(...args);\n            }\n\n            const _this = Class.call(this, ...args) || this;\n\n            if (_this && !_this[symbol]) {\n                Object.defineProperty(_this, symbol, { value: true });\n            }\n\n            return _this;\n        },\n    }[className];\n    /* eslint-enable object-shorthand */\n\n    ClassIsWrapper.prototype = Object.create(Class.prototype);\n    ClassIsWrapper.prototype.constructor = ClassIsWrapper;\n\n    Object.defineProperty(ClassIsWrapper.prototype, Symbol.toStringTag, {\n        get() {\n            return className;\n        },\n    });\n\n    ClassIsWrapper[`is${className}`] = (obj) => !!(obj && obj[symbol]);\n\n    return ClassIsWrapper;\n}\n\nmodule.exports = withIs;\nmodule.exports.proto = withIsProto;\n\n};"],
"names":["shadow$provide","global","require","module","exports","withIs","Class","className","symbolName","symbol","Symbol","for","ClassIsWrapper","constructor","args","Object","defineProperty","value","toStringTag","obj","proto","withIsProto","withoutNew","_this","call","prototype","create","get"]
}
