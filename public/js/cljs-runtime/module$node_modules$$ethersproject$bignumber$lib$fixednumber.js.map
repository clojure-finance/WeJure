{
"version":3,
"file":"module$node_modules$$ethersproject$bignumber$lib$fixednumber.js",
"lineCount":19,
"mappings":"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",
"sources":["node_modules/@ethersproject/bignumber/lib/fixednumber.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethersproject$bignumber$lib$fixednumber\"] = function(global,require,module,exports) {\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FixedNumber = exports.FixedFormat = exports.parseFixed = exports.formatFixed = void 0;\nvar bytes_1 = require(\"@ethersproject/bytes\");\nvar logger_1 = require(\"@ethersproject/logger\");\nvar _version_1 = require(\"./_version\");\nvar logger = new logger_1.Logger(_version_1.version);\nvar bignumber_1 = require(\"./bignumber\");\nvar _constructorGuard = {};\nvar Zero = bignumber_1.BigNumber.from(0);\nvar NegativeOne = bignumber_1.BigNumber.from(-1);\nfunction throwFault(message, fault, operation, value) {\n    var params = { fault: fault, operation: operation };\n    if (value !== undefined) {\n        params.value = value;\n    }\n    return logger.throwError(message, logger_1.Logger.errors.NUMERIC_FAULT, params);\n}\n// Constant to pull zeros from for multipliers\nvar zeros = \"0\";\nwhile (zeros.length < 256) {\n    zeros += zeros;\n}\n// Returns a string \"1\" followed by decimal \"0\"s\nfunction getMultiplier(decimals) {\n    if (typeof (decimals) !== \"number\") {\n        try {\n            decimals = bignumber_1.BigNumber.from(decimals).toNumber();\n        }\n        catch (e) { }\n    }\n    if (typeof (decimals) === \"number\" && decimals >= 0 && decimals <= 256 && !(decimals % 1)) {\n        return (\"1\" + zeros.substring(0, decimals));\n    }\n    return logger.throwArgumentError(\"invalid decimal size\", \"decimals\", decimals);\n}\nfunction formatFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    var multiplier = getMultiplier(decimals);\n    // Make sure wei is a big number (convert as necessary)\n    value = bignumber_1.BigNumber.from(value);\n    var negative = value.lt(Zero);\n    if (negative) {\n        value = value.mul(NegativeOne);\n    }\n    var fraction = value.mod(multiplier).toString();\n    while (fraction.length < multiplier.length - 1) {\n        fraction = \"0\" + fraction;\n    }\n    // Strip training 0\n    fraction = fraction.match(/^([0-9]*[1-9]|0)(0*)/)[1];\n    var whole = value.div(multiplier).toString();\n    if (multiplier.length === 1) {\n        value = whole;\n    }\n    else {\n        value = whole + \".\" + fraction;\n    }\n    if (negative) {\n        value = \"-\" + value;\n    }\n    return value;\n}\nexports.formatFixed = formatFixed;\nfunction parseFixed(value, decimals) {\n    if (decimals == null) {\n        decimals = 0;\n    }\n    var multiplier = getMultiplier(decimals);\n    if (typeof (value) !== \"string\" || !value.match(/^-?[0-9.]+$/)) {\n        logger.throwArgumentError(\"invalid decimal value\", \"value\", value);\n    }\n    // Is it negative?\n    var negative = (value.substring(0, 1) === \"-\");\n    if (negative) {\n        value = value.substring(1);\n    }\n    if (value === \".\") {\n        logger.throwArgumentError(\"missing value\", \"value\", value);\n    }\n    // Split it into a whole and fractional part\n    var comps = value.split(\".\");\n    if (comps.length > 2) {\n        logger.throwArgumentError(\"too many decimal points\", \"value\", value);\n    }\n    var whole = comps[0], fraction = comps[1];\n    if (!whole) {\n        whole = \"0\";\n    }\n    if (!fraction) {\n        fraction = \"0\";\n    }\n    // Trim trailing zeros\n    while (fraction[fraction.length - 1] === \"0\") {\n        fraction = fraction.substring(0, fraction.length - 1);\n    }\n    // Check the fraction doesn't exceed our decimals size\n    if (fraction.length > multiplier.length - 1) {\n        throwFault(\"fractional component exceeds decimals\", \"underflow\", \"parseFixed\");\n    }\n    // If decimals is 0, we have an empty string for fraction\n    if (fraction === \"\") {\n        fraction = \"0\";\n    }\n    // Fully pad the string with zeros to get to wei\n    while (fraction.length < multiplier.length - 1) {\n        fraction += \"0\";\n    }\n    var wholeValue = bignumber_1.BigNumber.from(whole);\n    var fractionValue = bignumber_1.BigNumber.from(fraction);\n    var wei = (wholeValue.mul(multiplier)).add(fractionValue);\n    if (negative) {\n        wei = wei.mul(NegativeOne);\n    }\n    return wei;\n}\nexports.parseFixed = parseFixed;\nvar FixedFormat = /** @class */ (function () {\n    function FixedFormat(constructorGuard, signed, width, decimals) {\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedFormat constructor; use FixedFormat.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.signed = signed;\n        this.width = width;\n        this.decimals = decimals;\n        this.name = (signed ? \"\" : \"u\") + \"fixed\" + String(width) + \"x\" + String(decimals);\n        this._multiplier = getMultiplier(decimals);\n        Object.freeze(this);\n    }\n    FixedFormat.from = function (value) {\n        if (value instanceof FixedFormat) {\n            return value;\n        }\n        if (typeof (value) === \"number\") {\n            value = \"fixed128x\" + value;\n        }\n        var signed = true;\n        var width = 128;\n        var decimals = 18;\n        if (typeof (value) === \"string\") {\n            if (value === \"fixed\") {\n                // defaults...\n            }\n            else if (value === \"ufixed\") {\n                signed = false;\n            }\n            else {\n                var match = value.match(/^(u?)fixed([0-9]+)x([0-9]+)$/);\n                if (!match) {\n                    logger.throwArgumentError(\"invalid fixed format\", \"format\", value);\n                }\n                signed = (match[1] !== \"u\");\n                width = parseInt(match[2]);\n                decimals = parseInt(match[3]);\n            }\n        }\n        else if (value) {\n            var check = function (key, type, defaultValue) {\n                if (value[key] == null) {\n                    return defaultValue;\n                }\n                if (typeof (value[key]) !== type) {\n                    logger.throwArgumentError(\"invalid fixed format (\" + key + \" not \" + type + \")\", \"format.\" + key, value[key]);\n                }\n                return value[key];\n            };\n            signed = check(\"signed\", \"boolean\", signed);\n            width = check(\"width\", \"number\", width);\n            decimals = check(\"decimals\", \"number\", decimals);\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid fixed format width (not byte aligned)\", \"format.width\", width);\n        }\n        if (decimals > 80) {\n            logger.throwArgumentError(\"invalid fixed format (decimals too large)\", \"format.decimals\", decimals);\n        }\n        return new FixedFormat(_constructorGuard, signed, width, decimals);\n    };\n    return FixedFormat;\n}());\nexports.FixedFormat = FixedFormat;\nvar FixedNumber = /** @class */ (function () {\n    function FixedNumber(constructorGuard, hex, value, format) {\n        var _newTarget = this.constructor;\n        logger.checkNew(_newTarget, FixedNumber);\n        if (constructorGuard !== _constructorGuard) {\n            logger.throwError(\"cannot use FixedNumber constructor; use FixedNumber.from\", logger_1.Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"new FixedFormat\"\n            });\n        }\n        this.format = format;\n        this._hex = hex;\n        this._value = value;\n        this._isFixedNumber = true;\n        Object.freeze(this);\n    }\n    FixedNumber.prototype._checkFormat = function (other) {\n        if (this.format.name !== other.format.name) {\n            logger.throwArgumentError(\"incompatible format; use fixedNumber.toFormat\", \"other\", other);\n        }\n    };\n    FixedNumber.prototype.addUnsafe = function (other) {\n        this._checkFormat(other);\n        var a = parseFixed(this._value, this.format.decimals);\n        var b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.add(b), this.format.decimals, this.format);\n    };\n    FixedNumber.prototype.subUnsafe = function (other) {\n        this._checkFormat(other);\n        var a = parseFixed(this._value, this.format.decimals);\n        var b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.sub(b), this.format.decimals, this.format);\n    };\n    FixedNumber.prototype.mulUnsafe = function (other) {\n        this._checkFormat(other);\n        var a = parseFixed(this._value, this.format.decimals);\n        var b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(b).div(this.format._multiplier), this.format.decimals, this.format);\n    };\n    FixedNumber.prototype.divUnsafe = function (other) {\n        this._checkFormat(other);\n        var a = parseFixed(this._value, this.format.decimals);\n        var b = parseFixed(other._value, other.format.decimals);\n        return FixedNumber.fromValue(a.mul(this.format._multiplier).div(b), this.format.decimals, this.format);\n    };\n    FixedNumber.prototype.floor = function () {\n        var comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        var result = FixedNumber.from(comps[0], this.format);\n        var hasFraction = !comps[1].match(/^(0*)$/);\n        if (this.isNegative() && hasFraction) {\n            result = result.subUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    };\n    FixedNumber.prototype.ceiling = function () {\n        var comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        var result = FixedNumber.from(comps[0], this.format);\n        var hasFraction = !comps[1].match(/^(0*)$/);\n        if (!this.isNegative() && hasFraction) {\n            result = result.addUnsafe(ONE.toFormat(result.format));\n        }\n        return result;\n    };\n    // @TODO: Support other rounding algorithms\n    FixedNumber.prototype.round = function (decimals) {\n        if (decimals == null) {\n            decimals = 0;\n        }\n        // If we are already in range, we're done\n        var comps = this.toString().split(\".\");\n        if (comps.length === 1) {\n            comps.push(\"0\");\n        }\n        if (decimals < 0 || decimals > 80 || (decimals % 1)) {\n            logger.throwArgumentError(\"invalid decimal count\", \"decimals\", decimals);\n        }\n        if (comps[1].length <= decimals) {\n            return this;\n        }\n        var factor = FixedNumber.from(\"1\" + zeros.substring(0, decimals), this.format);\n        var bump = BUMP.toFormat(this.format);\n        return this.mulUnsafe(factor).addUnsafe(bump).floor().divUnsafe(factor);\n    };\n    FixedNumber.prototype.isZero = function () {\n        return (this._value === \"0.0\" || this._value === \"0\");\n    };\n    FixedNumber.prototype.isNegative = function () {\n        return (this._value[0] === \"-\");\n    };\n    FixedNumber.prototype.toString = function () { return this._value; };\n    FixedNumber.prototype.toHexString = function (width) {\n        if (width == null) {\n            return this._hex;\n        }\n        if (width % 8) {\n            logger.throwArgumentError(\"invalid byte width\", \"width\", width);\n        }\n        var hex = bignumber_1.BigNumber.from(this._hex).fromTwos(this.format.width).toTwos(width).toHexString();\n        return (0, bytes_1.hexZeroPad)(hex, width / 8);\n    };\n    FixedNumber.prototype.toUnsafeFloat = function () { return parseFloat(this.toString()); };\n    FixedNumber.prototype.toFormat = function (format) {\n        return FixedNumber.fromString(this._value, format);\n    };\n    FixedNumber.fromValue = function (value, decimals, format) {\n        // If decimals looks more like a format, and there is no format, shift the parameters\n        if (format == null && decimals != null && !(0, bignumber_1.isBigNumberish)(decimals)) {\n            format = decimals;\n            decimals = null;\n        }\n        if (decimals == null) {\n            decimals = 0;\n        }\n        if (format == null) {\n            format = \"fixed\";\n        }\n        return FixedNumber.fromString(formatFixed(value, decimals), FixedFormat.from(format));\n    };\n    FixedNumber.fromString = function (value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        var fixedFormat = FixedFormat.from(format);\n        var numeric = parseFixed(value, fixedFormat.decimals);\n        if (!fixedFormat.signed && numeric.lt(Zero)) {\n            throwFault(\"unsigned value cannot be negative\", \"overflow\", \"value\", value);\n        }\n        var hex = null;\n        if (fixedFormat.signed) {\n            hex = numeric.toTwos(fixedFormat.width).toHexString();\n        }\n        else {\n            hex = numeric.toHexString();\n            hex = (0, bytes_1.hexZeroPad)(hex, fixedFormat.width / 8);\n        }\n        var decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    };\n    FixedNumber.fromBytes = function (value, format) {\n        if (format == null) {\n            format = \"fixed\";\n        }\n        var fixedFormat = FixedFormat.from(format);\n        if ((0, bytes_1.arrayify)(value).length > fixedFormat.width / 8) {\n            throw new Error(\"overflow\");\n        }\n        var numeric = bignumber_1.BigNumber.from(value);\n        if (fixedFormat.signed) {\n            numeric = numeric.fromTwos(fixedFormat.width);\n        }\n        var hex = numeric.toTwos((fixedFormat.signed ? 0 : 1) + fixedFormat.width).toHexString();\n        var decimal = formatFixed(numeric, fixedFormat.decimals);\n        return new FixedNumber(_constructorGuard, hex, decimal, fixedFormat);\n    };\n    FixedNumber.from = function (value, format) {\n        if (typeof (value) === \"string\") {\n            return FixedNumber.fromString(value, format);\n        }\n        if ((0, bytes_1.isBytes)(value)) {\n            return FixedNumber.fromBytes(value, format);\n        }\n        try {\n            return FixedNumber.fromValue(value, 0, format);\n        }\n        catch (error) {\n            // Allow NUMERIC_FAULT to bubble up\n            if (error.code !== logger_1.Logger.errors.INVALID_ARGUMENT) {\n                throw error;\n            }\n        }\n        return logger.throwArgumentError(\"invalid FixedNumber value\", \"value\", value);\n    };\n    FixedNumber.isFixedNumber = function (value) {\n        return !!(value && value._isFixedNumber);\n    };\n    return FixedNumber;\n}());\nexports.FixedNumber = FixedNumber;\nvar ONE = FixedNumber.from(1);\nvar BUMP = FixedNumber.from(\"0.5\");\n//# sourceMappingURL=fixednumber.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","throwFault","message","fault","operation","value","params","undefined","logger","throwError","logger_1","Logger","errors","NUMERIC_FAULT","getMultiplier","decimals","bignumber_1","BigNumber","from","toNumber","e","zeros","substring","throwArgumentError","formatFixed","multiplier","negative","lt","Zero","mul","NegativeOne","fraction","mod","toString","length","match","whole","div","parseFixed","comps","split","wholeValue","fractionValue","wei","add","Object","defineProperty","FixedNumber","FixedFormat","bytes_1","_version_1","version","_constructorGuard","constructorGuard","signed","width","UNSUPPORTED_OPERATION","name","String","_multiplier","freeze","FixedFormat.from","parseInt","check","key","type","defaultValue","hex","format","checkNew","constructor","_hex","_value","_isFixedNumber","prototype","_checkFormat","FixedNumber.prototype._checkFormat","other","addUnsafe","FixedNumber.prototype.addUnsafe","a","b","fromValue","subUnsafe","FixedNumber.prototype.subUnsafe","sub","mulUnsafe","FixedNumber.prototype.mulUnsafe","divUnsafe","FixedNumber.prototype.divUnsafe","floor","FixedNumber.prototype.floor","push","result","hasFraction","isNegative","ONE","toFormat","ceiling","FixedNumber.prototype.ceiling","round","FixedNumber.prototype.round","factor","bump","BUMP","isZero","FixedNumber.prototype.isZero","FixedNumber.prototype.isNegative","FixedNumber.prototype.toString","toHexString","FixedNumber.prototype.toHexString","fromTwos","toTwos","hexZeroPad","toUnsafeFloat","FixedNumber.prototype.toUnsafeFloat","parseFloat","FixedNumber.prototype.toFormat","fromString","FixedNumber.fromValue","isBigNumberish","FixedNumber.fromString","fixedFormat","numeric","decimal","fromBytes","FixedNumber.fromBytes","arrayify","Error","FixedNumber.from","isBytes","error","code","INVALID_ARGUMENT","isFixedNumber","FixedNumber.isFixedNumber"]
}
