shadow$provide.module$node_modules$multibase$src$base64=function(global,require,module,exports){const {Buffer}=require("module$node_modules$buffer$index");module.exports=function(alphabet){const padding=-1<alphabet.indexOf("\x3d"),url=-1<alphabet.indexOf("-")&&-1<alphabet.indexOf("_");return{encode(input){input="string"===typeof input?Buffer.from(input).toString("base64"):input.toString("base64");url&&(input=input.replace(/\+/g,"-").replace(/\//g,"_"));const pad=input.indexOf("\x3d");0<pad&&!padding&&
(input=input.substring(0,pad));return input},decode(input){for(const char of input)if(0>alphabet.indexOf(char))throw Error("invalid base64 character");return Buffer.from(input,"base64")}}}}
//# sourceMappingURL=module$node_modules$multibase$src$base64.js.map
