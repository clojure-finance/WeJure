shadow$provide.module$node_modules$web3_core_requestmanager$lib$batch=function(global,require,module,exports){var Jsonrpc=require("module$node_modules$web3_core_requestmanager$lib$jsonrpc"),errors=require("module$node_modules$web3_core_helpers$lib$index").errors;global=function(requestManager){this.requestManager=requestManager;this.requests=[]};global.prototype.add=function(request){this.requests.push(request)};global.prototype.execute=function(){var requests=this.requests,sortResponses=this._sortResponses.bind(this);
this.requestManager.sendBatch(requests,function(err$jscomp$0,results){results=sortResponses(results);requests.map(function(request,index){return results[index]||{}}).forEach(function(result,index){if(requests[index].callback){if(result&&result.error)return requests[index].callback(errors.ErrorResponse(result));if(!Jsonrpc.isValidResponse(result))return requests[index].callback(errors.InvalidResponse(result));try{requests[index].callback(null,requests[index].format?requests[index].format(result.result):
result.result)}catch(err){requests[index].callback(err)}}})})};global.prototype._sortResponses=function(responses){return(responses||[]).sort((a,b)=>a.id-b.id)};module.exports=global}
//# sourceMappingURL=module$node_modules$web3_core_requestmanager$lib$batch.js.map
