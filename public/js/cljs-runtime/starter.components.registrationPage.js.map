{"version":3,"sources":["starter/components/registrationPage.cljs"],"mappings":"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","names":["starter.components.registrationPage/emptyField","field","cljs.core._EQ_","cljs.core/deref","cljs.core/count","starter.components.registrationPage/emptyPhoto","photo","starter.components.registrationPage/is-pwd-matched","password","pwdConfirm","starter.components.registrationPage/step-ref","cljs.core.atom","starter.components.registrationPage/loading-ref","starter.components.registrationPage/toLoginPage","cljs.core/reset!","starter.components.registrationPage/stopLoading","starter.components.registrationPage/submitProfile","name","details","loading","step","cljs.core.println","cljs.core.swap_BANG_","cljs.core/assoc","cljs_ipfs_api.files.add","err","files","hash","js/JSON","js/module$starter$js$accSystem.register","p__12092","map__12093","cljs.core/--destructure-map","cljs.core.get","starter.components.registrationPage/registrationPage","reagent.core.atom","profilePic","cljs_ipfs_api.core.init_ipfs","p1__12091#","reagent-mui.material.box/box","reagent-mui.material.typography/typography","reagent-mui.material.text-field/text-field","e","uploaded","reagent-mui.material.icon-button/icon-button","reagent-mui.icons.add-a-photo-sharp/add-a-photo-sharp","reagent-mui.material.button/button","or__5045__auto__","reagent-mui.material.circular-progress/circular-progress","cljs.core/not"],"sourcesContent":["(ns starter.components.registrationPage\r\n    (:require\r\n      [reagent.core :as r]\r\n      [reagent-mui.material.box :refer [box]]\r\n      [reagent-mui.material.button :refer [button]]\r\n      [reagent-mui.material.typography :refer [typography]]\r\n      [reagent-mui.material.text-field :refer [text-field]]\r\n      [reagent-mui.material.circular-progress :refer [circular-progress]]\r\n      [reagent-mui.material.icon-button :refer [icon-button]]\r\n      [reagent-mui.icons.add-a-photo-sharp :refer [add-a-photo-sharp]]\r\n      [\"../js/accSystem\" :as acc]\r\n      [cljs-ipfs-api.core :as icore :refer [init-ipfs]]\r\n      [cljs-ipfs-api.files :as ifiles]\r\n     )\r\n)\r\n\r\n(defn emptyField [field]\r\n    (= (count @field) 0)\r\n)\r\n\r\n(defn emptyPhoto [photo]\r\n  (nil? @photo)\r\n)\r\n\r\n(defn is-pwd-matched [password pwdConfirm]\r\n  (= @password @pwdConfirm))\r\n\r\n(def step-ref (atom \"\"))\r\n\r\n(def loading-ref (atom \"\"))\r\n\r\n(defn ^:export toLoginPage []\r\n  (reset! @step-ref 2))\r\n\r\n(defn ^:export stopLoading []\r\n  (reset! @loading-ref false))\r\n\r\n(defn submitProfile [name password photo details loading step]\r\n  (reset! loading-ref loading)\r\n  (reset! loading true)\r\n  (println (str \"account: \" (:account @details) \" loading: \" @loading))\r\n  (swap! details assoc :name @name)\r\n  (ifiles/add @photo\r\n              (fn [err files]\r\n                (if err\r\n                  (println (str \"err: \" err))\r\n                  (let [hash (. (. js/JSON parse files) -Hash)]\r\n                    (println hash)))))\r\n  ;;(let [photo-details (ifiles/add @photo)]\r\n  ;;  (println photo-details))\r\n  (acc/register @name @password)\r\n)\r\n\r\n(defn registrationPage [{:keys [details step]}]\r\n    (let [name (r/atom nil) password (r/atom nil) pwdConfirm (r/atom nil) profilePic (r/atom nil) loading (r/atom false)]\r\n      (reset! step-ref step)\r\n        (do \r\n            (init-ipfs)\r\n            (fn [] \r\n                [:div\r\n                    {:style {:height \"100%\" :display \"flex\" :justify-content \"center\" :align-items \"center\"}}\r\n                    [box \r\n                        {:sx {:height \"500px\" \r\n                                :width \"350px\" \r\n                                :background-color \"#FFFEF7\"\r\n                                :border-radius \"30px\"\r\n                                :display \"flex\"\r\n                                :flex-direction \"column\"\r\n                                :justify-content \"space-between\"\r\n                                :padding \"50px 30px\"}}\r\n\r\n                        [typography\r\n                            {:variant \"h5\"\r\n                            :component \"div\"}\r\n                            \"Create your WeJure profile\"\r\n                        ]\r\n\r\n                        [:div\r\n                            {:style {:display \"flex\"\r\n                                    :flex-direction \"column\"}}\r\n\r\n                            [typography\r\n                                {:variant \"h6\"\r\n                                :component \"div\"}\r\n                                \"1. Create a username\"\r\n                            ]\r\n\r\n                            [text-field\r\n                                {:variant \"filled\"\r\n                                :value @name\r\n                                :on-change (fn [e] (reset! name (.. e -target -value)))\r\n                                :error (emptyField name)\r\n                                :helper-text (if (emptyField name) \"no text entered (20 characters max)\" \" \")\r\n                                :input-props {:max-length 20}}\r\n                            ]\r\n                        ]\r\n                        \r\n                        [:div\r\n                         {:style {:display \"flex\"\r\n                                  :flex-direction \"column\"}}\r\n\r\n                         [typography\r\n                          {:variant \"h6\"\r\n                           :component \"div\"}\r\n                          \"2. Create a password (at least 8 digits)\"]\r\n\r\n                         [text-field\r\n                          {:variant \"filled\"\r\n                           :type \"password\"\r\n                           :value @password\r\n                           :on-change (fn [e] (reset! password (.. e -target -value)))\r\n                           :error (emptyField password)\r\n                           :helper-text (if (emptyField password) \"no text entered (20 characters max)\" \" \")\r\n                           :input-props {:max-length 20}}]]\r\n                        \r\n                        [:div\r\n                         {:style {:display \"flex\"\r\n                                  :flex-direction \"column\"}}\r\n\r\n                         [typography\r\n                          {:variant \"h6\"\r\n                           :component \"div\"}\r\n                          \"3. Confirm your password\"]\r\n\r\n                         [text-field\r\n                          {:variant \"filled\"\r\n                           :type \"password\"\r\n                           :value @pwdConfirm\r\n                           :on-change (fn [e] (reset! pwdConfirm (.. e -target -value)))\r\n                           :error (emptyField pwdConfirm)\r\n                           :helper-text (if (emptyField pwdConfirm) \"no text entered (20 characters max)\" (if (is-pwd-matched password pwdConfirm) \" \" \"Passwords do not match\"))\r\n                           :input-props {:max-length 20}}]]\r\n                        \r\n                        [:div\r\n                            {:style {:display \"flex\"\r\n                                    :flex-direction \"column\"}}\r\n\r\n                            [typography\r\n                                {:variant \"h6\"\r\n                                :component \"div\"}\r\n                                \"3. Upload a profile picture\"\r\n                            ]\r\n\r\n                            [:label \r\n                                {:html-for \"upload-image\" :style {:margin \"0 auto\"}}\r\n                                [:input \r\n                                {:accept \"image/*\"\r\n                                :id \"upload-image\"\r\n                                :type \"file\"\r\n                                :style {:display \"none\"}\r\n                                :on-change #(let [uploaded (-> % .-target .-files (aget 0))] (reset! profilePic uploaded))}]\r\n                                [icon-button \r\n                                    {:component \"span\"}\r\n                                    [add-a-photo-sharp]]]\r\n\r\n                            [typography\r\n                                {:variant \"h6\"\r\n                                :component \"div\"\r\n                                :sx {:color (if (emptyPhoto profilePic)  \"#d32f2f\" \"#070707\")\r\n                                :font-size \"12px\"\r\n                                :font-weight \"500\"\r\n                                :text-align \"center\"}}\r\n                                (if (emptyPhoto profilePic) \"no photo uploaded\" (.-name @profilePic))]\r\n                        ]\r\n\r\n                        [:div\r\n                            {:style {:display \"flex\"\r\n                                    :flex-direction \"column\"\r\n                                    :align-items \"center\"}}\r\n                            [button\r\n                                {:variant \"contained\"\r\n                                :disable-elevation true\r\n                                :disabled (or (emptyField name) (emptyField password) (emptyPhoto profilePic) (not (is-pwd-matched password pwdConfirm)) @loading)\r\n                                :on-click #(submitProfile name password profilePic details loading step)}\r\n                                \"Submit\"]\r\n                            [circular-progress {:sx {:margin \"10px\" :visibility (when (not @loading) \"hidden\")}}]\r\n                        ]\r\n                    ]\r\n                ]  \r\n            )\r\n        )\r\n    )\r\n)"]}