{
"version":3,
"file":"module$node_modules$web3_utils$lib$utils.js",
"lineCount":12,
"mappings":"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",
"sources":["node_modules/web3-utils/lib/utils.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$web3_utils$lib$utils\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n/*\n This file is part of web3.js.\n\n web3.js is free software: you can redistribute it and/or modify\n it under the terms of the GNU Lesser General Public License as published by\n the Free Software Foundation, either version 3 of the License, or\n (at your option) any later version.\n\n web3.js is distributed in the hope that it will be useful,\n but WITHOUT ANY WARRANTY; without even the implied warranty of\n MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n GNU Lesser General Public License for more details.\n\n You should have received a copy of the GNU Lesser General Public License\n along with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n */\n/**\n * @file utils.js\n * @author Fabian Vogelsteller <fabian@ethereum.org>\n * @date 2017\n */\nvar BN = require('bn.js');\nvar numberToBN = require('number-to-bn');\nvar utf8 = require('utf8');\nvar ethereumjsUtil = require('ethereumjs-util');\nvar ethereumBloomFilters = require('ethereum-bloom-filters');\n/**\n * Returns true if object is BN, otherwise false\n *\n * @method isBN\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBN = function (object) {\n    return BN.isBN(object);\n};\n/**\n * Returns true if object is BigNumber, otherwise false\n *\n * @method isBigNumber\n * @param {Object} object\n * @return {Boolean}\n */\nvar isBigNumber = function (object) {\n    return object && object.constructor && object.constructor.name === 'BigNumber';\n};\n/**\n * Takes an input and transforms it into an BN\n *\n * @method toBN\n * @param {Number|String|BN} number, string, HEX string or BN\n * @return {BN} BN\n */\nvar toBN = function (number) {\n    try {\n        return numberToBN.apply(null, arguments);\n    }\n    catch (e) {\n        throw new Error(e + ' Given value: \"' + number + '\"');\n    }\n};\n/**\n * Takes and input transforms it into BN and if it is negative value, into two's complement\n *\n * @method toTwosComplement\n * @param {Number|String|BN} number\n * @return {String}\n */\nvar toTwosComplement = function (number) {\n    return '0x' + toBN(number).toTwos(256).toString(16, 64);\n};\n/**\n * Checks if the given string is an address\n *\n * @method isAddress\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar isAddress = function (address) {\n    // check if it has the basic requirements of an address\n    if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n        return false;\n        // If it's ALL lowercase or ALL upppercase\n    }\n    else if (/^(0x|0X)?[0-9a-f]{40}$/.test(address) || /^(0x|0X)?[0-9A-F]{40}$/.test(address)) {\n        return true;\n        // Otherwise check each case\n    }\n    else {\n        return checkAddressChecksum(address);\n    }\n};\n/**\n * Checks if the given string is a checksummed address\n *\n * @method checkAddressChecksum\n * @param {String} address the given HEX address\n * @return {Boolean}\n */\nvar checkAddressChecksum = function (address) {\n    // Check each case\n    address = address.replace(/^0x/i, '');\n    var addressHash = sha3(address.toLowerCase()).replace(/^0x/i, '');\n    for (var i = 0; i < 40; i++) {\n        // the nth letter should be uppercase if the nth digit of casemap is 1\n        if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method leftPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar leftPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + new Array(padding).join(sign ? sign : \"0\") + string;\n};\n/**\n * Should be called to pad string to expected length\n *\n * @method rightPad\n * @param {String} string to be padded\n * @param {Number} chars that result string should have\n * @param {String} sign, by default 0\n * @returns {String} right aligned string\n */\nvar rightPad = function (string, chars, sign) {\n    var hasPrefix = /^0x/i.test(string) || typeof string === 'number';\n    string = string.toString(16).replace(/^0x/i, '');\n    var padding = (chars - string.length + 1 >= 0) ? chars - string.length + 1 : 0;\n    return (hasPrefix ? '0x' : '') + string + (new Array(padding).join(sign ? sign : \"0\"));\n};\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @method utf8ToHex\n * @param {String} str\n * @returns {String} hex representation of input string\n */\nvar utf8ToHex = function (str) {\n    str = utf8.encode(str);\n    var hex = \"\";\n    // remove \\u0000 padding from either side\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    str = str.replace(/^(?:\\u0000)*/, '');\n    str = str.split(\"\").reverse().join(\"\");\n    for (var i = 0; i < str.length; i++) {\n        var code = str.charCodeAt(i);\n        // if (code !== 0) {\n        var n = code.toString(16);\n        hex += n.length < 2 ? '0' + n : n;\n        // }\n    }\n    return \"0x\" + hex;\n};\n/**\n * Should be called to get utf8 from it's hex representation\n *\n * @method hexToUtf8\n * @param {String} hex\n * @returns {String} ascii string representation of hex value\n */\nvar hexToUtf8 = function (hex) {\n    if (!isHexStrict(hex))\n        throw new Error('The parameter \"' + hex + '\" must be a valid HEX string.');\n    var str = \"\";\n    var code = 0;\n    hex = hex.replace(/^0x/i, '');\n    // remove 00 padding from either side\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    hex = hex.replace(/^(?:00)*/, '');\n    hex = hex.split(\"\").reverse().join(\"\");\n    var l = hex.length;\n    for (var i = 0; i < l; i += 2) {\n        code = parseInt(hex.substr(i, 2), 16);\n        // if (code !== 0) {\n        str += String.fromCharCode(code);\n        // }\n    }\n    return utf8.decode(str);\n};\n/**\n * Converts value to it's number representation\n *\n * @method hexToNumber\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumber = function (value) {\n    if (!value) {\n        return value;\n    }\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toNumber();\n};\n/**\n * Converts value to it's decimal representation in string\n *\n * @method hexToNumberString\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar hexToNumberString = function (value) {\n    if (!value)\n        return value;\n    if (typeof value === 'string' && !isHexStrict(value)) {\n        throw new Error('Given value \"' + value + '\" is not a valid hex string.');\n    }\n    return toBN(value).toString(10);\n};\n/**\n * Converts value to it's hex representation\n *\n * @method numberToHex\n * @param {String|Number|BN} value\n * @return {String}\n */\nvar numberToHex = function (value) {\n    if ((value === null || value === undefined)) {\n        return value;\n    }\n    if (!isFinite(value) && !isHexStrict(value)) {\n        throw new Error('Given input \"' + value + '\" is not a number.');\n    }\n    var number = toBN(value);\n    var result = number.toString(16);\n    return number.lt(new BN(0)) ? '-0x' + result.substr(1) : '0x' + result;\n};\n/**\n * Convert a byte array to a hex string\n *\n * Note: Implementation from crypto-js\n *\n * @method bytesToHex\n * @param {Array} bytes\n * @return {String} the hex string\n */\nvar bytesToHex = function (bytes) {\n    for (var hex = [], i = 0; i < bytes.length; i++) {\n        /* jshint ignore:start */\n        hex.push((bytes[i] >>> 4).toString(16));\n        hex.push((bytes[i] & 0xF).toString(16));\n        /* jshint ignore:end */\n    }\n    return '0x' + hex.join(\"\");\n};\n/**\n * Convert a hex string to a byte array\n *\n * Note: Implementation from crypto-js\n *\n * @method hexToBytes\n * @param {string} hex\n * @return {Array} the byte array\n */\nvar hexToBytes = function (hex) {\n    hex = hex.toString(16);\n    if (!isHexStrict(hex)) {\n        throw new Error('Given value \"' + hex + '\" is not a valid hex string.');\n    }\n    hex = hex.replace(/^0x/i, '');\n    for (var bytes = [], c = 0; c < hex.length; c += 2)\n        bytes.push(parseInt(hex.substr(c, 2), 16));\n    return bytes;\n};\n/**\n * Auto converts any given value into it's hex representation.\n *\n * And even stringifys objects before.\n *\n * @method toHex\n * @param {String|Number|BN|Object|Buffer} value\n * @param {Boolean} returnType\n * @return {String}\n */\nvar toHex = function (value, returnType) {\n    /*jshint maxcomplexity: false */\n    if (isAddress(value)) {\n        return returnType ? 'address' : '0x' + value.toLowerCase().replace(/^0x/i, '');\n    }\n    if (typeof value === 'boolean') {\n        return returnType ? 'bool' : value ? '0x01' : '0x00';\n    }\n    if (Buffer.isBuffer(value)) {\n        return '0x' + value.toString('hex');\n    }\n    if (typeof value === 'object' && !!value && !isBigNumber(value) && !isBN(value)) {\n        return returnType ? 'string' : utf8ToHex(JSON.stringify(value));\n    }\n    // if its a negative number, pass it through numberToHex\n    if (typeof value === 'string') {\n        if (value.indexOf('-0x') === 0 || value.indexOf('-0X') === 0) {\n            return returnType ? 'int256' : numberToHex(value);\n        }\n        else if (value.indexOf('0x') === 0 || value.indexOf('0X') === 0) {\n            return returnType ? 'bytes' : value;\n        }\n        else if (!isFinite(value)) {\n            return returnType ? 'string' : utf8ToHex(value);\n        }\n    }\n    return returnType ? (value < 0 ? 'int256' : 'uint256') : numberToHex(value);\n};\n/**\n * Check if string is HEX, requires a 0x in front\n *\n * @method isHexStrict\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHexStrict = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-)?0x[0-9a-f]*$/i.test(hex));\n};\n/**\n * Check if string is HEX\n *\n * @method isHex\n * @param {String} hex to be checked\n * @returns {Boolean}\n */\nvar isHex = function (hex) {\n    return ((typeof hex === 'string' || typeof hex === 'number') && /^(-0x|0x)?[0-9a-f]*$/i.test(hex));\n};\n/**\n * Remove 0x prefix from string\n *\n * @method stripHexPrefix\n * @param {String} str to be checked\n * @returns {String}\n */\nvar stripHexPrefix = function (str) {\n    if (str !== 0 && isHex(str))\n        return str.replace(/^(-)?0x/i, '$1');\n    return str;\n};\n/**\n * Returns true if given string is a valid Ethereum block header bloom.\n *\n * @method isBloom\n * @param {String} bloom encoded bloom filter\n * @return {Boolean}\n */\nvar isBloom = function (bloom) {\n    return ethereumBloomFilters.isBloom(bloom);\n};\n/**\n * Returns true if the ethereum users address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} ethereumAddress encoded bloom filter\n * @param {String} bloom ethereum addresss\n * @return {Boolean}\n */\nvar isUserEthereumAddressInBloom = function (bloom, ethereumAddress) {\n    return ethereumBloomFilters.isUserEthereumAddressInBloom(bloom, ethereumAddress);\n};\n/**\n * Returns true if the contract address is part of the given bloom\n * note: false positives are possible.\n *\n * @method isUserEthereumAddressInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} contractAddress contract addresss\n * @return {Boolean}\n */\nvar isContractAddressInBloom = function (bloom, contractAddress) {\n    return ethereumBloomFilters.isContractAddressInBloom(bloom, contractAddress);\n};\n/**\n * Returns true if given string is a valid log topic.\n *\n * @method isTopic\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopic = function (topic) {\n    return ethereumBloomFilters.isTopic(topic);\n};\n/**\n * Returns true if the topic is part of the given bloom\n * note: false positives are possible.\n *\n * @method isTopicInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String} topic encoded topic\n * @return {Boolean}\n */\nvar isTopicInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isTopicInBloom(bloom, topic);\n};\n/**\n * Returns true if the value is part of the given bloom\n * note: false positives are possible.\n *\n * @method isInBloom\n * @param {String} bloom encoded bloom filter\n * @param {String | Uint8Array} topic encoded value\n * @return {Boolean}\n */\nvar isInBloom = function (bloom, topic) {\n    return ethereumBloomFilters.isInBloom(bloom, topic);\n};\n/**\n * Hashes values to a sha3 hash using keccak 256\n *\n * To hash a HEX string the hex must have 0x in front.\n *\n * @method sha3\n * @return {String} the sha3 string\n */\nvar SHA3_NULL_S = '0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\nvar sha3 = function (value) {\n    if (isBN(value)) {\n        value = value.toString();\n    }\n    if (isHexStrict(value) && /^0x/i.test((value).toString())) {\n        value = ethereumjsUtil.toBuffer(value);\n    }\n    else if (typeof value === 'string') {\n        // Assume value is an arbitrary string\n        value = Buffer.from(value, 'utf-8');\n    }\n    var returnValue = ethereumjsUtil.bufferToHex(ethereumjsUtil.keccak256(value));\n    if (returnValue === SHA3_NULL_S) {\n        return null;\n    }\n    else {\n        return returnValue;\n    }\n};\n// expose the under the hood keccak256\nsha3._Hash = ethereumjsUtil.keccak256;\n/**\n * @method sha3Raw\n *\n * @param value\n *\n * @returns {string}\n */\nvar sha3Raw = function (value) {\n    value = sha3(value);\n    if (value === null) {\n        return SHA3_NULL_S;\n    }\n    return value;\n};\n/**\n * Auto converts any given value into it's hex representation,\n * then converts hex to number.\n *\n * @method toNumber\n * @param {String|Number|BN} value\n * @return {Number}\n */\nvar toNumber = function (value) {\n    return typeof value === 'number' ? value : hexToNumber(toHex(value));\n};\nmodule.exports = {\n    BN: BN,\n    isBN: isBN,\n    isBigNumber: isBigNumber,\n    toBN: toBN,\n    isAddress: isAddress,\n    isBloom: isBloom,\n    isUserEthereumAddressInBloom: isUserEthereumAddressInBloom,\n    isContractAddressInBloom: isContractAddressInBloom,\n    isTopic: isTopic,\n    isTopicInBloom: isTopicInBloom,\n    isInBloom: isInBloom,\n    checkAddressChecksum: checkAddressChecksum,\n    utf8ToHex: utf8ToHex,\n    hexToUtf8: hexToUtf8,\n    hexToNumber: hexToNumber,\n    hexToNumberString: hexToNumberString,\n    numberToHex: numberToHex,\n    toHex: toHex,\n    hexToBytes: hexToBytes,\n    bytesToHex: bytesToHex,\n    isHex: isHex,\n    isHexStrict: isHexStrict,\n    stripHexPrefix: stripHexPrefix,\n    leftPad: leftPad,\n    rightPad: rightPad,\n    toTwosComplement: toTwosComplement,\n    sha3: sha3,\n    sha3Raw: sha3Raw,\n    toNumber: toNumber\n};\n\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","BN","numberToBN","utf8","ethereumjsUtil","ethereumBloomFilters","isBN","object","isBigNumber","constructor","name","toBN","number","apply","arguments","e","Error","isAddress","address","test","checkAddressChecksum","replace","addressHash","sha3","toLowerCase","i","parseInt","toUpperCase","utf8ToHex","str","encode","hex","split","reverse","join","length","n","charCodeAt","code","toString","hexToNumber","value","isHexStrict","toNumber","numberToHex","undefined","isFinite","result","lt","substr","toHex","returnType","isBuffer","JSON","stringify","indexOf","isHex","toBuffer","from","returnValue","bufferToHex","keccak256","SHA3_NULL_S","_Hash","isBloom","bloom","isUserEthereumAddressInBloom","ethereumAddress","isContractAddressInBloom","contractAddress","isTopic","topic","isTopicInBloom","isInBloom","hexToUtf8","l","String","fromCharCode","decode","hexToNumberString","hexToBytes","bytes","c","push","bytesToHex","stripHexPrefix","leftPad","string","chars","sign","hasPrefix","Array","padding","rightPad","toTwosComplement","toTwos","sha3Raw"]
}
