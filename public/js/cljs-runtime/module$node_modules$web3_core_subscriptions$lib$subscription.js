shadow$provide.module$node_modules$web3_core_subscriptions$lib$subscription=function(global,require,module,exports){function identity(value){return value}function Subscription(options){EventEmitter.call(this);this.id=null;this.callback=identity;this.lastBlock=this.arguments=null;this.options={subscription:options.subscription,type:options.type,requestManager:options.requestManager}}var errors=require("module$node_modules$web3_core_helpers$lib$index").errors,EventEmitter=require("module$node_modules$eventemitter3$index"),
formatters=require("module$node_modules$web3_core_helpers$lib$index").formatters;Subscription.prototype=Object.create(EventEmitter.prototype);Subscription.prototype.constructor=Subscription;Subscription.prototype._extractCallback=function(args){if("function"===typeof args[args.length-1])return args.pop()};Subscription.prototype._validateArgs=function(args){var subscription=this.options.subscription;subscription||(subscription={});subscription.params||(subscription.params=0);if(args.length!==subscription.params)throw errors.InvalidNumberOfParams(args.length,
subscription.params,subscription.subscriptionName);};Subscription.prototype._formatInput=function(args){var subscription=this.options.subscription;return subscription&&subscription.inputFormatter?subscription.inputFormatter.map(function(formatter,index){return formatter?formatter(args[index]):args[index]}):args};Subscription.prototype._formatOutput=function(result){var subscription=this.options.subscription;return subscription&&subscription.outputFormatter&&result?subscription.outputFormatter(result):
result};Subscription.prototype._toPayload=function(args){var params=[];this.callback=this._extractCallback(args)||identity;this.subscriptionMethod||(this.subscriptionMethod=args.shift(),this.options.subscription.subscriptionName&&(this.subscriptionMethod=this.options.subscription.subscriptionName));this.arguments||(this.arguments=this._formatInput(args),this._validateArgs(this.arguments),args=[]);params.push(this.subscriptionMethod);params=params.concat(this.arguments);if(args.length)throw Error("Only a callback is allowed as parameter on an already instantiated subscription.");
return{method:this.options.type+"_subscribe",params}};Subscription.prototype.unsubscribe=function(callback){this.options.requestManager.removeSubscription(this.id,callback);this.lastBlock=this.id=null;this.removeAllListeners()};Subscription.prototype.subscribe=function(){var _this=this,args=Array.prototype.slice.call(arguments),payload=this._toPayload(args);if(!payload)return this;if(!this.options.requestManager.provider)return setTimeout(function(){var err1=Error("No provider set.");_this.callback(err1,
null,_this);_this.emit("error",err1)},0),this;if(!this.options.requestManager.provider.on)return setTimeout(function(){var err2=Error("The current provider doesn't support subscriptions: "+_this.options.requestManager.provider.constructor.name);_this.callback(err2,null,_this);_this.emit("error",err2)},0),this;this.lastBlock&&this.options.params&&"object"===typeof this.options.params&&(payload.params[1]=this.options.params,payload.params[1].fromBlock=formatters.inputBlockNumberFormatter(this.lastBlock+
1));this.id&&this.unsubscribe();this.options.params=payload.params[1];"logs"===payload.params[0]&&payload.params[1]&&"object"===typeof payload.params[1]&&payload.params[1].hasOwnProperty("fromBlock")&&isFinite(payload.params[1].fromBlock)&&(args=Object.assign({},payload.params[1]),this.options.requestManager.send({method:"eth_getLogs",params:[args]},function(err,logs){err?setTimeout(function(){_this.callback(err,null,_this);_this.emit("error",err)},0):logs.forEach(function(log){log=_this._formatOutput(log);
_this.callback(null,log,_this);_this.emit("data",log)})}));"object"===typeof payload.params[1]&&delete payload.params[1].fromBlock;this.options.requestManager.send(payload,function(err,result$jscomp$0){!err&&result$jscomp$0?(_this.id=result$jscomp$0,_this.method=payload.params[0],_this.options.requestManager.addSubscription(_this,function(error,result){error?(_this.callback(error,!1,_this),_this.emit("error",error)):(Array.isArray(result)||(result=[result]),result.forEach(function(resultItem){resultItem=
_this._formatOutput(resultItem);_this.lastBlock=resultItem&&"object"===typeof resultItem?resultItem.blockNumber:null;if("function"===typeof _this.options.subscription.subscriptionHandler)return _this.options.subscription.subscriptionHandler.call(_this,resultItem);_this.emit("data",resultItem);_this.callback(null,resultItem,_this)}))}),_this.emit("connected",result$jscomp$0)):setTimeout(function(){_this.callback(err,!1,_this);_this.emit("error",err)},0)});return this};Subscription.prototype.resubscribe=
function(){this.options.requestManager.removeSubscription(this.id);this.id=null;this.subscribe(this.callback)};module.exports=Subscription}
//# sourceMappingURL=module$node_modules$web3_core_subscriptions$lib$subscription.js.map
