{
"version":3,
"file":"module$node_modules$$ethereumjs$tx$dist_browser$legacyTransaction.js",
"lineCount":18,
"mappings":"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",
"sources":["node_modules/@ethereumjs/tx/dist.browser/legacyTransaction.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$$ethereumjs$tx$dist_browser$legacyTransaction\"] = function(global,require,module,exports) {\nvar Buffer = require('buffer').Buffer;\n\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ethereumjs_util_1 = require(\"ethereumjs-util\");\nvar types_1 = require(\"./types\");\nvar baseTransaction_1 = require(\"./baseTransaction\");\nvar TRANSACTION_TYPE = 0;\n/**\n * An Ethereum non-typed (legacy) transaction\n */\nvar Transaction = /** @class */ (function (_super) {\n    __extends(Transaction, _super);\n    /**\n     * This constructor takes the values, validates them, assigns them and freezes the object.\n     *\n     * It is not recommended to use this constructor directly. Instead use\n     * the static factory methods to assist in creating a Transaction object from\n     * varying data types.\n     */\n    function Transaction(txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        var _a;\n        var _this = _super.call(this, __assign(__assign({}, txData), { type: TRANSACTION_TYPE })) || this;\n        _this.common = _this._validateTxV(_this.v, opts.common);\n        _this.gasPrice = new ethereumjs_util_1.BN((0, ethereumjs_util_1.toBuffer)(txData.gasPrice === '' ? '0x' : txData.gasPrice));\n        if (_this.gasPrice.mul(_this.gasLimit).gt(ethereumjs_util_1.MAX_INTEGER)) {\n            var msg = _this._errorMsg('gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)');\n            throw new Error(msg);\n        }\n        _this._validateCannotExceedMaxInteger({ gasPrice: _this.gasPrice });\n        if (_this.common.gteHardfork('spuriousDragon')) {\n            if (!_this.isSigned()) {\n                _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n            }\n            else {\n                // EIP155 spec:\n                // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36\n                // then when computing the hash of a transaction for purposes of signing or recovering\n                // instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data)\n                // hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n                var v = _this.v;\n                var chainIdDoubled = _this.common.chainIdBN().muln(2);\n                // v and chain ID meet EIP-155 conditions\n                if (v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36))) {\n                    _this.activeCapabilities.push(types_1.Capability.EIP155ReplayProtection);\n                }\n            }\n        }\n        var freeze = (_a = opts === null || opts === void 0 ? void 0 : opts.freeze) !== null && _a !== void 0 ? _a : true;\n        if (freeze) {\n            Object.freeze(_this);\n        }\n        return _this;\n    }\n    /**\n     * Instantiate a transaction from a data dictionary.\n     *\n     * Format: { nonce, gasPrice, gasLimit, to, value, data, v, r, s }\n     *\n     * Notes:\n     * - All parameters are optional and have some basic default values\n     */\n    Transaction.fromTxData = function (txData, opts) {\n        if (opts === void 0) { opts = {}; }\n        return new Transaction(txData, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     */\n    Transaction.fromSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        var values = ethereumjs_util_1.rlp.decode(serialized);\n        if (!Array.isArray(values)) {\n            throw new Error('Invalid serialized tx input. Must be array');\n        }\n        return this.fromValuesArray(values, opts);\n    };\n    /**\n     * Instantiate a transaction from the serialized tx.\n     * (alias of {@link Transaction.fromSerializedTx})\n     *\n     * @deprecated this constructor alias is deprecated and will be removed\n     * in favor of the {@link Transaction.fromSerializedTx} constructor\n     */\n    Transaction.fromRlpSerializedTx = function (serialized, opts) {\n        if (opts === void 0) { opts = {}; }\n        return Transaction.fromSerializedTx(serialized, opts);\n    };\n    /**\n     * Create a transaction from a values array.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     */\n    Transaction.fromValuesArray = function (values, opts) {\n        if (opts === void 0) { opts = {}; }\n        // If length is not 6, it has length 9. If v/r/s are empty Buffers, it is still an unsigned transaction\n        // This happens if you get the RLP data from `raw()`\n        if (values.length !== 6 && values.length !== 9) {\n            throw new Error('Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).');\n        }\n        var _a = __read(values, 9), nonce = _a[0], gasPrice = _a[1], gasLimit = _a[2], to = _a[3], value = _a[4], data = _a[5], v = _a[6], r = _a[7], s = _a[8];\n        (0, ethereumjs_util_1.validateNoLeadingZeroes)({ nonce: nonce, gasPrice: gasPrice, gasLimit: gasLimit, value: value, v: v, r: r, s: s });\n        return new Transaction({\n            nonce: nonce,\n            gasPrice: gasPrice,\n            gasLimit: gasLimit,\n            to: to,\n            value: value,\n            data: data,\n            v: v,\n            r: r,\n            s: s,\n        }, opts);\n    };\n    /**\n     * Returns a Buffer Array of the raw Buffers of the legacy transaction, in order.\n     *\n     * Format: `[nonce, gasPrice, gasLimit, to, value, data, v, r, s]`\n     *\n     * For legacy txs this is also the correct format to add transactions\n     * to a block with {@link Block.fromValuesArray} (use the `serialize()` method\n     * for typed txs).\n     *\n     * For an unsigned tx this method returns the empty Buffer values\n     * for the signature parameters `v`, `r` and `s`. For an EIP-155 compliant\n     * representation have a look at {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.raw = function () {\n        return [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n            this.v !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.v) : Buffer.from([]),\n            this.r !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.r) : Buffer.from([]),\n            this.s !== undefined ? (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.s) : Buffer.from([]),\n        ];\n    };\n    /**\n     * Returns the serialized encoding of the legacy transaction.\n     *\n     * Format: `rlp([nonce, gasPrice, gasLimit, to, value, data, v, r, s])`\n     *\n     * For an unsigned tx this method uses the empty Buffer values for the\n     * signature parameters `v`, `r` and `s` for encoding. For an EIP-155 compliant\n     * representation for external signing use {@link Transaction.getMessageToSign}.\n     */\n    Transaction.prototype.serialize = function () {\n        return ethereumjs_util_1.rlp.encode(this.raw());\n    };\n    Transaction.prototype._getMessageToSign = function () {\n        var values = [\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.nonce),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasPrice),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.gasLimit),\n            this.to !== undefined ? this.to.buf : Buffer.from([]),\n            (0, ethereumjs_util_1.bnToUnpaddedBuffer)(this.value),\n            this.data,\n        ];\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            values.push((0, ethereumjs_util_1.toBuffer)(this.common.chainIdBN()));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n            values.push((0, ethereumjs_util_1.unpadBuffer)((0, ethereumjs_util_1.toBuffer)(0)));\n        }\n        return values;\n    };\n    Transaction.prototype.getMessageToSign = function (hashMessage) {\n        if (hashMessage === void 0) { hashMessage = true; }\n        var message = this._getMessageToSign();\n        if (hashMessage) {\n            return (0, ethereumjs_util_1.rlphash)(message);\n        }\n        else {\n            return message;\n        }\n    };\n    /**\n     * The amount of gas paid for the data in this tx\n     */\n    Transaction.prototype.getDataFee = function () {\n        if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) {\n            return this.cache.dataFee.value;\n        }\n        if (Object.isFrozen(this)) {\n            this.cache.dataFee = {\n                value: _super.prototype.getDataFee.call(this),\n                hardfork: this.common.hardfork(),\n            };\n        }\n        return _super.prototype.getDataFee.call(this);\n    };\n    /**\n     * The up front amount that an account must have for this transaction to be valid\n     */\n    Transaction.prototype.getUpfrontCost = function () {\n        return this.gasLimit.mul(this.gasPrice).add(this.value);\n    };\n    /**\n     * Computes a sha3-256 hash of the serialized tx.\n     *\n     * This method can only be used for signed txs (it throws otherwise).\n     * Use {@link Transaction.getMessageToSign} to get a tx hash for the purpose of signing.\n     */\n    Transaction.prototype.hash = function () {\n        // In contrast to the tx type transaction implementations the `hash()` function\n        // for the legacy tx does not throw if the tx is not signed.\n        // This has been considered for inclusion but lead to unexpected backwards\n        // compatibility problems (no concrete reference found, needs validation).\n        //\n        // For context see also https://github.com/ethereumjs/ethereumjs-monorepo/pull/1445,\n        // September, 2021 as well as work done before.\n        //\n        // This should be updated along the next major version release by adding:\n        //\n        //if (!this.isSigned()) {\n        //  const msg = this._errorMsg('Cannot call hash method if transaction is not signed')\n        //  throw new Error(msg)\n        //}\n        if (Object.isFrozen(this)) {\n            if (!this.cache.hash) {\n                this.cache.hash = (0, ethereumjs_util_1.rlphash)(this.raw());\n            }\n            return this.cache.hash;\n        }\n        return (0, ethereumjs_util_1.rlphash)(this.raw());\n    };\n    /**\n     * Computes a sha3-256 hash which can be used to verify the signature\n     */\n    Transaction.prototype.getMessageToVerifySignature = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var message = this._getMessageToSign();\n        return (0, ethereumjs_util_1.rlphash)(message);\n    };\n    /**\n     * Returns the public key of the sender\n     */\n    Transaction.prototype.getSenderPublicKey = function () {\n        var _a;\n        var msgHash = this.getMessageToVerifySignature();\n        // EIP-2: All transaction signatures whose s-value is greater than secp256k1n/2 are considered invalid.\n        // Reasoning: https://ethereum.stackexchange.com/a/55728\n        if (this.common.gteHardfork('homestead') && ((_a = this.s) === null || _a === void 0 ? void 0 : _a.gt(types_1.N_DIV_2))) {\n            var msg = this._errorMsg('Invalid Signature: s-values greater than secp256k1n/2 are considered invalid');\n            throw new Error(msg);\n        }\n        var _b = this, v = _b.v, r = _b.r, s = _b.s;\n        try {\n            return (0, ethereumjs_util_1.ecrecover)(msgHash, v, (0, ethereumjs_util_1.bnToUnpaddedBuffer)(r), (0, ethereumjs_util_1.bnToUnpaddedBuffer)(s), this.supports(types_1.Capability.EIP155ReplayProtection) ? this.common.chainIdBN() : undefined);\n        }\n        catch (e) {\n            var msg = this._errorMsg('Invalid Signature');\n            throw new Error(msg);\n        }\n    };\n    /**\n     * Process the v, r, s values from the `sign` method of the base transaction.\n     */\n    Transaction.prototype._processSignature = function (v, r, s) {\n        var vBN = new ethereumjs_util_1.BN(v);\n        if (this.supports(types_1.Capability.EIP155ReplayProtection)) {\n            vBN.iadd(this.common.chainIdBN().muln(2).addn(8));\n        }\n        var opts = {\n            common: this.common,\n        };\n        return Transaction.fromTxData({\n            nonce: this.nonce,\n            gasPrice: this.gasPrice,\n            gasLimit: this.gasLimit,\n            to: this.to,\n            value: this.value,\n            data: this.data,\n            v: vBN,\n            r: new ethereumjs_util_1.BN(r),\n            s: new ethereumjs_util_1.BN(s),\n        }, opts);\n    };\n    /**\n     * Returns an object with the JSON representation of the transaction.\n     */\n    Transaction.prototype.toJSON = function () {\n        return {\n            nonce: (0, ethereumjs_util_1.bnToHex)(this.nonce),\n            gasPrice: (0, ethereumjs_util_1.bnToHex)(this.gasPrice),\n            gasLimit: (0, ethereumjs_util_1.bnToHex)(this.gasLimit),\n            to: this.to !== undefined ? this.to.toString() : undefined,\n            value: (0, ethereumjs_util_1.bnToHex)(this.value),\n            data: '0x' + this.data.toString('hex'),\n            v: this.v !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.v) : undefined,\n            r: this.r !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.r) : undefined,\n            s: this.s !== undefined ? (0, ethereumjs_util_1.bnToHex)(this.s) : undefined,\n        };\n    };\n    /**\n     * Validates tx's `v` value\n     */\n    Transaction.prototype._validateTxV = function (v, common) {\n        var chainIdBN;\n        // No unsigned tx and EIP-155 activated and chain ID included\n        if (v !== undefined &&\n            !v.eqn(0) &&\n            (!common || common.gteHardfork('spuriousDragon')) &&\n            !v.eqn(27) &&\n            !v.eqn(28)) {\n            if (common) {\n                var chainIdDoubled = common.chainIdBN().muln(2);\n                var isValidEIP155V = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n                if (!isValidEIP155V) {\n                    throw new Error(\"Incompatible EIP155-based V \".concat(v, \" and chain id \").concat(common.chainIdBN(), \". See the Common parameter of the Transaction constructor to set the chain id.\"));\n                }\n            }\n            else {\n                // Derive the original chain ID\n                var numSub = void 0;\n                if (v.subn(35).isEven()) {\n                    numSub = 35;\n                }\n                else {\n                    numSub = 36;\n                }\n                // Use derived chain ID to create a proper Common\n                chainIdBN = v.subn(numSub).divn(2);\n            }\n        }\n        return this._getCommon(common, chainIdBN);\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._unsignedTxImplementsEIP155 = function () {\n        return this.common.gteHardfork('spuriousDragon');\n    };\n    /**\n     * @deprecated if you have called this internal method please use `tx.supports(Capabilities.EIP155ReplayProtection)` instead\n     */\n    Transaction.prototype._signedTxImplementsEIP155 = function () {\n        if (!this.isSigned()) {\n            var msg = this._errorMsg('This transaction is not signed');\n            throw new Error(msg);\n        }\n        var onEIP155BlockOrLater = this.common.gteHardfork('spuriousDragon');\n        // EIP155 spec:\n        // If block.number >= 2,675,000 and v = CHAIN_ID * 2 + 35 or v = CHAIN_ID * 2 + 36, then when computing the hash of a transaction for purposes of signing or recovering, instead of hashing only the first six elements (i.e. nonce, gasprice, startgas, to, value, data), hash nine elements, with v replaced by CHAIN_ID, r = 0 and s = 0.\n        var v = this.v;\n        var chainIdDoubled = this.common.chainIdBN().muln(2);\n        var vAndChainIdMeetEIP155Conditions = v.eq(chainIdDoubled.addn(35)) || v.eq(chainIdDoubled.addn(36));\n        return vAndChainIdMeetEIP155Conditions && onEIP155BlockOrLater;\n    };\n    /**\n     * Return a compact error string representation of the object\n     */\n    Transaction.prototype.errorStr = function () {\n        var errorStr = this._getSharedErrorPostfix();\n        errorStr += \" gasPrice=\".concat(this.gasPrice);\n        return errorStr;\n    };\n    /**\n     * Internal helper function to create an annotated error message\n     *\n     * @param msg Base error message\n     * @hidden\n     */\n    Transaction.prototype._errorMsg = function (msg) {\n        return \"\".concat(msg, \" (\").concat(this.errorStr(), \")\");\n    };\n    return Transaction;\n}(baseTransaction_1.BaseTransaction));\nexports.default = Transaction;\n//# sourceMappingURL=legacyTransaction.js.map\n};"],
"names":["shadow$provide","global","require","module","exports","Buffer","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","TypeError","String","create","__assign","assign","t","s","i","n","arguments","length","apply","__read","o","m","Symbol","iterator","r","ar","done","next","push","value","error","e","defineProperty","ethereumjs_util_1","types_1","Transaction","_super","txData","opts","_a","_this","type","TRANSACTION_TYPE","common","_validateTxV","v","gasPrice","BN","toBuffer","mul","gasLimit","gt","MAX_INTEGER","msg","_errorMsg","Error","_validateCannotExceedMaxInteger","gteHardfork","isSigned","chainIdDoubled","chainIdBN","muln","eq","addn","activeCapabilities","Capability","EIP155ReplayProtection","freeze","fromTxData","Transaction.fromTxData","fromSerializedTx","Transaction.fromSerializedTx","serialized","values","rlp","decode","isArray","fromValuesArray","fromRlpSerializedTx","Transaction.fromRlpSerializedTx","Transaction.fromValuesArray","nonce","to","data","validateNoLeadingZeroes","raw","Transaction.prototype.raw","bnToUnpaddedBuffer","undefined","buf","from","serialize","Transaction.prototype.serialize","encode","_getMessageToSign","Transaction.prototype._getMessageToSign","supports","unpadBuffer","getMessageToSign","Transaction.prototype.getMessageToSign","hashMessage","message","rlphash","getDataFee","Transaction.prototype.getDataFee","cache","dataFee","hardfork","isFrozen","getUpfrontCost","Transaction.prototype.getUpfrontCost","add","hash","Transaction.prototype.hash","getMessageToVerifySignature","Transaction.prototype.getMessageToVerifySignature","getSenderPublicKey","Transaction.prototype.getSenderPublicKey","msgHash","N_DIV_2","_b","ecrecover","_processSignature","Transaction.prototype._processSignature","vBN","iadd","toJSON","Transaction.prototype.toJSON","bnToHex","toString","Transaction.prototype._validateTxV","eqn","concat","numSub","subn","isEven","divn","_getCommon","_unsignedTxImplementsEIP155","Transaction.prototype._unsignedTxImplementsEIP155","_signedTxImplementsEIP155","Transaction.prototype._signedTxImplementsEIP155","onEIP155BlockOrLater","errorStr","Transaction.prototype.errorStr","_getSharedErrorPostfix","Transaction.prototype._errorMsg","baseTransaction_1","BaseTransaction","default"]
}
