{"version":3,"sources":["starter/components/photoForm.cljs"],"mappings":"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","names":["starter.components.photoForm/emptyDescription","description","cljs.core._EQ_","cljs.core/deref","cljs.core/count","starter.components.photoForm/emptyPhoto","photo","starter.components.photoForm/submitPhoto","contractInstance","loading","open","details","cljs.core/reset!","cljs_ipfs_api.files.add","err","files","cljs.core.println","hash","js/JSON","obj23591","error","txHash","p__23593","map__23594","cljs.core/--destructure-map","cljs.core.get","starter.components.photoForm/photoForm","reagent.core.atom","cljs_ipfs_api.core.init_ipfs","p1__23592#","reagent-mui.material.modal/modal","reagent-mui.material.box/box","reagent-mui.material.typography/typography","uploaded","reagent-mui.material.icon-button/icon-button","reagent-mui.icons.add-a-photo-sharp/add-a-photo-sharp","reagent-mui.material.text-field/text-field","e","reagent-mui.material.button/button","or__5045__auto__","reagent-mui.material.circular-progress/circular-progress","cljs.core/not"],"sourcesContent":["(ns starter.components.photoForm\r\n  (:require\r\n    [reagent.core :as r]\r\n    [reagent-mui.material.modal :refer [modal]]\r\n    [reagent-mui.material.alert :refer [alert]]\r\n    [reagent-mui.material.box :refer [box]]\r\n    [reagent-mui.material.circular-progress :refer [circular-progress]]\r\n    [reagent-mui.material.typography :refer [typography]]\r\n    [reagent-mui.material.button :refer [button]]\r\n    [reagent-mui.material.icon-button :refer [icon-button]]\r\n    [reagent-mui.icons.add-a-photo-sharp :refer [add-a-photo-sharp]]\r\n    [reagent-mui.material.text-field :refer [text-field]]\r\n    [starter.components.errorMessage :refer [errorMessage]]\r\n    [cljs-ipfs-api.core :as icore :refer [init-ipfs]]\r\n    [cljs-ipfs-api.files :as ifiles]\r\n))\r\n\r\n(defn emptyDescription [description]\r\n  (= (count @description) 0)\r\n)\r\n\r\n(defn emptyPhoto [photo]\r\n  (nil? @photo)\r\n)\r\n\r\n(defn submitPhoto [photo description contractInstance loading open details]\r\n  (do \r\n    (reset! loading true)\r\n    (ifiles/add @photo\r\n      (fn [err files]\r\n        (if err\r\n          (println (str \"err: \" err))\r\n          (let [hash (. (. js/JSON parse files) -Hash)]\r\n            (. ^js (. (. contractInstance -methods) setPicture hash @description) send (js-obj \"from\" (:account @details)) \r\n              (fn [error txHash] ;; callback\r\n                (if error \r\n                  (println error) \r\n                  (do \r\n                    (reset! loading false)\r\n                    (reset! open false)\r\n                  )\r\n                )\r\n              )\r\n            )\r\n          )\r\n        )\r\n      )\r\n    )\r\n  )\r\n)\r\n\r\n(defn photoForm [{:keys [open contractInstance details]}] \r\n  (let [photo (r/atom nil) description (r/atom nil) error (r/atom nil) loading (r/atom false)]\r\n    (do\r\n      (init-ipfs {:host \"https://ipfs.infura.io:5001\"})\r\n      (fn []\r\n        [:<>\r\n          [modal\r\n            {:open @open\r\n              :on-close #(do (reset! photo nil) (reset! description nil) (reset! open false))}\r\n            [box \r\n              {:sx {:box-shadow \"20\" \r\n                    :background-color \"#CAF0F8\"\r\n                    :padding \"30px\"\r\n                    :height \"350px\"\r\n                    :width \"400px\"\r\n                    :position \"absolute\"\r\n                    :top \"50%\"\r\n                    :left \"50%\"\r\n                    :transform \"translate(-50%, -50%)\"\r\n                    :border \"5px solid #5F939A\"\r\n                    :display \"flex\"\r\n                    :flex-direction \"column\"\r\n                    :align-items \"center\"}}\r\n              [typography\r\n                {:variant \"h6\"\r\n                  :component \"div\"\r\n                  :sx {:color \"#070707\"\r\n                        :font-weight \"100\"}}\r\n                \"Step 1: upload a photo\"]\r\n              [:hr\r\n                {:style {:width \"50%\"}}]\r\n              [:div\r\n                {:style {:display \"flex\"\r\n                          :flex-direction \"column\"\r\n                          :align-items \"center\"}}\r\n                [:label \r\n                  {:html-for \"upload-image\"}\r\n                  [:input \r\n                    {:accept \"image/*\"\r\n                      :id \"upload-image\"\r\n                      :type \"file\"\r\n                      :style {:display \"none\"}\r\n                      :on-change #(let [uploaded (-> % .-target .-files (aget 0))] (reset! photo uploaded))}]\r\n                  [icon-button \r\n                    {:component \"span\"}\r\n                    [add-a-photo-sharp]]]\r\n                [typography\r\n                  {:variant \"h6\"\r\n                    :component \"div\"\r\n                    :sx {:color (if (emptyPhoto photo)  \"#d32f2f\" \"#070707\")\r\n                          :font-size \"12px\"\r\n                          :font-weight \"500\"}}\r\n                  (if (emptyPhoto photo) \"no photo uploaded\" (.-name @photo))]\r\n              ]\r\n              [:div \r\n                {:style {:margin \"10px\"}}]\r\n              [typography\r\n                {:variant \"h6\"\r\n                  :component \"div\"\r\n                  :sx {:color \"#070707\"\r\n                        :font-weight \"100\"}}\r\n                \"Step 2: add a decription to your photo\"]\r\n              [:hr\r\n                {:style {:margin \"10px\"\r\n                          :width \"50%\"}}]\r\n              [:div\r\n                {:style {:height \"120px\"}}\r\n              [text-field\r\n                {:multiline true \r\n                  :rows 2\r\n                  :error (emptyDescription description)\r\n                  :helper-text (when (emptyDescription description) \"description cannot be empty\")\r\n                  :value @description\r\n                  :on-change (fn [e] (reset! description (.. e -target -value)))}]\r\n              ]\r\n              [:div \r\n                {:style {:margin \"10px\"}}]\r\n              [button \r\n                {:variant \"contained\"\r\n                  :disabled (or (emptyDescription description) (emptyPhoto photo) @loading)\r\n                  :disable-elevation true\r\n                  :on-click #(submitPhoto photo description contractInstance loading open details)}\r\n                \"Submit\"]\r\n              [circular-progress {:sx {:margin \"10px\" :visibility (when (not @loading) \"hidden\")}}]\r\n            ]\r\n          ]\r\n        ]\r\n      )\r\n    )\r\n  )\r\n)"]}